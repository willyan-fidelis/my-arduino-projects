
Teste.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002dc  00800100  00003bb8  00003c4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003bb8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000340  008003dc  008003dc  00003f28  2**0
                  ALLOC
  3 .stab         00003054  00000000  00000000  00003f28  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f87  00000000  00000000  00006f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000ce0  00000000  00000000  00007f08  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000c51  00000000  00000000  00008be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00019f3d  00000000  00000000  00009839  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000040e4  00000000  00000000  00023776  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000067a1  00000000  00000000  0002785a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000024dc  00000000  00000000  0002dffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00004ad9  00000000  00000000  000304d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000c774  00000000  00000000  00034fb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000ea8  00000000  00000000  00041725  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6d 00 	jmp	0xda	; 0xda <__dtors_end>
       4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
       8:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
       c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      10:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      14:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      18:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      1c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      20:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      24:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      28:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      2c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      30:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      34:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      38:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      3c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      40:	0c 94 6b 18 	jmp	0x30d6	; 0x30d6 <__vector_16>
      44:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      48:	0c 94 9a 19 	jmp	0x3334	; 0x3334 <__vector_18>
      4c:	0c 94 e8 19 	jmp	0x33d0	; 0x33d0 <__vector_19>
      50:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      54:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      58:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      5c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      60:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>
      64:	0c 94 95 00 	jmp	0x12a	; 0x12a <__bad_interrupt>

00000068 <_ZZN6SdFile10make83NameEPKcPhE3__c>:
      68:	7c 3c 3e 5e 2b 3d 3f 2f 5b 5d 3b 2c 2a 22 5c 00     |<>^+=?/[];,*"\.

00000078 <port_to_mode_PGM>:
      78:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

00000082 <port_to_output_PGM>:
      82:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000008c <port_to_input_PGM>:
      8c:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000096 <digital_pin_to_port_PGM>:
      96:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a6:	03 03 03 03                                         ....

000000aa <digital_pin_to_bit_mask_PGM>:
      aa:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      ba:	04 08 10 20                                         ... 

000000be <digital_pin_to_timer_PGM>:
      be:	00 00 00 07 00 02 01 00 00 03 04 06 00 00 00 00     ................
      ce:	00 00 00 00                                         ....

000000d2 <__ctors_start>:
      d2:	8b 04       	cpc	r8, r11
      d4:	34 06       	cpc	r3, r20
      d6:	54 1b       	sub	r21, r20

000000d8 <__ctors_end>:
      d8:	90 04       	cpc	r9, r0

000000da <__dtors_end>:
      da:	11 24       	eor	r1, r1
      dc:	1f be       	out	0x3f, r1	; 63
      de:	cf ef       	ldi	r28, 0xFF	; 255
      e0:	d8 e0       	ldi	r29, 0x08	; 8
      e2:	de bf       	out	0x3e, r29	; 62
      e4:	cd bf       	out	0x3d, r28	; 61

000000e6 <__do_copy_data>:
      e6:	13 e0       	ldi	r17, 0x03	; 3
      e8:	a0 e0       	ldi	r26, 0x00	; 0
      ea:	b1 e0       	ldi	r27, 0x01	; 1
      ec:	e8 eb       	ldi	r30, 0xB8	; 184
      ee:	fb e3       	ldi	r31, 0x3B	; 59
      f0:	02 c0       	rjmp	.+4      	; 0xf6 <__do_copy_data+0x10>
      f2:	05 90       	lpm	r0, Z+
      f4:	0d 92       	st	X+, r0
      f6:	ac 3d       	cpi	r26, 0xDC	; 220
      f8:	b1 07       	cpc	r27, r17
      fa:	d9 f7       	brne	.-10     	; 0xf2 <__do_copy_data+0xc>

000000fc <__do_clear_bss>:
      fc:	17 e0       	ldi	r17, 0x07	; 7
      fe:	ac ed       	ldi	r26, 0xDC	; 220
     100:	b3 e0       	ldi	r27, 0x03	; 3
     102:	01 c0       	rjmp	.+2      	; 0x106 <.do_clear_bss_start>

00000104 <.do_clear_bss_loop>:
     104:	1d 92       	st	X+, r1

00000106 <.do_clear_bss_start>:
     106:	ac 31       	cpi	r26, 0x1C	; 28
     108:	b1 07       	cpc	r27, r17
     10a:	e1 f7       	brne	.-8      	; 0x104 <.do_clear_bss_loop>

0000010c <__do_global_ctors>:
     10c:	10 e0       	ldi	r17, 0x00	; 0
     10e:	c8 ed       	ldi	r28, 0xD8	; 216
     110:	d0 e0       	ldi	r29, 0x00	; 0
     112:	04 c0       	rjmp	.+8      	; 0x11c <__do_global_ctors+0x10>
     114:	22 97       	sbiw	r28, 0x02	; 2
     116:	fe 01       	movw	r30, r28
     118:	0e 94 a4 1d 	call	0x3b48	; 0x3b48 <__tablejump__>
     11c:	c2 3d       	cpi	r28, 0xD2	; 210
     11e:	d1 07       	cpc	r29, r17
     120:	c9 f7       	brne	.-14     	; 0x114 <__do_global_ctors+0x8>
     122:	0e 94 aa 1b 	call	0x3754	; 0x3754 <main>
     126:	0c 94 cf 1d 	jmp	0x3b9e	; 0x3b9e <__do_global_dtors>

0000012a <__bad_interrupt>:
     12a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012e <_ZN3EDB7edbReadEmPhj>:
     12e:	6f 92       	push	r6
     130:	7f 92       	push	r7
     132:	8f 92       	push	r8
     134:	9f 92       	push	r9
     136:	af 92       	push	r10
     138:	bf 92       	push	r11
     13a:	cf 92       	push	r12
     13c:	df 92       	push	r13
     13e:	ef 92       	push	r14
     140:	ff 92       	push	r15
     142:	0f 93       	push	r16
     144:	1f 93       	push	r17
     146:	cf 93       	push	r28
     148:	df 93       	push	r29
     14a:	3c 01       	movw	r6, r24
     14c:	4a 01       	movw	r8, r20
     14e:	5b 01       	movw	r10, r22
     150:	e9 01       	movw	r28, r18
     152:	12 c0       	rjmp	.+36     	; 0x178 <_ZN3EDB7edbReadEmPhj+0x4a>
     154:	6a 01       	movw	r12, r20
     156:	7b 01       	movw	r14, r22
     158:	08 94       	sec
     15a:	c1 1c       	adc	r12, r1
     15c:	d1 1c       	adc	r13, r1
     15e:	e1 1c       	adc	r14, r1
     160:	f1 1c       	adc	r15, r1
     162:	d3 01       	movw	r26, r6
     164:	1a 96       	adiw	r26, 0x0a	; 10
     166:	ed 91       	ld	r30, X+
     168:	fc 91       	ld	r31, X
     16a:	1b 97       	sbiw	r26, 0x0b	; 11
     16c:	cb 01       	movw	r24, r22
     16e:	ba 01       	movw	r22, r20
     170:	09 95       	icall
     172:	89 93       	st	Y+, r24
     174:	b7 01       	movw	r22, r14
     176:	a6 01       	movw	r20, r12
     178:	ca 01       	movw	r24, r20
     17a:	88 19       	sub	r24, r8
     17c:	99 09       	sbc	r25, r9
     17e:	80 17       	cp	r24, r16
     180:	91 07       	cpc	r25, r17
     182:	40 f3       	brcs	.-48     	; 0x154 <_ZN3EDB7edbReadEmPhj+0x26>
     184:	df 91       	pop	r29
     186:	cf 91       	pop	r28
     188:	1f 91       	pop	r17
     18a:	0f 91       	pop	r16
     18c:	ff 90       	pop	r15
     18e:	ef 90       	pop	r14
     190:	df 90       	pop	r13
     192:	cf 90       	pop	r12
     194:	bf 90       	pop	r11
     196:	af 90       	pop	r10
     198:	9f 90       	pop	r9
     19a:	8f 90       	pop	r8
     19c:	7f 90       	pop	r7
     19e:	6f 90       	pop	r6
     1a0:	08 95       	ret

000001a2 <_ZN3EDBC1EPFvmhEPFhmE>:
     1a2:	fc 01       	movw	r30, r24
     1a4:	71 87       	std	Z+9, r23	; 0x09
     1a6:	60 87       	std	Z+8, r22	; 0x08
     1a8:	53 87       	std	Z+11, r21	; 0x0b
     1aa:	42 87       	std	Z+10, r20	; 0x0a
     1ac:	08 95       	ret

000001ae <_ZN3EDB7readRecEmPh>:
     1ae:	ef 92       	push	r14
     1b0:	ff 92       	push	r15
     1b2:	0f 93       	push	r16
     1b4:	1f 93       	push	r17
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	ec 01       	movw	r28, r24
     1bc:	79 01       	movw	r14, r18
     1be:	41 15       	cp	r20, r1
     1c0:	51 05       	cpc	r21, r1
     1c2:	61 05       	cpc	r22, r1
     1c4:	71 05       	cpc	r23, r1
     1c6:	31 f1       	breq	.+76     	; 0x214 <_ZN3EDB7readRecEmPh+0x66>
     1c8:	8c 85       	ldd	r24, Y+12	; 0x0c
     1ca:	9d 85       	ldd	r25, Y+13	; 0x0d
     1cc:	ae 85       	ldd	r26, Y+14	; 0x0e
     1ce:	bf 85       	ldd	r27, Y+15	; 0x0f
     1d0:	84 17       	cp	r24, r20
     1d2:	95 07       	cpc	r25, r21
     1d4:	a6 07       	cpc	r26, r22
     1d6:	b7 07       	cpc	r27, r23
     1d8:	e8 f0       	brcs	.+58     	; 0x214 <_ZN3EDB7readRecEmPh+0x66>
     1da:	08 89       	ldd	r16, Y+16	; 0x10
     1dc:	19 89       	ldd	r17, Y+17	; 0x11
     1de:	cb 01       	movw	r24, r22
     1e0:	ba 01       	movw	r22, r20
     1e2:	61 50       	subi	r22, 0x01	; 1
     1e4:	70 40       	sbci	r23, 0x00	; 0
     1e6:	80 40       	sbci	r24, 0x00	; 0
     1e8:	90 40       	sbci	r25, 0x00	; 0
     1ea:	98 01       	movw	r18, r16
     1ec:	40 e0       	ldi	r20, 0x00	; 0
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__mulsi3>
     1f4:	ab 01       	movw	r20, r22
     1f6:	bc 01       	movw	r22, r24
     1f8:	8c 81       	ldd	r24, Y+4	; 0x04
     1fa:	9d 81       	ldd	r25, Y+5	; 0x05
     1fc:	ae 81       	ldd	r26, Y+6	; 0x06
     1fe:	bf 81       	ldd	r27, Y+7	; 0x07
     200:	48 0f       	add	r20, r24
     202:	59 1f       	adc	r21, r25
     204:	6a 1f       	adc	r22, r26
     206:	7b 1f       	adc	r23, r27
     208:	ce 01       	movw	r24, r28
     20a:	97 01       	movw	r18, r14
     20c:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN3EDB7edbReadEmPhj>
     210:	80 e0       	ldi	r24, 0x00	; 0
     212:	01 c0       	rjmp	.+2      	; 0x216 <_ZN3EDB7readRecEmPh+0x68>
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	df 91       	pop	r29
     218:	cf 91       	pop	r28
     21a:	1f 91       	pop	r17
     21c:	0f 91       	pop	r16
     21e:	ff 90       	pop	r15
     220:	ef 90       	pop	r14
     222:	08 95       	ret

00000224 <_ZN3EDB5countEv>:
     224:	fc 01       	movw	r30, r24
     226:	64 85       	ldd	r22, Z+12	; 0x0c
     228:	75 85       	ldd	r23, Z+13	; 0x0d
     22a:	86 85       	ldd	r24, Z+14	; 0x0e
     22c:	97 85       	ldd	r25, Z+15	; 0x0f
     22e:	08 95       	ret

00000230 <_ZN4File5writeEh>:
     230:	cf 93       	push	r28
     232:	df 93       	push	r29
     234:	0f 92       	push	r0
     236:	cd b7       	in	r28, 0x3d	; 61
     238:	de b7       	in	r29, 0x3e	; 62
     23a:	69 83       	std	Y+1, r22	; 0x01
     23c:	dc 01       	movw	r26, r24
     23e:	ed 91       	ld	r30, X+
     240:	fc 91       	ld	r31, X
     242:	02 80       	ldd	r0, Z+2	; 0x02
     244:	f3 81       	ldd	r31, Z+3	; 0x03
     246:	e0 2d       	mov	r30, r0
     248:	be 01       	movw	r22, r28
     24a:	6f 5f       	subi	r22, 0xFF	; 255
     24c:	7f 4f       	sbci	r23, 0xFF	; 255
     24e:	41 e0       	ldi	r20, 0x01	; 1
     250:	50 e0       	ldi	r21, 0x00	; 0
     252:	09 95       	icall
     254:	0f 90       	pop	r0
     256:	df 91       	pop	r29
     258:	cf 91       	pop	r28
     25a:	08 95       	ret

0000025c <_ZN4File5flushEv>:
     25c:	fc 01       	movw	r30, r24
     25e:	81 8d       	ldd	r24, Z+25	; 0x19
     260:	92 8d       	ldd	r25, Z+26	; 0x1a
     262:	00 97       	sbiw	r24, 0x00	; 0
     264:	11 f0       	breq	.+4      	; 0x26a <_ZN4File5flushEv+0xe>
     266:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN6SdFile4syncEv>
     26a:	08 95       	ret

0000026c <_ZN4File5writeEPKhj>:
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	ec 01       	movw	r28, r24
     272:	89 8d       	ldd	r24, Y+25	; 0x19
     274:	9a 8d       	ldd	r25, Y+26	; 0x1a
     276:	00 97       	sbiw	r24, 0x00	; 0
     278:	61 f0       	breq	.+24     	; 0x292 <_ZN4File5writeEPKhj+0x26>
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
     27a:	fc 01       	movw	r30, r24
     27c:	13 82       	std	Z+3, r1	; 0x03
     27e:	12 82       	std	Z+2, r1	; 0x02
     280:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <_ZN6SdFile5writeEPKvj>
     284:	e9 8d       	ldd	r30, Y+25	; 0x19
     286:	fa 8d       	ldd	r31, Y+26	; 0x1a
     288:	22 81       	ldd	r18, Z+2	; 0x02
     28a:	33 81       	ldd	r19, Z+3	; 0x03
     28c:	21 15       	cp	r18, r1
     28e:	31 05       	cpc	r19, r1
     290:	31 f0       	breq	.+12     	; 0x29e <_ZN4File5writeEPKhj+0x32>
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	9b 83       	std	Y+3, r25	; 0x03
     298:	8a 83       	std	Y+2, r24	; 0x02
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	df 91       	pop	r29
     2a0:	cf 91       	pop	r28
     2a2:	08 95       	ret

000002a4 <_ZN6SdFile4readEv>:
   * Read the next byte from a file.
   *
   * \return For success read returns the next byte in the file as an int.
   * If an error occurs or end of file is reached -1 is returned.
   */
  int16_t read(void) {
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	0f 92       	push	r0
     2aa:	cd b7       	in	r28, 0x3d	; 61
     2ac:	de b7       	in	r29, 0x3e	; 62
    uint8_t b;
    return read(&b, 1) == 1 ? b : -1;
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	41 e0       	ldi	r20, 0x01	; 1
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN6SdFile4readEPvj>
     2bc:	81 30       	cpi	r24, 0x01	; 1
     2be:	91 05       	cpc	r25, r1
     2c0:	19 f4       	brne	.+6      	; 0x2c8 <_ZN6SdFile4readEv+0x24>
     2c2:	89 81       	ldd	r24, Y+1	; 0x01
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <_ZN6SdFile4readEv+0x28>
     2c8:	8f ef       	ldi	r24, 0xFF	; 255
     2ca:	9f ef       	ldi	r25, 0xFF	; 255
  }
     2cc:	0f 90       	pop	r0
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	08 95       	ret

000002d4 <_ZN4File4readEv>:
     2d4:	fc 01       	movw	r30, r24
     2d6:	81 8d       	ldd	r24, Z+25	; 0x19
     2d8:	92 8d       	ldd	r25, Z+26	; 0x1a
     2da:	00 97       	sbiw	r24, 0x00	; 0
     2dc:	19 f0       	breq	.+6      	; 0x2e4 <_ZN4File4readEv+0x10>
     2de:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_ZN6SdFile4readEv>
     2e2:	08 95       	ret
     2e4:	8f ef       	ldi	r24, 0xFF	; 255
     2e6:	9f ef       	ldi	r25, 0xFF	; 255
     2e8:	08 95       	ret

000002ea <_ZN4File4peekEv>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	ec 01       	movw	r28, r24
     2f4:	89 8d       	ldd	r24, Y+25	; 0x19
     2f6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2f8:	00 97       	sbiw	r24, 0x00	; 0
     2fa:	a9 f0       	breq	.+42     	; 0x326 <_ZN4File4peekEv+0x3c>
     2fc:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_ZN6SdFile4readEv>
     300:	8c 01       	movw	r16, r24
     302:	8f ef       	ldi	r24, 0xFF	; 255
     304:	0f 3f       	cpi	r16, 0xFF	; 255
     306:	18 07       	cpc	r17, r24
     308:	81 f0       	breq	.+32     	; 0x32a <_ZN4File4peekEv+0x40>
     30a:	89 8d       	ldd	r24, Y+25	; 0x19
     30c:	9a 8d       	ldd	r25, Y+26	; 0x1a
  }
  uint8_t rmDir(void);
  uint8_t rmRfStar(void);
  /** Set the files position to current position + \a pos. See seekSet(). */
  uint8_t seekCur(uint32_t pos) {
    return seekSet(curPosition_ + pos);
     30e:	fc 01       	movw	r30, r24
     310:	42 85       	ldd	r20, Z+10	; 0x0a
     312:	53 85       	ldd	r21, Z+11	; 0x0b
     314:	64 85       	ldd	r22, Z+12	; 0x0c
     316:	75 85       	ldd	r23, Z+13	; 0x0d
     318:	41 50       	subi	r20, 0x01	; 1
     31a:	50 40       	sbci	r21, 0x00	; 0
     31c:	60 40       	sbci	r22, 0x00	; 0
     31e:	70 40       	sbci	r23, 0x00	; 0
     320:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
     324:	02 c0       	rjmp	.+4      	; 0x32a <_ZN4File4peekEv+0x40>
     326:	00 e0       	ldi	r16, 0x00	; 0
     328:	10 e0       	ldi	r17, 0x00	; 0
     32a:	c8 01       	movw	r24, r16
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	1f 91       	pop	r17
     332:	0f 91       	pop	r16
     334:	08 95       	ret

00000336 <_ZN4FileC1E6SdFilePKc>:
     336:	ef 92       	push	r14
     338:	ff 92       	push	r15
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	00 d0       	rcall	.+0      	; 0x344 <_ZN4FileC1E6SdFilePKc+0xe>
     344:	cd b7       	in	r28, 0x3d	; 61
     346:	de b7       	in	r29, 0x3e	; 62
     348:	7c 01       	movw	r14, r24
     34a:	8a 01       	movw	r16, r20
  public:
    Print() : write_error(0) {}
     34c:	dc 01       	movw	r26, r24
     34e:	13 96       	adiw	r26, 0x03	; 3
     350:	1c 92       	st	X, r1
     352:	1e 92       	st	-X, r1
     354:	12 97       	sbiw	r26, 0x02	; 2
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
     356:	88 ee       	ldi	r24, 0xE8	; 232
     358:	93 e0       	ldi	r25, 0x03	; 3
     35a:	a0 e0       	ldi	r26, 0x00	; 0
     35c:	b0 e0       	ldi	r27, 0x00	; 0
     35e:	f7 01       	movw	r30, r14
     360:	84 83       	std	Z+4, r24	; 0x04
     362:	95 83       	std	Z+5, r25	; 0x05
     364:	a6 83       	std	Z+6, r26	; 0x06
     366:	b7 83       	std	Z+7, r27	; 0x07
     368:	84 e0       	ldi	r24, 0x04	; 4
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	91 83       	std	Z+1, r25	; 0x01
     36e:	80 83       	st	Z, r24
     370:	8d e1       	ldi	r24, 0x1D	; 29
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	69 83       	std	Y+1, r22	; 0x01
     376:	7a 83       	std	Y+2, r23	; 0x02
     378:	0e 94 36 17 	call	0x2e6c	; 0x2e6c <malloc>
     37c:	fc 01       	movw	r30, r24
     37e:	d7 01       	movw	r26, r14
     380:	5a 96       	adiw	r26, 0x1a	; 26
     382:	9c 93       	st	X, r25
     384:	8e 93       	st	-X, r24
     386:	59 97       	sbiw	r26, 0x19	; 25
     388:	69 81       	ldd	r22, Y+1	; 0x01
     38a:	7a 81       	ldd	r23, Y+2	; 0x02
     38c:	00 97       	sbiw	r24, 0x00	; 0
     38e:	79 f0       	breq	.+30     	; 0x3ae <_ZN4FileC1E6SdFilePKc+0x78>
     390:	db 01       	movw	r26, r22
     392:	8d e1       	ldi	r24, 0x1D	; 29
     394:	0d 90       	ld	r0, X+
     396:	01 92       	st	Z+, r0
     398:	81 50       	subi	r24, 0x01	; 1
     39a:	e1 f7       	brne	.-8      	; 0x394 <_ZN4FileC1E6SdFilePKc+0x5e>
     39c:	c7 01       	movw	r24, r14
     39e:	0c 96       	adiw	r24, 0x0c	; 12
     3a0:	b8 01       	movw	r22, r16
     3a2:	4c e0       	ldi	r20, 0x0C	; 12
     3a4:	50 e0       	ldi	r21, 0x00	; 0
     3a6:	0e 94 c0 1d 	call	0x3b80	; 0x3b80 <strncpy>
     3aa:	f7 01       	movw	r30, r14
     3ac:	10 8e       	std	Z+24, r1	; 0x18
     3ae:	0f 90       	pop	r0
     3b0:	0f 90       	pop	r0
     3b2:	df 91       	pop	r29
     3b4:	cf 91       	pop	r28
     3b6:	1f 91       	pop	r17
     3b8:	0f 91       	pop	r16
     3ba:	ff 90       	pop	r15
     3bc:	ef 90       	pop	r14
     3be:	08 95       	ret

000003c0 <_ZN4FileC1Ev>:
     3c0:	fc 01       	movw	r30, r24
     3c2:	13 82       	std	Z+3, r1	; 0x03
     3c4:	12 82       	std	Z+2, r1	; 0x02
     3c6:	48 ee       	ldi	r20, 0xE8	; 232
     3c8:	53 e0       	ldi	r21, 0x03	; 3
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	44 83       	std	Z+4, r20	; 0x04
     3d0:	55 83       	std	Z+5, r21	; 0x05
     3d2:	66 83       	std	Z+6, r22	; 0x06
     3d4:	77 83       	std	Z+7, r23	; 0x07
     3d6:	84 e0       	ldi	r24, 0x04	; 4
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	91 83       	std	Z+1, r25	; 0x01
     3dc:	80 83       	st	Z, r24
     3de:	12 8e       	std	Z+26, r1	; 0x1a
     3e0:	11 8e       	std	Z+25, r1	; 0x19
     3e2:	14 86       	std	Z+12, r1	; 0x0c
     3e4:	08 95       	ret

000003e6 <_ZN4FileD1Ev>:
     3e6:	24 e0       	ldi	r18, 0x04	; 4
     3e8:	31 e0       	ldi	r19, 0x01	; 1
     3ea:	fc 01       	movw	r30, r24
     3ec:	31 83       	std	Z+1, r19	; 0x01
     3ee:	20 83       	st	Z, r18
     3f0:	08 95       	ret

000003f2 <_ZN4File4seekEm>:
     3f2:	fc 01       	movw	r30, r24
     3f4:	81 8d       	ldd	r24, Z+25	; 0x19
     3f6:	92 8d       	ldd	r25, Z+26	; 0x1a
     3f8:	00 97       	sbiw	r24, 0x00	; 0
     3fa:	19 f0       	breq	.+6      	; 0x402 <_ZN4File4seekEm+0x10>
     3fc:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
     400:	08 95       	ret
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	08 95       	ret

00000406 <_ZN4File8positionEv>:
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	dc 01       	movw	r26, r24
     40c:	59 96       	adiw	r26, 0x19	; 25
     40e:	ed 91       	ld	r30, X+
     410:	fc 91       	ld	r31, X
     412:	5a 97       	sbiw	r26, 0x1a	; 26
     414:	30 97       	sbiw	r30, 0x00	; 0
     416:	29 f0       	breq	.+10     	; 0x422 <_ZN4File8positionEv+0x1c>
  uint8_t createContiguous(SdFile* dirFile,
          const char* fileName, uint32_t size);
  /** \return The current cluster number for a file or directory. */
  uint32_t curCluster(void) const {return curCluster_;}
  /** \return The current position for a file or directory. */
  uint32_t curPosition(void) const {return curPosition_;}
     418:	02 85       	ldd	r16, Z+10	; 0x0a
     41a:	13 85       	ldd	r17, Z+11	; 0x0b
     41c:	24 85       	ldd	r18, Z+12	; 0x0c
     41e:	35 85       	ldd	r19, Z+13	; 0x0d
     420:	03 c0       	rjmp	.+6      	; 0x428 <_ZN4File8positionEv+0x22>
     422:	0f ef       	ldi	r16, 0xFF	; 255
     424:	1f ef       	ldi	r17, 0xFF	; 255
     426:	98 01       	movw	r18, r16
     428:	b8 01       	movw	r22, r16
     42a:	c9 01       	movw	r24, r18
     42c:	1f 91       	pop	r17
     42e:	0f 91       	pop	r16
     430:	08 95       	ret

00000432 <_ZN4File4sizeEv>:
     432:	0f 93       	push	r16
     434:	1f 93       	push	r17
     436:	dc 01       	movw	r26, r24
     438:	59 96       	adiw	r26, 0x19	; 25
     43a:	ed 91       	ld	r30, X+
     43c:	fc 91       	ld	r31, X
     43e:	5a 97       	sbiw	r26, 0x1a	; 26
     440:	30 97       	sbiw	r30, 0x00	; 0
     442:	29 f0       	breq	.+10     	; 0x44e <_ZN4File4sizeEv+0x1c>
  uint8_t dirEntry(dir_t* dir);
  /** \return Index of this file's directory in the block dirBlock. */
  uint8_t dirIndex(void) const {return dirIndex_;}
  static void dirName(const dir_t& dir, char* name);
  /** \return The total number of bytes in a file or directory. */
  uint32_t fileSize(void) const {return fileSize_;}
     444:	03 89       	ldd	r16, Z+19	; 0x13
     446:	14 89       	ldd	r17, Z+20	; 0x14
     448:	25 89       	ldd	r18, Z+21	; 0x15
     44a:	36 89       	ldd	r19, Z+22	; 0x16
     44c:	03 c0       	rjmp	.+6      	; 0x454 <_ZN4File4sizeEv+0x22>
     44e:	00 e0       	ldi	r16, 0x00	; 0
     450:	10 e0       	ldi	r17, 0x00	; 0
     452:	98 01       	movw	r18, r16
     454:	b8 01       	movw	r22, r16
     456:	c9 01       	movw	r24, r18
     458:	1f 91       	pop	r17
     45a:	0f 91       	pop	r16
     45c:	08 95       	ret

0000045e <_ZN4File9availableEv>:
     45e:	cf 92       	push	r12
     460:	df 92       	push	r13
     462:	ef 92       	push	r14
     464:	ff 92       	push	r15
     466:	cf 93       	push	r28
     468:	df 93       	push	r29
     46a:	ec 01       	movw	r28, r24
     46c:	89 8d       	ldd	r24, Y+25	; 0x19
     46e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     470:	00 97       	sbiw	r24, 0x00	; 0
     472:	f9 f0       	breq	.+62     	; 0x4b2 <_ZN4File9availableEv+0x54>
     474:	ce 01       	movw	r24, r28
     476:	0e 94 19 02 	call	0x432	; 0x432 <_ZN4File4sizeEv>
     47a:	6b 01       	movw	r12, r22
     47c:	7c 01       	movw	r14, r24
     47e:	ce 01       	movw	r24, r28
     480:	0e 94 03 02 	call	0x406	; 0x406 <_ZN4File8positionEv>
     484:	dc 01       	movw	r26, r24
     486:	cb 01       	movw	r24, r22
     488:	c8 1a       	sub	r12, r24
     48a:	d9 0a       	sbc	r13, r25
     48c:	ea 0a       	sbc	r14, r26
     48e:	fb 0a       	sbc	r15, r27
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	c8 16       	cp	r12, r24
     494:	80 e8       	ldi	r24, 0x80	; 128
     496:	d8 06       	cpc	r13, r24
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	e8 06       	cpc	r14, r24
     49c:	80 e0       	ldi	r24, 0x00	; 0
     49e:	f8 06       	cpc	r15, r24
     4a0:	30 f0       	brcs	.+12     	; 0x4ae <_ZN4File9availableEv+0x50>
     4a2:	8f ef       	ldi	r24, 0xFF	; 255
     4a4:	c8 2e       	mov	r12, r24
     4a6:	8f e7       	ldi	r24, 0x7F	; 127
     4a8:	d8 2e       	mov	r13, r24
     4aa:	e1 2c       	mov	r14, r1
     4ac:	f1 2c       	mov	r15, r1
     4ae:	c6 01       	movw	r24, r12
     4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <_ZN4File9availableEv+0x58>
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	df 90       	pop	r13
     4c0:	cf 90       	pop	r12
     4c2:	08 95       	ret

000004c4 <_Z10whileInputbiiRjib>:
     4c4:	6f 92       	push	r6
     4c6:	7f 92       	push	r7
     4c8:	8f 92       	push	r8
     4ca:	9f 92       	push	r9
     4cc:	af 92       	push	r10
     4ce:	bf 92       	push	r11
     4d0:	cf 92       	push	r12
     4d2:	df 92       	push	r13
     4d4:	ef 92       	push	r14
     4d6:	ff 92       	push	r15
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	0f 92       	push	r0
     4e2:	cd b7       	in	r28, 0x3d	; 61
     4e4:	de b7       	in	r29, 0x3e	; 62
     4e6:	f8 2e       	mov	r15, r24
     4e8:	4a 01       	movw	r8, r20
     4ea:	69 01       	movw	r12, r18
     4ec:	f9 01       	movw	r30, r18
     4ee:	11 82       	std	Z+1, r1	; 0x01
     4f0:	10 82       	st	Z, r1
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	a8 2e       	mov	r10, r24
     4f6:	b1 2c       	mov	r11, r1
     4f8:	06 2e       	mov	r0, r22
     4fa:	02 c0       	rjmp	.+4      	; 0x500 <_Z10whileInputbiiRjib+0x3c>
     4fc:	aa 0c       	add	r10, r10
     4fe:	bb 1c       	adc	r11, r11
     500:	0a 94       	dec	r0
     502:	e2 f7       	brpl	.-8      	; 0x4fc <_Z10whileInputbiiRjib+0x38>
     504:	16 c0       	rjmp	.+44     	; 0x532 <_Z10whileInputbiiRjib+0x6e>
     506:	f6 01       	movw	r30, r12
     508:	80 81       	ld	r24, Z
     50a:	91 81       	ldd	r25, Z+1	; 0x01
     50c:	88 15       	cp	r24, r8
     50e:	99 05       	cpc	r25, r9
     510:	20 f0       	brcs	.+8      	; 0x51a <_Z10whileInputbiiRjib+0x56>
     512:	11 82       	std	Z+1, r1	; 0x01
     514:	10 82       	st	Z, r1
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	21 c0       	rjmp	.+66     	; 0x55c <_Z10whileInputbiiRjib+0x98>
     51a:	c8 01       	movw	r24, r16
     51c:	69 83       	std	Y+1, r22	; 0x01
     51e:	0e 94 c1 18 	call	0x3182	; 0x3182 <delayMicroseconds>
     522:	f6 01       	movw	r30, r12
     524:	80 81       	ld	r24, Z
     526:	91 81       	ldd	r25, Z+1	; 0x01
     528:	80 0f       	add	r24, r16
     52a:	91 1f       	adc	r25, r17
     52c:	91 83       	std	Z+1, r25	; 0x01
     52e:	80 83       	st	Z, r24
     530:	69 81       	ldd	r22, Y+1	; 0x01
     532:	89 b1       	in	r24, 0x09	; 9
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	ff 20       	and	r15, r15
     538:	29 f0       	breq	.+10     	; 0x544 <_Z10whileInputbiiRjib+0x80>
     53a:	8a 21       	and	r24, r10
     53c:	9b 21       	and	r25, r11
     53e:	00 97       	sbiw	r24, 0x00	; 0
     540:	49 f4       	brne	.+18     	; 0x554 <_Z10whileInputbiiRjib+0x90>
     542:	0b c0       	rjmp	.+22     	; 0x55a <_Z10whileInputbiiRjib+0x96>
     544:	06 2e       	mov	r0, r22
     546:	02 c0       	rjmp	.+4      	; 0x54c <_Z10whileInputbiiRjib+0x88>
     548:	95 95       	asr	r25
     54a:	87 95       	ror	r24
     54c:	0a 94       	dec	r0
     54e:	e2 f7       	brpl	.-8      	; 0x548 <_Z10whileInputbiiRjib+0x84>
     550:	80 fd       	sbrc	r24, 0
     552:	03 c0       	rjmp	.+6      	; 0x55a <_Z10whileInputbiiRjib+0x96>
     554:	ee 20       	and	r14, r14
     556:	69 f3       	breq	.-38     	; 0x532 <_Z10whileInputbiiRjib+0x6e>
     558:	d6 cf       	rjmp	.-84     	; 0x506 <_Z10whileInputbiiRjib+0x42>
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	0f 90       	pop	r0
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	ff 90       	pop	r15
     568:	ef 90       	pop	r14
     56a:	df 90       	pop	r13
     56c:	cf 90       	pop	r12
     56e:	bf 90       	pop	r11
     570:	af 90       	pop	r10
     572:	9f 90       	pop	r9
     574:	8f 90       	pop	r8
     576:	7f 90       	pop	r7
     578:	6f 90       	pop	r6
     57a:	08 95       	ret

0000057c <_Z10whileInputbimRmib>:
     57c:	3f 92       	push	r3
     57e:	4f 92       	push	r4
     580:	5f 92       	push	r5
     582:	6f 92       	push	r6
     584:	7f 92       	push	r7
     586:	8f 92       	push	r8
     588:	9f 92       	push	r9
     58a:	af 92       	push	r10
     58c:	bf 92       	push	r11
     58e:	cf 92       	push	r12
     590:	df 92       	push	r13
     592:	ef 92       	push	r14
     594:	ff 92       	push	r15
     596:	0f 93       	push	r16
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	38 2e       	mov	r3, r24
     5a0:	d6 2e       	mov	r13, r22
     5a2:	ca 01       	movw	r24, r20
     5a4:	b9 01       	movw	r22, r18
     5a6:	e8 01       	movw	r28, r16
     5a8:	18 82       	st	Y, r1
     5aa:	19 82       	std	Y+1, r1	; 0x01
     5ac:	1a 82       	std	Y+2, r1	; 0x02
     5ae:	1b 82       	std	Y+3, r1	; 0x03
     5b0:	01 e0       	ldi	r16, 0x01	; 1
     5b2:	10 e0       	ldi	r17, 0x00	; 0
     5b4:	0d 2c       	mov	r0, r13
     5b6:	02 c0       	rjmp	.+4      	; 0x5bc <_Z10whileInputbimRmib+0x40>
     5b8:	00 0f       	add	r16, r16
     5ba:	11 1f       	adc	r17, r17
     5bc:	0a 94       	dec	r0
     5be:	e2 f7       	brpl	.-8      	; 0x5b8 <_Z10whileInputbimRmib+0x3c>
     5c0:	28 ee       	ldi	r18, 0xE8	; 232
     5c2:	33 e0       	ldi	r19, 0x03	; 3
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	50 e0       	ldi	r21, 0x00	; 0
     5c8:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__mulsi3>
     5cc:	4b 01       	movw	r8, r22
     5ce:	5c 01       	movw	r10, r24
     5d0:	27 01       	movw	r4, r14
     5d2:	66 24       	eor	r6, r6
     5d4:	57 fc       	sbrc	r5, 7
     5d6:	60 94       	com	r6
     5d8:	76 2c       	mov	r7, r6
     5da:	1e c0       	rjmp	.+60     	; 0x618 <_Z10whileInputbimRmib+0x9c>
     5dc:	88 81       	ld	r24, Y
     5de:	99 81       	ldd	r25, Y+1	; 0x01
     5e0:	aa 81       	ldd	r26, Y+2	; 0x02
     5e2:	bb 81       	ldd	r27, Y+3	; 0x03
     5e4:	88 15       	cp	r24, r8
     5e6:	99 05       	cpc	r25, r9
     5e8:	aa 05       	cpc	r26, r10
     5ea:	bb 05       	cpc	r27, r11
     5ec:	30 f0       	brcs	.+12     	; 0x5fa <_Z10whileInputbimRmib+0x7e>
     5ee:	18 82       	st	Y, r1
     5f0:	19 82       	std	Y+1, r1	; 0x01
     5f2:	1a 82       	std	Y+2, r1	; 0x02
     5f4:	1b 82       	std	Y+3, r1	; 0x03
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	24 c0       	rjmp	.+72     	; 0x642 <_Z10whileInputbimRmib+0xc6>
     5fa:	c7 01       	movw	r24, r14
     5fc:	0e 94 c1 18 	call	0x3182	; 0x3182 <delayMicroseconds>
     600:	88 81       	ld	r24, Y
     602:	99 81       	ldd	r25, Y+1	; 0x01
     604:	aa 81       	ldd	r26, Y+2	; 0x02
     606:	bb 81       	ldd	r27, Y+3	; 0x03
     608:	84 0d       	add	r24, r4
     60a:	95 1d       	adc	r25, r5
     60c:	a6 1d       	adc	r26, r6
     60e:	b7 1d       	adc	r27, r7
     610:	88 83       	st	Y, r24
     612:	99 83       	std	Y+1, r25	; 0x01
     614:	aa 83       	std	Y+2, r26	; 0x02
     616:	bb 83       	std	Y+3, r27	; 0x03
     618:	89 b1       	in	r24, 0x09	; 9
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	33 20       	and	r3, r3
     61e:	29 f0       	breq	.+10     	; 0x62a <_Z10whileInputbimRmib+0xae>
     620:	80 23       	and	r24, r16
     622:	91 23       	and	r25, r17
     624:	00 97       	sbiw	r24, 0x00	; 0
     626:	49 f4       	brne	.+18     	; 0x63a <_Z10whileInputbimRmib+0xbe>
     628:	0b c0       	rjmp	.+22     	; 0x640 <_Z10whileInputbimRmib+0xc4>
     62a:	0d 2c       	mov	r0, r13
     62c:	02 c0       	rjmp	.+4      	; 0x632 <_Z10whileInputbimRmib+0xb6>
     62e:	95 95       	asr	r25
     630:	87 95       	ror	r24
     632:	0a 94       	dec	r0
     634:	e2 f7       	brpl	.-8      	; 0x62e <_Z10whileInputbimRmib+0xb2>
     636:	80 fd       	sbrc	r24, 0
     638:	03 c0       	rjmp	.+6      	; 0x640 <_Z10whileInputbimRmib+0xc4>
     63a:	cc 20       	and	r12, r12
     63c:	69 f3       	breq	.-38     	; 0x618 <_Z10whileInputbimRmib+0x9c>
     63e:	ce cf       	rjmp	.-100    	; 0x5dc <_Z10whileInputbimRmib+0x60>
     640:	81 e0       	ldi	r24, 0x01	; 1
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	bf 90       	pop	r11
     654:	af 90       	pop	r10
     656:	9f 90       	pop	r9
     658:	8f 90       	pop	r8
     65a:	7f 90       	pop	r7
     65c:	6f 90       	pop	r6
     65e:	5f 90       	pop	r5
     660:	4f 90       	pop	r4
     662:	3f 90       	pop	r3
     664:	08 95       	ret

00000666 <_ZN2IRD1Ev>:
     666:	24 e2       	ldi	r18, 0x24	; 36
     668:	31 e0       	ldi	r19, 0x01	; 1
     66a:	fc 01       	movw	r30, r24
     66c:	31 83       	std	Z+1, r19	; 0x01
     66e:	20 83       	st	Z, r18
     670:	08 95       	ret

00000672 <_ZN2IR5teachEi>:
     672:	0e 94 11 17 	call	0x2e22	; 0x2e22 <_ZN11TimeBsdCode5teachEi>
     676:	08 95       	ret

00000678 <_ZN2IR4playEi>:
     678:	0e 94 12 16 	call	0x2c24	; 0x2c24 <_ZN11TimeBsdCode4playEi>
     67c:	08 95       	ret

0000067e <_ZN2IRD0Ev>:
     67e:	24 e2       	ldi	r18, 0x24	; 36
     680:	31 e0       	ldi	r19, 0x01	; 1
     682:	fc 01       	movw	r30, r24
     684:	31 83       	std	Z+1, r19	; 0x01
     686:	20 83       	st	Z, r18
     688:	0e 94 ba 1b 	call	0x3774	; 0x3774 <_ZdlPv>
     68c:	08 95       	ret

0000068e <_Z6readerm>:
	dbFile.write(data);
	dbFile.flush();
}

byte reader(unsigned long address)
{
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
     692:	ab 01       	movw	r20, r22
     694:	bc 01       	movw	r22, r24
	dbFile.seek(address);
     696:	c6 ef       	ldi	r28, 0xF6	; 246
     698:	d3 e0       	ldi	r29, 0x03	; 3
     69a:	ce 01       	movw	r24, r28
     69c:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <_ZN4File4seekEm>
	return dbFile.read();
     6a0:	ce 01       	movw	r24, r28
     6a2:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <_ZN4File4readEv>
}
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	08 95       	ret

000006ac <_Z6writermh>:
	int temperature;
}
logEvent;

void writer(unsigned long address, byte data)
{
     6ac:	ff 92       	push	r15
     6ae:	0f 93       	push	r16
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	8b 01       	movw	r16, r22
     6b8:	9c 01       	movw	r18, r24
     6ba:	f4 2e       	mov	r15, r20
	dbFile.seek(address);
     6bc:	c6 ef       	ldi	r28, 0xF6	; 246
     6be:	d3 e0       	ldi	r29, 0x03	; 3
     6c0:	ce 01       	movw	r24, r28
     6c2:	b9 01       	movw	r22, r18
     6c4:	a8 01       	movw	r20, r16
     6c6:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <_ZN4File4seekEm>
	dbFile.write(data);
     6ca:	ce 01       	movw	r24, r28
     6cc:	6f 2d       	mov	r22, r15
     6ce:	0e 94 18 01 	call	0x230	; 0x230 <_ZN4File5writeEh>
	dbFile.flush();
     6d2:	ce 01       	movw	r24, r28
     6d4:	0e 94 2e 01 	call	0x25c	; 0x25c <_ZN4File5flushEv>
}
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	ff 90       	pop	r15
     6e2:	08 95       	ret

000006e4 <_Z41__static_initialization_and_destruction_0ii.constprop.3>:


void loop()
{
	
     6e4:	81 30       	cpi	r24, 0x01	; 1
     6e6:	91 05       	cpc	r25, r1
     6e8:	69 f4       	brne	.+26     	; 0x704 <_Z41__static_initialization_and_destruction_0ii.constprop.3+0x20>

#include "Arduino.h"
#include "EDB/EDB.h"
#include <SD.h>

File dbFile;
     6ea:	86 ef       	ldi	r24, 0xF6	; 246
     6ec:	93 e0       	ldi	r25, 0x03	; 3
     6ee:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_ZN4FileC1Ev>
	dbFile.seek(address);
	return dbFile.read();
}


EDB db(&writer, &reader);
     6f2:	8c ed       	ldi	r24, 0xDC	; 220
     6f4:	93 e0       	ldi	r25, 0x03	; 3
     6f6:	66 e5       	ldi	r22, 0x56	; 86
     6f8:	73 e0       	ldi	r23, 0x03	; 3
     6fa:	47 e4       	ldi	r20, 0x47	; 71
     6fc:	53 e0       	ldi	r21, 0x03	; 3
     6fe:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN3EDBC1EPFvmhEPFhmE>
     702:	08 95       	ret
     704:	00 97       	sbiw	r24, 0x00	; 0
     706:	21 f4       	brne	.+8      	; 0x710 <_Z41__static_initialization_and_destruction_0ii.constprop.3+0x2c>

#include "Arduino.h"
#include "EDB/EDB.h"
#include <SD.h>

File dbFile;
     708:	86 ef       	ldi	r24, 0xF6	; 246
     70a:	93 e0       	ldi	r25, 0x03	; 3
     70c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <_ZN4FileD1Ev>
     710:	08 95       	ret

00000712 <setup>:


EDB db(&writer, &reader);

void setup()
{
     712:	8f 92       	push	r8
     714:	9f 92       	push	r9
     716:	af 92       	push	r10
     718:	bf 92       	push	r11
     71a:	cf 92       	push	r12
     71c:	df 92       	push	r13
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	6b 97       	sbiw	r28, 0x1b	; 27
     72c:	0f b6       	in	r0, 0x3f	; 63
     72e:	f8 94       	cli
     730:	de bf       	out	0x3e, r29	; 62
     732:	0f be       	out	0x3f, r0	; 63
     734:	cd bf       	out	0x3d, r28	; 61
	Serial.begin(9600);
     736:	86 ef       	ldi	r24, 0xF6	; 246
     738:	96 e0       	ldi	r25, 0x06	; 6
     73a:	40 e8       	ldi	r20, 0x80	; 128
     73c:	55 e2       	ldi	r21, 0x25	; 37
     73e:	60 e0       	ldi	r22, 0x00	; 0
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	0e 94 23 1a 	call	0x3446	; 0x3446 <_ZN14HardwareSerial5beginEm>
	
	Serial.print("Initializing SD card...");
     746:	86 ef       	ldi	r24, 0xF6	; 246
     748:	96 e0       	ldi	r25, 0x06	; 6
     74a:	6c e2       	ldi	r22, 0x2C	; 44
     74c:	71 e0       	ldi	r23, 0x01	; 1
     74e:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <_ZN5Print5printEPKc>
	
	pinMode(10, OUTPUT);
     752:	8a e0       	ldi	r24, 0x0A	; 10
     754:	61 e0       	ldi	r22, 0x01	; 1
     756:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
	
	if (!SD.begin()) {
     75a:	81 e1       	ldi	r24, 0x11	; 17
     75c:	94 e0       	ldi	r25, 0x04	; 4
     75e:	6a e0       	ldi	r22, 0x0A	; 10
     760:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN7SDClass5beginEh>
     764:	88 23       	and	r24, r24
     766:	39 f4       	brne	.+14     	; 0x776 <setup+0x64>
		Serial.println("initialization failed!");
     768:	86 ef       	ldi	r24, 0xF6	; 246
     76a:	96 e0       	ldi	r25, 0x06	; 6
     76c:	64 e4       	ldi	r22, 0x44	; 68
     76e:	71 e0       	ldi	r23, 0x01	; 1
     770:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
		return;
     774:	be c0       	rjmp	.+380    	; 0x8f2 <setup+0x1e0>
	}
	
	Serial.println("initialization done.");
     776:	86 ef       	ldi	r24, 0xF6	; 246
     778:	96 e0       	ldi	r25, 0x06	; 6
     77a:	6b e5       	ldi	r22, 0x5B	; 91
     77c:	71 e0       	ldi	r23, 0x01	; 1
     77e:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
	
	Serial.println("Opening example.db ...");
     782:	86 ef       	ldi	r24, 0xF6	; 246
     784:	96 e0       	ldi	r25, 0x06	; 6
     786:	60 e7       	ldi	r22, 0x70	; 112
     788:	71 e0       	ldi	r23, 0x01	; 1
     78a:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
	dbFile = SD.open("example.db", FILE_READ);
     78e:	ce 01       	movw	r24, r28
     790:	01 96       	adiw	r24, 0x01	; 1
     792:	61 e1       	ldi	r22, 0x11	; 17
     794:	74 e0       	ldi	r23, 0x04	; 4
     796:	47 e8       	ldi	r20, 0x87	; 135
     798:	51 e0       	ldi	r21, 0x01	; 1
     79a:	21 e0       	ldi	r18, 0x01	; 1
     79c:	0e 94 a8 05 	call	0xb50	; 0xb50 <_ZN7SDClass4openEPKch>
#define DEC 10
#define HEX 16
#define OCT 8
#define BIN 2

class Print
     7a0:	8b 81       	ldd	r24, Y+3	; 0x03
     7a2:	9c 81       	ldd	r25, Y+4	; 0x04
     7a4:	90 93 f9 03 	sts	0x03F9, r25
     7a8:	80 93 f8 03 	sts	0x03F8, r24
#define   getFloat(skipChar)  parseFloat(skipChar)
#define   getString( pre_string, post_string, buffer, length)
readBytesBetween( pre_string, terminator, buffer, length)
*/

class Stream : public Print
     7ac:	8d 81       	ldd	r24, Y+5	; 0x05
     7ae:	9e 81       	ldd	r25, Y+6	; 0x06
     7b0:	af 81       	ldd	r26, Y+7	; 0x07
     7b2:	b8 85       	ldd	r27, Y+8	; 0x08
     7b4:	80 93 fa 03 	sts	0x03FA, r24
     7b8:	90 93 fb 03 	sts	0x03FB, r25
     7bc:	a0 93 fc 03 	sts	0x03FC, r26
     7c0:	b0 93 fd 03 	sts	0x03FD, r27
     7c4:	89 85       	ldd	r24, Y+9	; 0x09
     7c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     7c8:	ab 85       	ldd	r26, Y+11	; 0x0b
     7ca:	bc 85       	ldd	r27, Y+12	; 0x0c
     7cc:	80 93 fe 03 	sts	0x03FE, r24
     7d0:	90 93 ff 03 	sts	0x03FF, r25
     7d4:	a0 93 00 04 	sts	0x0400, r26
     7d8:	b0 93 01 04 	sts	0x0401, r27
#include <utility/SdFatUtil.h>

#define FILE_READ O_READ
#define FILE_WRITE (O_READ | O_WRITE | O_CREAT)

class File : public Stream {
     7dc:	a2 e0       	ldi	r26, 0x02	; 2
     7de:	b4 e0       	ldi	r27, 0x04	; 4
     7e0:	fe 01       	movw	r30, r28
     7e2:	3d 96       	adiw	r30, 0x0d	; 13
     7e4:	8d e0       	ldi	r24, 0x0D	; 13
     7e6:	01 90       	ld	r0, Z+
     7e8:	0d 92       	st	X+, r0
     7ea:	81 50       	subi	r24, 0x01	; 1
     7ec:	e1 f7       	brne	.-8      	; 0x7e6 <setup+0xd4>
     7ee:	8a 8d       	ldd	r24, Y+26	; 0x1a
     7f0:	9b 8d       	ldd	r25, Y+27	; 0x1b
     7f2:	90 93 10 04 	sts	0x0410, r25
     7f6:	80 93 0f 04 	sts	0x040F, r24
     7fa:	ce 01       	movw	r24, r28
     7fc:	01 96       	adiw	r24, 0x01	; 1
     7fe:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <_ZN4FileD1Ev>
	
	
	Serial.println(db.count(), DEC);
     802:	8c ed       	ldi	r24, 0xDC	; 220
     804:	93 e0       	ldi	r25, 0x03	; 3
     806:	0e 94 12 01 	call	0x224	; 0x224 <_ZN3EDB5countEv>
     80a:	ab 01       	movw	r20, r22
     80c:	bc 01       	movw	r22, r24
     80e:	86 ef       	ldi	r24, 0xF6	; 246
     810:	96 e0       	ldi	r25, 0x06	; 6
     812:	2a e0       	ldi	r18, 0x0A	; 10
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	0e 94 96 1c 	call	0x392c	; 0x392c <_ZN5Print7printlnEmi>
	//db.create(0, TABLE_SIZE, sizeof(logEvent));
	
	Serial.print("Record Count: "); Serial.println(db.count());
     81a:	86 ef       	ldi	r24, 0xF6	; 246
     81c:	96 e0       	ldi	r25, 0x06	; 6
     81e:	62 e9       	ldi	r22, 0x92	; 146
     820:	71 e0       	ldi	r23, 0x01	; 1
     822:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <_ZN5Print5printEPKc>
     826:	8c ed       	ldi	r24, 0xDC	; 220
     828:	93 e0       	ldi	r25, 0x03	; 3
     82a:	0e 94 12 01 	call	0x224	; 0x224 <_ZN3EDB5countEv>
     82e:	ab 01       	movw	r20, r22
     830:	bc 01       	movw	r22, r24
     832:	86 ef       	ldi	r24, 0xF6	; 246
     834:	96 e0       	ldi	r25, 0x06	; 6
     836:	2a e0       	ldi	r18, 0x0A	; 10
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	0e 94 96 1c 	call	0x392c	; 0x392c <_ZN5Print7printlnEmi>
	
	Serial.println("Creating Records...");
     83e:	86 ef       	ldi	r24, 0xF6	; 246
     840:	96 e0       	ldi	r25, 0x06	; 6
     842:	61 ea       	ldi	r22, 0xA1	; 161
     844:	71 e0       	ldi	r23, 0x01	; 1
     846:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
			//db.deleteRec(recno);
			//
		//}
	//}
	
	Serial.print("Record Count: "); Serial.println(db.count());
     84a:	86 ef       	ldi	r24, 0xF6	; 246
     84c:	96 e0       	ldi	r25, 0x06	; 6
     84e:	62 e9       	ldi	r22, 0x92	; 146
     850:	71 e0       	ldi	r23, 0x01	; 1
     852:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <_ZN5Print5printEPKc>
     856:	8c ed       	ldi	r24, 0xDC	; 220
     858:	93 e0       	ldi	r25, 0x03	; 3
     85a:	0e 94 12 01 	call	0x224	; 0x224 <_ZN3EDB5countEv>
     85e:	ab 01       	movw	r20, r22
     860:	bc 01       	movw	r22, r24
     862:	86 ef       	ldi	r24, 0xF6	; 246
     864:	96 e0       	ldi	r25, 0x06	; 6
     866:	2a e0       	ldi	r18, 0x0A	; 10
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	0e 94 96 1c 	call	0x392c	; 0x392c <_ZN5Print7printlnEmi>
	for (recno = 1; recno < db.count(); recno++)
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	c8 2e       	mov	r12, r24
     872:	d1 2c       	mov	r13, r1
     874:	e1 2c       	mov	r14, r1
     876:	f1 2c       	mov	r15, r1
     878:	2a c0       	rjmp	.+84     	; 0x8ce <setup+0x1bc>
	{
		db.readRec(recno, EDB_REC logEvent);
     87a:	8c ed       	ldi	r24, 0xDC	; 220
     87c:	93 e0       	ldi	r25, 0x03	; 3
     87e:	b7 01       	movw	r22, r14
     880:	a6 01       	movw	r20, r12
     882:	22 ef       	ldi	r18, 0xF2	; 242
     884:	33 e0       	ldi	r19, 0x03	; 3
     886:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN3EDB7readRecEmPh>
		Serial.print("ID: "); Serial.println(logEvent.id);
     88a:	86 ef       	ldi	r24, 0xF6	; 246
     88c:	96 e0       	ldi	r25, 0x06	; 6
     88e:	65 eb       	ldi	r22, 0xB5	; 181
     890:	71 e0       	ldi	r23, 0x01	; 1
     892:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <_ZN5Print5printEPKc>
     896:	60 91 f2 03 	lds	r22, 0x03F2
     89a:	70 91 f3 03 	lds	r23, 0x03F3
     89e:	86 ef       	ldi	r24, 0xF6	; 246
     8a0:	96 e0       	ldi	r25, 0x06	; 6
     8a2:	4a e0       	ldi	r20, 0x0A	; 10
     8a4:	50 e0       	ldi	r21, 0x00	; 0
     8a6:	0e 94 ea 1c 	call	0x39d4	; 0x39d4 <_ZN5Print7printlnEii>
		Serial.print("Temp: "); Serial.println(logEvent.temperature);
     8aa:	86 ef       	ldi	r24, 0xF6	; 246
     8ac:	96 e0       	ldi	r25, 0x06	; 6
     8ae:	6a eb       	ldi	r22, 0xBA	; 186
     8b0:	71 e0       	ldi	r23, 0x01	; 1
     8b2:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <_ZN5Print5printEPKc>
     8b6:	60 91 f4 03 	lds	r22, 0x03F4
     8ba:	70 91 f5 03 	lds	r23, 0x03F5
     8be:	86 ef       	ldi	r24, 0xF6	; 246
     8c0:	96 e0       	ldi	r25, 0x06	; 6
     8c2:	4a e0       	ldi	r20, 0x0A	; 10
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	0e 94 ea 1c 	call	0x39d4	; 0x39d4 <_ZN5Print7printlnEii>
     8ca:	75 01       	movw	r14, r10
     8cc:	64 01       	movw	r12, r8
			//
		//}
	//}
	
	Serial.print("Record Count: "); Serial.println(db.count());
	for (recno = 1; recno < db.count(); recno++)
     8ce:	8c ed       	ldi	r24, 0xDC	; 220
     8d0:	93 e0       	ldi	r25, 0x03	; 3
     8d2:	0e 94 12 01 	call	0x224	; 0x224 <_ZN3EDB5countEv>
     8d6:	dc 01       	movw	r26, r24
     8d8:	cb 01       	movw	r24, r22
     8da:	46 01       	movw	r8, r12
     8dc:	57 01       	movw	r10, r14
     8de:	08 94       	sec
     8e0:	81 1c       	adc	r8, r1
     8e2:	91 1c       	adc	r9, r1
     8e4:	a1 1c       	adc	r10, r1
     8e6:	b1 1c       	adc	r11, r1
     8e8:	c8 16       	cp	r12, r24
     8ea:	d9 06       	cpc	r13, r25
     8ec:	ea 06       	cpc	r14, r26
     8ee:	fb 06       	cpc	r15, r27
     8f0:	20 f2       	brcs	.-120    	; 0x87a <setup+0x168>
		db.readRec(recno, EDB_REC logEvent);
		Serial.print("ID: "); Serial.println(logEvent.id);
		Serial.print("Temp: "); Serial.println(logEvent.temperature);
		
	}
}
     8f2:	6b 96       	adiw	r28, 0x1b	; 27
     8f4:	0f b6       	in	r0, 0x3f	; 63
     8f6:	f8 94       	cli
     8f8:	de bf       	out	0x3e, r29	; 62
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	cd bf       	out	0x3d, r28	; 61
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	ff 90       	pop	r15
     904:	ef 90       	pop	r14
     906:	df 90       	pop	r13
     908:	cf 90       	pop	r12
     90a:	bf 90       	pop	r11
     90c:	af 90       	pop	r10
     90e:	9f 90       	pop	r9
     910:	8f 90       	pop	r8
     912:	08 95       	ret

00000914 <loop>:


void loop()
{
	
     914:	08 95       	ret

00000916 <_GLOBAL__sub_I_dbFile>:
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <_Z41__static_initialization_and_destruction_0ii.constprop.3>
     91e:	08 95       	ret

00000920 <_GLOBAL__sub_D_dbFile>:
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	0e 94 72 03 	call	0x6e4	; 0x6e4 <_Z41__static_initialization_and_destruction_0ii.constprop.3>
     928:	08 95       	ret

0000092a <_ZN7SDClass5beginEh>:
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	8c 01       	movw	r16, r24
     934:	46 2f       	mov	r20, r22
     936:	61 e0       	ldi	r22, 0x01	; 1
     938:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_ZN7Sd2Card4initEhh>
     93c:	88 23       	and	r24, r24
     93e:	c1 f0       	breq	.+48     	; 0x970 <_ZN7SDClass5beginEh+0x46>
     940:	e8 01       	movw	r28, r16
     942:	2c 96       	adiw	r28, 0x0c	; 12
   * \return The value one, true, is returned for success and
   * the value zero, false, is returned for failure.  Reasons for
   * failure include not finding a valid partition, not finding a valid
   * FAT file system or an I/O error.
   */
  uint8_t init(Sd2Card* dev) { return init(dev, 1) ? true : init(dev, 0);}
     944:	ce 01       	movw	r24, r28
     946:	b8 01       	movw	r22, r16
     948:	41 e0       	ldi	r20, 0x01	; 1
     94a:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN8SdVolume4initEP7Sd2Cardh>
     94e:	88 23       	and	r24, r24
     950:	39 f4       	brne	.+14     	; 0x960 <_ZN7SDClass5beginEh+0x36>
     952:	ce 01       	movw	r24, r28
     954:	b8 01       	movw	r22, r16
     956:	40 e0       	ldi	r20, 0x00	; 0
     958:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN8SdVolume4initEP7Sd2Cardh>
     95c:	88 23       	and	r24, r24
     95e:	41 f0       	breq	.+16     	; 0x970 <_ZN7SDClass5beginEh+0x46>
   */
  uint8_t open(SdFile& dirFile, uint16_t index, uint8_t oflag) {  // NOLINT
    return open(&dirFile, index, oflag);
  }
  /** \deprecated Use: uint8_t SdFile::openRoot(SdVolume* vol); */
  uint8_t openRoot(SdVolume& vol) {return openRoot(&vol);}  // NOLINT
     960:	c8 01       	movw	r24, r16
     962:	8a 96       	adiw	r24, 0x2a	; 42
     964:	be 01       	movw	r22, r28
     966:	0e 94 26 0a 	call	0x144c	; 0x144c <_ZN6SdFile8openRootEP8SdVolume>
     96a:	91 e0       	ldi	r25, 0x01	; 1
     96c:	88 23       	and	r24, r24
     96e:	09 f4       	brne	.+2      	; 0x972 <_ZN7SDClass5beginEh+0x48>
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	89 2f       	mov	r24, r25
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	1f 91       	pop	r17
     97a:	0f 91       	pop	r16
     97c:	08 95       	ret

0000097e <_ZN6SdFileC1ERKS_>:
//------------------------------------------------------------------------------
/**
 * \class SdFile
 * \brief Access FAT16 and FAT32 files on SD and SDHC cards.
 */
class SdFile : public Print {
     97e:	fc 01       	movw	r30, r24
     980:	db 01       	movw	r26, r22
     982:	12 96       	adiw	r26, 0x02	; 2
     984:	8d 91       	ld	r24, X+
     986:	9c 91       	ld	r25, X
     988:	13 97       	sbiw	r26, 0x03	; 3
     98a:	93 83       	std	Z+3, r25	; 0x03
     98c:	82 83       	std	Z+2, r24	; 0x02
     98e:	87 ec       	ldi	r24, 0xC7	; 199
     990:	91 e0       	ldi	r25, 0x01	; 1
     992:	91 83       	std	Z+1, r25	; 0x01
     994:	80 83       	st	Z, r24
     996:	14 96       	adiw	r26, 0x04	; 4
     998:	8c 91       	ld	r24, X
     99a:	14 97       	sbiw	r26, 0x04	; 4
     99c:	84 83       	std	Z+4, r24	; 0x04
     99e:	15 96       	adiw	r26, 0x05	; 5
     9a0:	8c 91       	ld	r24, X
     9a2:	15 97       	sbiw	r26, 0x05	; 5
     9a4:	85 83       	std	Z+5, r24	; 0x05
     9a6:	16 96       	adiw	r26, 0x06	; 6
     9a8:	4d 91       	ld	r20, X+
     9aa:	5d 91       	ld	r21, X+
     9ac:	6d 91       	ld	r22, X+
     9ae:	7c 91       	ld	r23, X
     9b0:	19 97       	sbiw	r26, 0x09	; 9
     9b2:	46 83       	std	Z+6, r20	; 0x06
     9b4:	57 83       	std	Z+7, r21	; 0x07
     9b6:	60 87       	std	Z+8, r22	; 0x08
     9b8:	71 87       	std	Z+9, r23	; 0x09
     9ba:	1a 96       	adiw	r26, 0x0a	; 10
     9bc:	4d 91       	ld	r20, X+
     9be:	5d 91       	ld	r21, X+
     9c0:	6d 91       	ld	r22, X+
     9c2:	7c 91       	ld	r23, X
     9c4:	1d 97       	sbiw	r26, 0x0d	; 13
     9c6:	42 87       	std	Z+10, r20	; 0x0a
     9c8:	53 87       	std	Z+11, r21	; 0x0b
     9ca:	64 87       	std	Z+12, r22	; 0x0c
     9cc:	75 87       	std	Z+13, r23	; 0x0d
     9ce:	1e 96       	adiw	r26, 0x0e	; 14
     9d0:	4d 91       	ld	r20, X+
     9d2:	5d 91       	ld	r21, X+
     9d4:	6d 91       	ld	r22, X+
     9d6:	7c 91       	ld	r23, X
     9d8:	51 97       	sbiw	r26, 0x11	; 17
     9da:	46 87       	std	Z+14, r20	; 0x0e
     9dc:	57 87       	std	Z+15, r21	; 0x0f
     9de:	60 8b       	std	Z+16, r22	; 0x10
     9e0:	71 8b       	std	Z+17, r23	; 0x11
     9e2:	52 96       	adiw	r26, 0x12	; 18
     9e4:	8c 91       	ld	r24, X
     9e6:	52 97       	sbiw	r26, 0x12	; 18
     9e8:	82 8b       	std	Z+18, r24	; 0x12
     9ea:	53 96       	adiw	r26, 0x13	; 19
     9ec:	4d 91       	ld	r20, X+
     9ee:	5d 91       	ld	r21, X+
     9f0:	6d 91       	ld	r22, X+
     9f2:	7c 91       	ld	r23, X
     9f4:	56 97       	sbiw	r26, 0x16	; 22
     9f6:	43 8b       	std	Z+19, r20	; 0x13
     9f8:	54 8b       	std	Z+20, r21	; 0x14
     9fa:	65 8b       	std	Z+21, r22	; 0x15
     9fc:	76 8b       	std	Z+22, r23	; 0x16
     9fe:	57 96       	adiw	r26, 0x17	; 23
     a00:	4d 91       	ld	r20, X+
     a02:	5d 91       	ld	r21, X+
     a04:	6d 91       	ld	r22, X+
     a06:	7c 91       	ld	r23, X
     a08:	5a 97       	sbiw	r26, 0x1a	; 26
     a0a:	47 8b       	std	Z+23, r20	; 0x17
     a0c:	50 8f       	std	Z+24, r21	; 0x18
     a0e:	61 8f       	std	Z+25, r22	; 0x19
     a10:	72 8f       	std	Z+26, r23	; 0x1a
     a12:	5b 96       	adiw	r26, 0x1b	; 27
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	5c 97       	sbiw	r26, 0x1c	; 28
     a1a:	94 8f       	std	Z+28, r25	; 0x1c
     a1c:	83 8f       	std	Z+27, r24	; 0x1b
     a1e:	08 95       	ret

00000a20 <_ZN7SDClass12getParentDirEPKcPi>:
     a20:	4f 92       	push	r4
     a22:	5f 92       	push	r5
     a24:	6f 92       	push	r6
     a26:	7f 92       	push	r7
     a28:	8f 92       	push	r8
     a2a:	9f 92       	push	r9
     a2c:	af 92       	push	r10
     a2e:	bf 92       	push	r11
     a30:	cf 92       	push	r12
     a32:	df 92       	push	r13
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
     a44:	c7 54       	subi	r28, 0x47	; 71
     a46:	d0 40       	sbci	r29, 0x00	; 0
     a48:	0f b6       	in	r0, 0x3f	; 63
     a4a:	f8 94       	cli
     a4c:	de bf       	out	0x3e, r29	; 62
     a4e:	0f be       	out	0x3f, r0	; 63
     a50:	cd bf       	out	0x3d, r28	; 61
     a52:	4c 01       	movw	r8, r24
     a54:	3a 01       	movw	r6, r20
     a56:	29 01       	movw	r4, r18
     a58:	8e 01       	movw	r16, r28
     a5a:	05 5d       	subi	r16, 0xD5	; 213
     a5c:	1f 4f       	sbci	r17, 0xFF	; 255
     a5e:	66 5d       	subi	r22, 0xD6	; 214
     a60:	7f 4f       	sbci	r23, 0xFF	; 255
     a62:	c8 01       	movw	r24, r16
     a64:	0e 94 bf 04 	call	0x97e	; 0x97e <_ZN6SdFileC1ERKS_>
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
     a68:	19 8a       	std	Y+17, r1	; 0x11
     a6a:	18 8a       	std	Y+16, r1	; 0x10
 public:
  /** Create an instance of SdFile. */
  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}
     a6c:	87 ec       	ldi	r24, 0xC7	; 199
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	9f 87       	std	Y+15, r25	; 0x0f
     a72:	8e 87       	std	Y+14, r24	; 0x0e
     a74:	1b 8a       	std	Y+19, r1	; 0x13
     a76:	73 01       	movw	r14, r6
     a78:	ae e0       	ldi	r26, 0x0E	; 14
     a7a:	aa 2e       	mov	r10, r26
     a7c:	b1 2c       	mov	r11, r1
     a7e:	ac 0e       	add	r10, r28
     a80:	bd 1e       	adc	r11, r29
     a82:	68 01       	movw	r12, r16
     a84:	3b c0       	rjmp	.+118    	; 0xafc <_ZN7SDClass12getParentDirEPKcPi+0xdc>
     a86:	f7 01       	movw	r30, r14
     a88:	20 81       	ld	r18, Z
     a8a:	2f 32       	cpi	r18, 0x2F	; 47
     a8c:	21 f4       	brne	.+8      	; 0xa96 <_ZN7SDClass12getParentDirEPKcPi+0x76>
     a8e:	08 94       	sec
     a90:	e1 1c       	adc	r14, r1
     a92:	f1 1c       	adc	r15, r1
     a94:	33 c0       	rjmp	.+102    	; 0xafc <_ZN7SDClass12getParentDirEPKcPi+0xdc>
     a96:	8e 19       	sub	r24, r14
     a98:	8d 30       	cpi	r24, 0x0D	; 13
     a9a:	08 f0       	brcs	.+2      	; 0xa9e <_ZN7SDClass12getParentDirEPKcPi+0x7e>
     a9c:	8c e0       	ldi	r24, 0x0C	; 12
     a9e:	08 2f       	mov	r16, r24
     aa0:	10 e0       	ldi	r17, 0x00	; 0
     aa2:	ce 01       	movw	r24, r28
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	b7 01       	movw	r22, r14
     aa8:	a8 01       	movw	r20, r16
     aaa:	0e 94 c0 1d 	call	0x3b80	; 0x3b80 <strncpy>
     aae:	e1 e0       	ldi	r30, 0x01	; 1
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	ec 0f       	add	r30, r28
     ab4:	fd 1f       	adc	r31, r29
     ab6:	e0 0f       	add	r30, r16
     ab8:	f1 1f       	adc	r31, r17
     aba:	10 82       	st	Z, r1
     abc:	c5 01       	movw	r24, r10
     abe:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <_ZN6SdFile5closeEv>
     ac2:	c5 01       	movw	r24, r10
     ac4:	b6 01       	movw	r22, r12
     ac6:	ae 01       	movw	r20, r28
     ac8:	4f 5f       	subi	r20, 0xFF	; 255
     aca:	5f 4f       	sbci	r21, 0xFF	; 255
     acc:	21 e0       	ldi	r18, 0x01	; 1
     ace:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN6SdFile4openEPS_PKch>
     ad2:	88 23       	and	r24, r24
     ad4:	49 f4       	brne	.+18     	; 0xae8 <_ZN7SDClass12getParentDirEPKcPi+0xc8>
     ad6:	f4 01       	movw	r30, r8
     ad8:	13 82       	std	Z+3, r1	; 0x03
     ada:	12 82       	std	Z+2, r1	; 0x02
     adc:	87 ec       	ldi	r24, 0xC7	; 199
     ade:	91 e0       	ldi	r25, 0x01	; 1
     ae0:	91 83       	std	Z+1, r25	; 0x01
     ae2:	80 83       	st	Z, r24
     ae4:	15 82       	std	Z+5, r1	; 0x05
     ae6:	1b c0       	rjmp	.+54     	; 0xb1e <_ZN7SDClass12getParentDirEPKcPi+0xfe>
     ae8:	e0 0e       	add	r14, r16
     aea:	f1 1e       	adc	r15, r17
     aec:	c6 01       	movw	r24, r12
     aee:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <_ZN6SdFile5closeEv>
     af2:	9c 2d       	mov	r25, r12
     af4:	8d 2d       	mov	r24, r13
     af6:	65 01       	movw	r12, r10
     af8:	a9 2e       	mov	r10, r25
     afa:	b8 2e       	mov	r11, r24
     afc:	c7 01       	movw	r24, r14
     afe:	6f e2       	ldi	r22, 0x2F	; 47
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	0e 94 b5 1d 	call	0x3b6a	; 0x3b6a <strchr>
     b06:	00 97       	sbiw	r24, 0x00	; 0
     b08:	09 f0       	breq	.+2      	; 0xb0c <_ZN7SDClass12getParentDirEPKcPi+0xec>
     b0a:	bd cf       	rjmp	.-134    	; 0xa86 <_ZN7SDClass12getParentDirEPKcPi+0x66>
     b0c:	e6 18       	sub	r14, r6
     b0e:	f7 08       	sbc	r15, r7
     b10:	f2 01       	movw	r30, r4
     b12:	f1 82       	std	Z+1, r15	; 0x01
     b14:	e0 82       	st	Z, r14
     b16:	c4 01       	movw	r24, r8
     b18:	b6 01       	movw	r22, r12
     b1a:	0e 94 bf 04 	call	0x97e	; 0x97e <_ZN6SdFileC1ERKS_>
     b1e:	c4 01       	movw	r24, r8
     b20:	c9 5b       	subi	r28, 0xB9	; 185
     b22:	df 4f       	sbci	r29, 0xFF	; 255
     b24:	0f b6       	in	r0, 0x3f	; 63
     b26:	f8 94       	cli
     b28:	de bf       	out	0x3e, r29	; 62
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	cd bf       	out	0x3d, r28	; 61
     b2e:	df 91       	pop	r29
     b30:	cf 91       	pop	r28
     b32:	1f 91       	pop	r17
     b34:	0f 91       	pop	r16
     b36:	ff 90       	pop	r15
     b38:	ef 90       	pop	r14
     b3a:	df 90       	pop	r13
     b3c:	cf 90       	pop	r12
     b3e:	bf 90       	pop	r11
     b40:	af 90       	pop	r10
     b42:	9f 90       	pop	r9
     b44:	8f 90       	pop	r8
     b46:	7f 90       	pop	r7
     b48:	6f 90       	pop	r6
     b4a:	5f 90       	pop	r5
     b4c:	4f 90       	pop	r4
     b4e:	08 95       	ret

00000b50 <_ZN7SDClass4openEPKch>:
     b50:	af 92       	push	r10
     b52:	bf 92       	push	r11
     b54:	df 92       	push	r13
     b56:	ef 92       	push	r14
     b58:	ff 92       	push	r15
     b5a:	0f 93       	push	r16
     b5c:	1f 93       	push	r17
     b5e:	cf 93       	push	r28
     b60:	df 93       	push	r29
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
     b66:	c6 57       	subi	r28, 0x76	; 118
     b68:	d0 40       	sbci	r29, 0x00	; 0
     b6a:	0f b6       	in	r0, 0x3f	; 63
     b6c:	f8 94       	cli
     b6e:	de bf       	out	0x3e, r29	; 62
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	cd bf       	out	0x3d, r28	; 61
     b74:	7c 01       	movw	r14, r24
     b76:	5a 01       	movw	r10, r20
     b78:	d2 2e       	mov	r13, r18
     b7a:	ce 01       	movw	r24, r28
     b7c:	86 5a       	subi	r24, 0xA6	; 166
     b7e:	9f 4f       	sbci	r25, 0xFF	; 255
     b80:	9e 01       	movw	r18, r28
     b82:	2f 5f       	subi	r18, 0xFF	; 255
     b84:	3f 4f       	sbci	r19, 0xFF	; 255
     b86:	0e 94 10 05 	call	0xa20	; 0xa20 <_ZN7SDClass12getParentDirEPKcPi>
     b8a:	09 81       	ldd	r16, Y+1	; 0x01
     b8c:	1a 81       	ldd	r17, Y+2	; 0x02
     b8e:	0a 0d       	add	r16, r10
     b90:	1b 1d       	adc	r17, r11
     b92:	f8 01       	movw	r30, r16
     b94:	80 81       	ld	r24, Z
     b96:	88 23       	and	r24, r24
     b98:	71 f4       	brne	.+28     	; 0xbb6 <_ZN7SDClass4openEPKch+0x66>
     b9a:	ce 01       	movw	r24, r28
     b9c:	cd 96       	adiw	r24, 0x3d	; 61
     b9e:	be 01       	movw	r22, r28
     ba0:	66 5a       	subi	r22, 0xA6	; 166
     ba2:	7f 4f       	sbci	r23, 0xFF	; 255
     ba4:	0e 94 bf 04 	call	0x97e	; 0x97e <_ZN6SdFileC1ERKS_>
     ba8:	c7 01       	movw	r24, r14
     baa:	be 01       	movw	r22, r28
     bac:	63 5c       	subi	r22, 0xC3	; 195
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	41 ec       	ldi	r20, 0xC1	; 193
     bb2:	51 e0       	ldi	r21, 0x01	; 1
     bb4:	45 c0       	rjmp	.+138    	; 0xc40 <_ZN7SDClass4openEPKch+0xf0>
     bb6:	1b a2       	lds	r17, 0x9b
     bb8:	1a a2       	lds	r17, 0x9a
     bba:	87 ec       	ldi	r24, 0xC7	; 199
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	99 a3       	lds	r25, 0x59
     bc0:	88 a3       	lds	r24, 0x58
     bc2:	1d a2       	lds	r17, 0x9d
     bc4:	a0 96       	adiw	r28, 0x20	; 32
     bc6:	8f ad       	sts	0x6f, r24
     bc8:	a0 97       	sbiw	r28, 0x20	; 32
     bca:	88 23       	and	r24, r24
     bcc:	c9 f0       	breq	.+50     	; 0xc00 <_ZN7SDClass4openEPKch+0xb0>
  uint8_t isOpen(void) const {return type_ != FAT_FILE_TYPE_CLOSED;}
  /** \return True if this is a SdFile for a subdirectory else false. */
  uint8_t isSubDir(void) const {return type_ == FAT_FILE_TYPE_SUBDIR;}
  /** \return True if this is a SdFile for the root directory. */
  uint8_t isRoot(void) const {
    return type_ == FAT_FILE_TYPE_ROOT16 || type_ == FAT_FILE_TYPE_ROOT32;
     bce:	82 50       	subi	r24, 0x02	; 2
     bd0:	82 30       	cpi	r24, 0x02	; 2
     bd2:	58 f4       	brcc	.+22     	; 0xbea <_ZN7SDClass4openEPKch+0x9a>
  /** \deprecated Use:
   * uint8_t SdFile::open(SdFile* dirFile, const char* fileName, uint8_t oflag);
   */
  uint8_t open(SdFile& dirFile, // NOLINT
    const char* fileName, uint8_t oflag) {
    return open(&dirFile, fileName, oflag);
     bd4:	ce 01       	movw	r24, r28
     bd6:	80 96       	adiw	r24, 0x20	; 32
     bd8:	6b e3       	ldi	r22, 0x3B	; 59
     bda:	74 e0       	ldi	r23, 0x04	; 4
     bdc:	a8 01       	movw	r20, r16
     bde:	2d 2d       	mov	r18, r13
     be0:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN6SdFile4openEPS_PKch>
     be4:	88 23       	and	r24, r24
     be6:	a9 f4       	brne	.+42     	; 0xc12 <_ZN7SDClass4openEPKch+0xc2>
     be8:	0b c0       	rjmp	.+22     	; 0xc00 <_ZN7SDClass4openEPKch+0xb0>
     bea:	ce 01       	movw	r24, r28
     bec:	80 96       	adiw	r24, 0x20	; 32
     bee:	be 01       	movw	r22, r28
     bf0:	66 5a       	subi	r22, 0xA6	; 166
     bf2:	7f 4f       	sbci	r23, 0xFF	; 255
     bf4:	a8 01       	movw	r20, r16
     bf6:	2d 2d       	mov	r18, r13
     bf8:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN6SdFile4openEPS_PKch>
     bfc:	88 23       	and	r24, r24
     bfe:	21 f4       	brne	.+8      	; 0xc08 <_ZN7SDClass4openEPKch+0xb8>
     c00:	c7 01       	movw	r24, r14
     c02:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_ZN4FileC1Ev>
     c06:	1e c0       	rjmp	.+60     	; 0xc44 <_ZN7SDClass4openEPKch+0xf4>
     c08:	ce 01       	movw	r24, r28
     c0a:	86 5a       	subi	r24, 0xA6	; 166
     c0c:	9f 4f       	sbci	r25, 0xFF	; 255
     c0e:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <_ZN6SdFile5closeEv>
     c12:	8d 2d       	mov	r24, r13
     c14:	86 70       	andi	r24, 0x06	; 6
     c16:	41 f0       	breq	.+16     	; 0xc28 <_ZN7SDClass4openEPKch+0xd8>
     c18:	4b a9       	sts	0x4b, r20
     c1a:	5c a9       	sts	0x4c, r21
     c1c:	6d a9       	sts	0x4d, r22
     c1e:	7e a9       	sts	0x4e, r23
     c20:	ce 01       	movw	r24, r28
     c22:	80 96       	adiw	r24, 0x20	; 32
     c24:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
     c28:	ce 01       	movw	r24, r28
     c2a:	03 96       	adiw	r24, 0x03	; 3
     c2c:	be 01       	movw	r22, r28
     c2e:	60 5e       	subi	r22, 0xE0	; 224
     c30:	7f 4f       	sbci	r23, 0xFF	; 255
     c32:	0e 94 bf 04 	call	0x97e	; 0x97e <_ZN6SdFileC1ERKS_>
     c36:	c7 01       	movw	r24, r14
     c38:	be 01       	movw	r22, r28
     c3a:	6d 5f       	subi	r22, 0xFD	; 253
     c3c:	7f 4f       	sbci	r23, 0xFF	; 255
     c3e:	a8 01       	movw	r20, r16
     c40:	0e 94 9b 01 	call	0x336	; 0x336 <_ZN4FileC1E6SdFilePKc>
     c44:	c7 01       	movw	r24, r14
     c46:	ca 58       	subi	r28, 0x8A	; 138
     c48:	df 4f       	sbci	r29, 0xFF	; 255
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	cd bf       	out	0x3d, r28	; 61
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
     c5a:	0f 91       	pop	r16
     c5c:	ff 90       	pop	r15
     c5e:	ef 90       	pop	r14
     c60:	df 90       	pop	r13
     c62:	bf 90       	pop	r11
     c64:	af 90       	pop	r10
     c66:	08 95       	ret

00000c68 <_GLOBAL__sub_I__Z20getNextPathComponentPcPjS_>:
 * \brief Raw access to SD and SDHC flash memory cards.
 */
class Sd2Card {
 public:
  /** Construct an instance of Sd2Card. */
  Sd2Card(void) : errorCode_(0), inBlock_(0), partialBlockRead_(0), type_(0) {}
     c68:	10 92 16 04 	sts	0x0416, r1
     c6c:	10 92 17 04 	sts	0x0417, r1
     c70:	10 92 1a 04 	sts	0x041A, r1
     c74:	10 92 1c 04 	sts	0x041C, r1
 * \brief Access FAT16 and FAT32 volumes on SD and SDHC cards.
 */
class SdVolume {
 public:
  /** Create an instance of SdVolume */
  SdVolume(void) :allocSearchStart_(2), fatType_(0) {}
     c78:	82 e0       	ldi	r24, 0x02	; 2
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	a0 e0       	ldi	r26, 0x00	; 0
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	80 93 1d 04 	sts	0x041D, r24
     c84:	90 93 1e 04 	sts	0x041E, r25
     c88:	a0 93 1f 04 	sts	0x041F, r26
     c8c:	b0 93 20 04 	sts	0x0420, r27
     c90:	10 92 34 04 	sts	0x0434, r1
     c94:	10 92 3e 04 	sts	0x043E, r1
     c98:	10 92 3d 04 	sts	0x043D, r1
 * \brief Access FAT16 and FAT32 files on SD and SDHC cards.
 */
class SdFile : public Print {
 public:
  /** Create an instance of SdFile. */
  SdFile(void) : type_(FAT_FILE_TYPE_CLOSED) {}
     c9c:	87 ec       	ldi	r24, 0xC7	; 199
     c9e:	91 e0       	ldi	r25, 0x01	; 1
     ca0:	90 93 3c 04 	sts	0x043C, r25
     ca4:	80 93 3b 04 	sts	0x043B, r24
     ca8:	10 92 40 04 	sts	0x0440, r1
     cac:	08 95       	ret

00000cae <_ZL7spiSendh>:
     cae:	8e bd       	out	0x2e, r24	; 46
     cb0:	0d b4       	in	r0, 0x2d	; 45
     cb2:	07 fe       	sbrs	r0, 7
     cb4:	fd cf       	rjmp	.-6      	; 0xcb0 <_ZL7spiSendh+0x2>
     cb6:	08 95       	ret

00000cb8 <_ZL6spiRecv>:
     cb8:	8f ef       	ldi	r24, 0xFF	; 255
     cba:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
     cbe:	8e b5       	in	r24, 0x2e	; 46
     cc0:	08 95       	ret

00000cc2 <_ZN7Sd2Card14chipSelectHighEv>:
     cc2:	fc 01       	movw	r30, r24
     cc4:	84 81       	ldd	r24, Z+4	; 0x04
     cc6:	61 e0       	ldi	r22, 0x01	; 1
     cc8:	0e 94 45 19 	call	0x328a	; 0x328a <digitalWrite>
     ccc:	08 95       	ret

00000cce <_ZN7Sd2Card13chipSelectLowEv>:
     cce:	fc 01       	movw	r30, r24
     cd0:	84 81       	ldd	r24, Z+4	; 0x04
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	0e 94 45 19 	call	0x328a	; 0x328a <digitalWrite>
     cd8:	08 95       	ret

00000cda <_ZN7Sd2Card7readEndEv>:
     cda:	cf 93       	push	r28
     cdc:	df 93       	push	r29
     cde:	ec 01       	movw	r28, r24
     ce0:	8e 81       	ldd	r24, Y+6	; 0x06
     ce2:	88 23       	and	r24, r24
     ce4:	d1 f0       	breq	.+52     	; 0xd1a <_ZN7Sd2Card7readEndEv+0x40>
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	8e bd       	out	0x2e, r24	; 46
     cea:	4f ef       	ldi	r20, 0xFF	; 255
     cec:	04 c0       	rjmp	.+8      	; 0xcf6 <_ZN7Sd2Card7readEndEv+0x1c>
     cee:	0d b4       	in	r0, 0x2d	; 45
     cf0:	07 fe       	sbrs	r0, 7
     cf2:	fd cf       	rjmp	.-6      	; 0xcee <_ZN7Sd2Card7readEndEv+0x14>
     cf4:	4e bd       	out	0x2e, r20	; 46
     cf6:	8f 81       	ldd	r24, Y+7	; 0x07
     cf8:	98 85       	ldd	r25, Y+8	; 0x08
     cfa:	9c 01       	movw	r18, r24
     cfc:	2f 5f       	subi	r18, 0xFF	; 255
     cfe:	3f 4f       	sbci	r19, 0xFF	; 255
     d00:	38 87       	std	Y+8, r19	; 0x08
     d02:	2f 83       	std	Y+7, r18	; 0x07
     d04:	22 e0       	ldi	r18, 0x02	; 2
     d06:	81 30       	cpi	r24, 0x01	; 1
     d08:	92 07       	cpc	r25, r18
     d0a:	88 f3       	brcs	.-30     	; 0xcee <_ZN7Sd2Card7readEndEv+0x14>
     d0c:	0d b4       	in	r0, 0x2d	; 45
     d0e:	07 fe       	sbrs	r0, 7
     d10:	fd cf       	rjmp	.-6      	; 0xd0c <_ZN7Sd2Card7readEndEv+0x32>
     d12:	ce 01       	movw	r24, r28
     d14:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
     d18:	1e 82       	std	Y+6, r1	; 0x06
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <_ZN7Sd2Card10setSckRateEh>:
     d20:	67 30       	cpi	r22, 0x07	; 7
     d22:	28 f0       	brcs	.+10     	; 0xd2e <_ZN7Sd2Card10setSckRateEh+0xe>
     d24:	26 e1       	ldi	r18, 0x16	; 22
     d26:	fc 01       	movw	r30, r24
     d28:	25 83       	std	Z+5, r18	; 0x05
     d2a:	80 e0       	ldi	r24, 0x00	; 0
     d2c:	08 95       	ret
     d2e:	96 2f       	mov	r25, r22
     d30:	8d b5       	in	r24, 0x2d	; 45
     d32:	60 fd       	sbrc	r22, 0
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <_ZN7Sd2Card10setSckRateEh+0x1a>
     d36:	66 30       	cpi	r22, 0x06	; 6
     d38:	11 f4       	brne	.+4      	; 0xd3e <_ZN7Sd2Card10setSckRateEh+0x1e>
     d3a:	8e 7f       	andi	r24, 0xFE	; 254
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <_ZN7Sd2Card10setSckRateEh+0x20>
     d3e:	81 60       	ori	r24, 0x01	; 1
     d40:	8d bd       	out	0x2d, r24	; 45
     d42:	8c b5       	in	r24, 0x2c	; 44
     d44:	8c 7f       	andi	r24, 0xFC	; 252
     d46:	8c bd       	out	0x2c, r24	; 44
     d48:	3c b5       	in	r19, 0x2c	; 44
     d4a:	92 ff       	sbrs	r25, 2
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <_ZN7Sd2Card10setSckRateEh+0x32>
     d4e:	22 e0       	ldi	r18, 0x02	; 2
     d50:	01 c0       	rjmp	.+2      	; 0xd54 <_ZN7Sd2Card10setSckRateEh+0x34>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	91 ff       	sbrs	r25, 1
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	83 2b       	or	r24, r19
     d5c:	82 2b       	or	r24, r18
     d5e:	8c bd       	out	0x2c, r24	; 44
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	08 95       	ret

00000d64 <_ZN7Sd2Card11waitNotBusyEj>:
     d64:	0f 93       	push	r16
     d66:	1f 93       	push	r17
     d68:	cf 93       	push	r28
     d6a:	df 93       	push	r29
     d6c:	eb 01       	movw	r28, r22
     d6e:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     d72:	8b 01       	movw	r16, r22
     d74:	9c 01       	movw	r18, r24
     d76:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     d7a:	8f 3f       	cpi	r24, 0xFF	; 255
     d7c:	49 f0       	breq	.+18     	; 0xd90 <_ZN7Sd2Card11waitNotBusyEj+0x2c>
     d7e:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     d82:	60 1b       	sub	r22, r16
     d84:	71 0b       	sbc	r23, r17
     d86:	6c 17       	cp	r22, r28
     d88:	7d 07       	cpc	r23, r29
     d8a:	a8 f3       	brcs	.-22     	; 0xd76 <_ZN7Sd2Card11waitNotBusyEj+0x12>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	01 c0       	rjmp	.+2      	; 0xd92 <_ZN7Sd2Card11waitNotBusyEj+0x2e>
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	1f 91       	pop	r17
     d98:	0f 91       	pop	r16
     d9a:	08 95       	ret

00000d9c <_ZN7Sd2Card11cardCommandEhm>:
     d9c:	8f 92       	push	r8
     d9e:	9f 92       	push	r9
     da0:	af 92       	push	r10
     da2:	bf 92       	push	r11
     da4:	ff 92       	push	r15
     da6:	0f 93       	push	r16
     da8:	1f 93       	push	r17
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	8c 01       	movw	r16, r24
     db0:	f6 2e       	mov	r15, r22
     db2:	49 01       	movw	r8, r18
     db4:	5a 01       	movw	r10, r20
     db6:	0e 94 6d 06 	call	0xcda	; 0xcda <_ZN7Sd2Card7readEndEv>
     dba:	c8 01       	movw	r24, r16
     dbc:	0e 94 67 06 	call	0xcce	; 0xcce <_ZN7Sd2Card13chipSelectLowEv>
     dc0:	c8 01       	movw	r24, r16
     dc2:	6c e2       	ldi	r22, 0x2C	; 44
     dc4:	71 e0       	ldi	r23, 0x01	; 1
     dc6:	0e 94 b2 06 	call	0xd64	; 0xd64 <_ZN7Sd2Card11waitNotBusyEj>
     dca:	8f 2d       	mov	r24, r15
     dcc:	80 64       	ori	r24, 0x40	; 64
     dce:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
     dd2:	c8 e1       	ldi	r28, 0x18	; 24
     dd4:	d0 e0       	ldi	r29, 0x00	; 0
     dd6:	d5 01       	movw	r26, r10
     dd8:	c4 01       	movw	r24, r8
     dda:	0c 2e       	mov	r0, r28
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <_ZN7Sd2Card11cardCommandEhm+0x4a>
     dde:	b6 95       	lsr	r27
     de0:	a7 95       	ror	r26
     de2:	97 95       	ror	r25
     de4:	87 95       	ror	r24
     de6:	0a 94       	dec	r0
     de8:	d2 f7       	brpl	.-12     	; 0xdde <_ZN7Sd2Card11cardCommandEhm+0x42>
     dea:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
     dee:	28 97       	sbiw	r28, 0x08	; 8
     df0:	8f ef       	ldi	r24, 0xFF	; 255
     df2:	c8 3f       	cpi	r28, 0xF8	; 248
     df4:	d8 07       	cpc	r29, r24
     df6:	79 f7       	brne	.-34     	; 0xdd6 <_ZN7Sd2Card11cardCommandEhm+0x3a>
     df8:	ff 20       	and	r15, r15
     dfa:	29 f0       	breq	.+10     	; 0xe06 <_ZN7Sd2Card11cardCommandEhm+0x6a>
     dfc:	e8 e0       	ldi	r30, 0x08	; 8
     dfe:	fe 16       	cp	r15, r30
     e00:	21 f0       	breq	.+8      	; 0xe0a <_ZN7Sd2Card11cardCommandEhm+0x6e>
     e02:	8f ef       	ldi	r24, 0xFF	; 255
     e04:	03 c0       	rjmp	.+6      	; 0xe0c <_ZN7Sd2Card11cardCommandEhm+0x70>
     e06:	85 e9       	ldi	r24, 0x95	; 149
     e08:	01 c0       	rjmp	.+2      	; 0xe0c <_ZN7Sd2Card11cardCommandEhm+0x70>
     e0a:	87 e8       	ldi	r24, 0x87	; 135
     e0c:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
     e10:	c0 e0       	ldi	r28, 0x00	; 0
     e12:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     e16:	f8 01       	movw	r30, r16
     e18:	82 87       	std	Z+10, r24	; 0x0a
     e1a:	87 ff       	sbrs	r24, 7
     e1c:	04 c0       	rjmp	.+8      	; 0xe26 <_ZN7Sd2Card11cardCommandEhm+0x8a>
     e1e:	cf 3f       	cpi	r28, 0xFF	; 255
     e20:	11 f0       	breq	.+4      	; 0xe26 <_ZN7Sd2Card11cardCommandEhm+0x8a>
     e22:	cf 5f       	subi	r28, 0xFF	; 255
     e24:	f6 cf       	rjmp	.-20     	; 0xe12 <_ZN7Sd2Card11cardCommandEhm+0x76>
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	1f 91       	pop	r17
     e2c:	0f 91       	pop	r16
     e2e:	ff 90       	pop	r15
     e30:	bf 90       	pop	r11
     e32:	af 90       	pop	r10
     e34:	9f 90       	pop	r9
     e36:	8f 90       	pop	r8
     e38:	08 95       	ret

00000e3a <_ZN7Sd2Card4initEhh>:
     e3a:	af 92       	push	r10
     e3c:	bf 92       	push	r11
     e3e:	cf 92       	push	r12
     e40:	df 92       	push	r13
     e42:	ef 92       	push	r14
     e44:	ff 92       	push	r15
     e46:	0f 93       	push	r16
     e48:	1f 93       	push	r17
     e4a:	cf 93       	push	r28
     e4c:	df 93       	push	r29
     e4e:	ec 01       	movw	r28, r24
     e50:	06 2f       	mov	r16, r22
     e52:	1b 86       	std	Y+11, r1	; 0x0b
     e54:	19 86       	std	Y+9, r1	; 0x09
     e56:	1e 82       	std	Y+6, r1	; 0x06
     e58:	1d 82       	std	Y+5, r1	; 0x05
     e5a:	4c 83       	std	Y+4, r20	; 0x04
     e5c:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     e60:	dc 01       	movw	r26, r24
     e62:	cb 01       	movw	r24, r22
     e64:	5c 01       	movw	r10, r24
     e66:	8c 81       	ldd	r24, Y+4	; 0x04
     e68:	61 e0       	ldi	r22, 0x01	; 1
     e6a:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
     e6e:	ce 01       	movw	r24, r28
     e70:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
     e74:	8c e0       	ldi	r24, 0x0C	; 12
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
     e7c:	8b e0       	ldi	r24, 0x0B	; 11
     e7e:	61 e0       	ldi	r22, 0x01	; 1
     e80:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
     e84:	8d e0       	ldi	r24, 0x0D	; 13
     e86:	61 e0       	ldi	r22, 0x01	; 1
     e88:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
     e8c:	8a e0       	ldi	r24, 0x0A	; 10
     e8e:	61 e0       	ldi	r22, 0x01	; 1
     e90:	0e 94 06 19 	call	0x320c	; 0x320c <pinMode>
     e94:	8a e0       	ldi	r24, 0x0A	; 10
     e96:	61 e0       	ldi	r22, 0x01	; 1
     e98:	0e 94 45 19 	call	0x328a	; 0x328a <digitalWrite>
     e9c:	83 e5       	ldi	r24, 0x53	; 83
     e9e:	8c bd       	out	0x2c, r24	; 44
     ea0:	8d b5       	in	r24, 0x2d	; 45
     ea2:	8e 7f       	andi	r24, 0xFE	; 254
     ea4:	8d bd       	out	0x2d, r24	; 45
     ea6:	1a e0       	ldi	r17, 0x0A	; 10
     ea8:	8f ef       	ldi	r24, 0xFF	; 255
     eaa:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
     eae:	11 50       	subi	r17, 0x01	; 1
     eb0:	d9 f7       	brne	.-10     	; 0xea8 <_ZN7Sd2Card4initEhh+0x6e>
     eb2:	ce 01       	movw	r24, r28
     eb4:	0e 94 67 06 	call	0xcce	; 0xcce <_ZN7Sd2Card13chipSelectLowEv>
     eb8:	0a c0       	rjmp	.+20     	; 0xece <_ZN7Sd2Card4initEhh+0x94>
     eba:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     ebe:	6a 19       	sub	r22, r10
     ec0:	7b 09       	sbc	r23, r11
     ec2:	87 e0       	ldi	r24, 0x07	; 7
     ec4:	61 3d       	cpi	r22, 0xD1	; 209
     ec6:	78 07       	cpc	r23, r24
     ec8:	10 f0       	brcs	.+4      	; 0xece <_ZN7Sd2Card4initEhh+0x94>
     eca:	81 e0       	ldi	r24, 0x01	; 1
     ecc:	57 c0       	rjmp	.+174    	; 0xf7c <_ZN7Sd2Card4initEhh+0x142>
     ece:	ce 01       	movw	r24, r28
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	20 e0       	ldi	r18, 0x00	; 0
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	a9 01       	movw	r20, r18
     ed8:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
     edc:	18 2f       	mov	r17, r24
     ede:	8a 87       	std	Y+10, r24	; 0x0a
     ee0:	81 30       	cpi	r24, 0x01	; 1
     ee2:	59 f7       	brne	.-42     	; 0xeba <_ZN7Sd2Card4initEhh+0x80>
     ee4:	ce 01       	movw	r24, r28
     ee6:	68 e0       	ldi	r22, 0x08	; 8
     ee8:	2a ea       	ldi	r18, 0xAA	; 170
     eea:	31 e0       	ldi	r19, 0x01	; 1
     eec:	40 e0       	ldi	r20, 0x00	; 0
     eee:	50 e0       	ldi	r21, 0x00	; 0
     ef0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
     ef4:	82 ff       	sbrs	r24, 2
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <_ZN7Sd2Card4initEhh+0xc2>
     ef8:	1b 87       	std	Y+11, r17	; 0x0b
     efa:	0c c0       	rjmp	.+24     	; 0xf14 <_ZN7Sd2Card4initEhh+0xda>
     efc:	14 e0       	ldi	r17, 0x04	; 4
     efe:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     f02:	8a 87       	std	Y+10, r24	; 0x0a
     f04:	11 50       	subi	r17, 0x01	; 1
     f06:	d9 f7       	brne	.-10     	; 0xefe <_ZN7Sd2Card4initEhh+0xc4>
     f08:	8a 3a       	cpi	r24, 0xAA	; 170
     f0a:	11 f0       	breq	.+4      	; 0xf10 <_ZN7Sd2Card4initEhh+0xd6>
     f0c:	82 e0       	ldi	r24, 0x02	; 2
     f0e:	36 c0       	rjmp	.+108    	; 0xf7c <_ZN7Sd2Card4initEhh+0x142>
     f10:	82 e0       	ldi	r24, 0x02	; 2
     f12:	8b 87       	std	Y+11, r24	; 0x0b
     f14:	8b 85       	ldd	r24, Y+11	; 0x0b
     f16:	82 30       	cpi	r24, 0x02	; 2
     f18:	31 f4       	brne	.+12     	; 0xf26 <_ZN7Sd2Card4initEhh+0xec>
     f1a:	c1 2c       	mov	r12, r1
     f1c:	d1 2c       	mov	r13, r1
     f1e:	e1 2c       	mov	r14, r1
     f20:	80 e4       	ldi	r24, 0x40	; 64
     f22:	f8 2e       	mov	r15, r24
     f24:	0e c0       	rjmp	.+28     	; 0xf42 <_ZN7Sd2Card4initEhh+0x108>
     f26:	cc 24       	eor	r12, r12
     f28:	dd 24       	eor	r13, r13
     f2a:	76 01       	movw	r14, r12
     f2c:	0a c0       	rjmp	.+20     	; 0xf42 <_ZN7Sd2Card4initEhh+0x108>
     f2e:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     f32:	6a 19       	sub	r22, r10
     f34:	7b 09       	sbc	r23, r11
     f36:	87 e0       	ldi	r24, 0x07	; 7
     f38:	61 3d       	cpi	r22, 0xD1	; 209
     f3a:	78 07       	cpc	r23, r24
     f3c:	10 f0       	brcs	.+4      	; 0xf42 <_ZN7Sd2Card4initEhh+0x108>
     f3e:	88 e0       	ldi	r24, 0x08	; 8
     f40:	1d c0       	rjmp	.+58     	; 0xf7c <_ZN7Sd2Card4initEhh+0x142>
     f42:	ce 01       	movw	r24, r28
     f44:	67 e3       	ldi	r22, 0x37	; 55
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	a9 01       	movw	r20, r18
     f4c:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
     f50:	ce 01       	movw	r24, r28
     f52:	69 e2       	ldi	r22, 0x29	; 41
     f54:	a7 01       	movw	r20, r14
     f56:	96 01       	movw	r18, r12
     f58:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
     f5c:	8a 87       	std	Y+10, r24	; 0x0a
     f5e:	88 23       	and	r24, r24
     f60:	31 f7       	brne	.-52     	; 0xf2e <_ZN7Sd2Card4initEhh+0xf4>
     f62:	8b 85       	ldd	r24, Y+11	; 0x0b
     f64:	82 30       	cpi	r24, 0x02	; 2
     f66:	e9 f4       	brne	.+58     	; 0xfa2 <_ZN7Sd2Card4initEhh+0x168>
     f68:	ce 01       	movw	r24, r28
     f6a:	6a e3       	ldi	r22, 0x3A	; 58
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	a9 01       	movw	r20, r18
     f72:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
     f76:	88 23       	and	r24, r24
     f78:	39 f0       	breq	.+14     	; 0xf88 <_ZN7Sd2Card4initEhh+0x14e>
     f7a:	86 e0       	ldi	r24, 0x06	; 6
     f7c:	8d 83       	std	Y+5, r24	; 0x05
     f7e:	ce 01       	movw	r24, r28
     f80:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	14 c0       	rjmp	.+40     	; 0xfb0 <_ZN7Sd2Card4initEhh+0x176>
     f88:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     f8c:	80 7c       	andi	r24, 0xC0	; 192
     f8e:	80 3c       	cpi	r24, 0xC0	; 192
     f90:	11 f4       	brne	.+4      	; 0xf96 <_ZN7Sd2Card4initEhh+0x15c>
     f92:	83 e0       	ldi	r24, 0x03	; 3
     f94:	8b 87       	std	Y+11, r24	; 0x0b
     f96:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     f9a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     f9e:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     fa2:	ce 01       	movw	r24, r28
     fa4:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
     fa8:	ce 01       	movw	r24, r28
     faa:	60 2f       	mov	r22, r16
     fac:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Sd2Card10setSckRateEh>
     fb0:	df 91       	pop	r29
     fb2:	cf 91       	pop	r28
     fb4:	1f 91       	pop	r17
     fb6:	0f 91       	pop	r16
     fb8:	ff 90       	pop	r15
     fba:	ef 90       	pop	r14
     fbc:	df 90       	pop	r13
     fbe:	cf 90       	pop	r12
     fc0:	bf 90       	pop	r11
     fc2:	af 90       	pop	r10
     fc4:	08 95       	ret

00000fc6 <_ZN7Sd2Card14waitStartBlockEv>:
     fc6:	0f 93       	push	r16
     fc8:	1f 93       	push	r17
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	ec 01       	movw	r28, r24
     fd0:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     fd4:	8b 01       	movw	r16, r22
     fd6:	9c 01       	movw	r18, r24
     fd8:	0a c0       	rjmp	.+20     	; 0xfee <_ZN7Sd2Card14waitStartBlockEv+0x28>
     fda:	0e 94 b3 18 	call	0x3166	; 0x3166 <millis>
     fde:	60 1b       	sub	r22, r16
     fe0:	71 0b       	sbc	r23, r17
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	6d 32       	cpi	r22, 0x2D	; 45
     fe6:	78 07       	cpc	r23, r24
     fe8:	10 f0       	brcs	.+4      	; 0xfee <_ZN7Sd2Card14waitStartBlockEv+0x28>
     fea:	8f e0       	ldi	r24, 0x0F	; 15
     fec:	08 c0       	rjmp	.+16     	; 0xffe <_ZN7Sd2Card14waitStartBlockEv+0x38>
     fee:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
     ff2:	8a 87       	std	Y+10, r24	; 0x0a
     ff4:	8f 3f       	cpi	r24, 0xFF	; 255
     ff6:	89 f3       	breq	.-30     	; 0xfda <_ZN7Sd2Card14waitStartBlockEv+0x14>
     ff8:	8e 3f       	cpi	r24, 0xFE	; 254
     ffa:	39 f0       	breq	.+14     	; 0x100a <_ZN7Sd2Card14waitStartBlockEv+0x44>
     ffc:	8d e0       	ldi	r24, 0x0D	; 13
     ffe:	8d 83       	std	Y+5, r24	; 0x05
    1000:	ce 01       	movw	r24, r28
    1002:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	01 c0       	rjmp	.+2      	; 0x100c <_ZN7Sd2Card14waitStartBlockEv+0x46>
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	df 91       	pop	r29
    100e:	cf 91       	pop	r28
    1010:	1f 91       	pop	r17
    1012:	0f 91       	pop	r16
    1014:	08 95       	ret

00001016 <_ZN7Sd2Card8readDataEmjjPh>:
    1016:	8f 92       	push	r8
    1018:	9f 92       	push	r9
    101a:	af 92       	push	r10
    101c:	bf 92       	push	r11
    101e:	cf 92       	push	r12
    1020:	df 92       	push	r13
    1022:	ef 92       	push	r14
    1024:	ff 92       	push	r15
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	ec 01       	movw	r28, r24
    1030:	4a 01       	movw	r8, r20
    1032:	5b 01       	movw	r10, r22
    1034:	69 01       	movw	r12, r18
    1036:	01 15       	cp	r16, r1
    1038:	11 05       	cpc	r17, r1
    103a:	09 f4       	brne	.+2      	; 0x103e <_ZN7Sd2Card8readDataEmjjPh+0x28>
    103c:	7e c0       	rjmp	.+252    	; 0x113a <_ZN7Sd2Card8readDataEmjjPh+0x124>
    103e:	c8 01       	movw	r24, r16
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	22 e0       	ldi	r18, 0x02	; 2
    1046:	81 30       	cpi	r24, 0x01	; 1
    1048:	92 07       	cpc	r25, r18
    104a:	08 f0       	brcs	.+2      	; 0x104e <_ZN7Sd2Card8readDataEmjjPh+0x38>
    104c:	71 c0       	rjmp	.+226    	; 0x1130 <_ZN7Sd2Card8readDataEmjjPh+0x11a>
    104e:	8e 81       	ldd	r24, Y+6	; 0x06
    1050:	88 23       	and	r24, r24
    1052:	71 f0       	breq	.+28     	; 0x1070 <_ZN7Sd2Card8readDataEmjjPh+0x5a>
    1054:	88 81       	ld	r24, Y
    1056:	99 81       	ldd	r25, Y+1	; 0x01
    1058:	aa 81       	ldd	r26, Y+2	; 0x02
    105a:	bb 81       	ldd	r27, Y+3	; 0x03
    105c:	48 17       	cp	r20, r24
    105e:	59 07       	cpc	r21, r25
    1060:	6a 07       	cpc	r22, r26
    1062:	7b 07       	cpc	r23, r27
    1064:	29 f4       	brne	.+10     	; 0x1070 <_ZN7Sd2Card8readDataEmjjPh+0x5a>
    1066:	8f 81       	ldd	r24, Y+7	; 0x07
    1068:	98 85       	ldd	r25, Y+8	; 0x08
    106a:	c8 16       	cp	r12, r24
    106c:	d9 06       	cpc	r13, r25
    106e:	18 f5       	brcc	.+70     	; 0x10b6 <_ZN7Sd2Card8readDataEmjjPh+0xa0>
    1070:	88 82       	st	Y, r8
    1072:	99 82       	std	Y+1, r9	; 0x01
    1074:	aa 82       	std	Y+2, r10	; 0x02
    1076:	bb 82       	std	Y+3, r11	; 0x03
    1078:	8b 85       	ldd	r24, Y+11	; 0x0b
    107a:	83 30       	cpi	r24, 0x03	; 3
    107c:	39 f0       	breq	.+14     	; 0x108c <_ZN7Sd2Card8readDataEmjjPh+0x76>
    107e:	79 e0       	ldi	r23, 0x09	; 9
    1080:	88 0c       	add	r8, r8
    1082:	99 1c       	adc	r9, r9
    1084:	aa 1c       	adc	r10, r10
    1086:	bb 1c       	adc	r11, r11
    1088:	7a 95       	dec	r23
    108a:	d1 f7       	brne	.-12     	; 0x1080 <_ZN7Sd2Card8readDataEmjjPh+0x6a>
    108c:	ce 01       	movw	r24, r28
    108e:	61 e1       	ldi	r22, 0x11	; 17
    1090:	a5 01       	movw	r20, r10
    1092:	94 01       	movw	r18, r8
    1094:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
    1098:	88 23       	and	r24, r24
    109a:	19 f0       	breq	.+6      	; 0x10a2 <_ZN7Sd2Card8readDataEmjjPh+0x8c>
    109c:	83 e0       	ldi	r24, 0x03	; 3
    109e:	8d 83       	std	Y+5, r24	; 0x05
    10a0:	47 c0       	rjmp	.+142    	; 0x1130 <_ZN7Sd2Card8readDataEmjjPh+0x11a>
    10a2:	ce 01       	movw	r24, r28
    10a4:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <_ZN7Sd2Card14waitStartBlockEv>
    10a8:	88 23       	and	r24, r24
    10aa:	09 f4       	brne	.+2      	; 0x10ae <_ZN7Sd2Card8readDataEmjjPh+0x98>
    10ac:	41 c0       	rjmp	.+130    	; 0x1130 <_ZN7Sd2Card8readDataEmjjPh+0x11a>
    10ae:	18 86       	std	Y+8, r1	; 0x08
    10b0:	1f 82       	std	Y+7, r1	; 0x07
    10b2:	81 e0       	ldi	r24, 0x01	; 1
    10b4:	8e 83       	std	Y+6, r24	; 0x06
    10b6:	8f ef       	ldi	r24, 0xFF	; 255
    10b8:	8e bd       	out	0x2e, r24	; 46
    10ba:	2f ef       	ldi	r18, 0xFF	; 255
    10bc:	09 c0       	rjmp	.+18     	; 0x10d0 <_ZN7Sd2Card8readDataEmjjPh+0xba>
    10be:	0d b4       	in	r0, 0x2d	; 45
    10c0:	07 fe       	sbrs	r0, 7
    10c2:	fd cf       	rjmp	.-6      	; 0x10be <_ZN7Sd2Card8readDataEmjjPh+0xa8>
    10c4:	2e bd       	out	0x2e, r18	; 46
    10c6:	8f 81       	ldd	r24, Y+7	; 0x07
    10c8:	98 85       	ldd	r25, Y+8	; 0x08
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	98 87       	std	Y+8, r25	; 0x08
    10ce:	8f 83       	std	Y+7, r24	; 0x07
    10d0:	8f 81       	ldd	r24, Y+7	; 0x07
    10d2:	98 85       	ldd	r25, Y+8	; 0x08
    10d4:	8c 15       	cp	r24, r12
    10d6:	9d 05       	cpc	r25, r13
    10d8:	90 f3       	brcs	.-28     	; 0x10be <_ZN7Sd2Card8readDataEmjjPh+0xa8>
    10da:	98 01       	movw	r18, r16
    10dc:	21 50       	subi	r18, 0x01	; 1
    10de:	30 40       	sbci	r19, 0x00	; 0
    10e0:	f7 01       	movw	r30, r14
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	4f ef       	ldi	r20, 0xFF	; 255
    10e8:	07 c0       	rjmp	.+14     	; 0x10f8 <_ZN7Sd2Card8readDataEmjjPh+0xe2>
    10ea:	0d b4       	in	r0, 0x2d	; 45
    10ec:	07 fe       	sbrs	r0, 7
    10ee:	fd cf       	rjmp	.-6      	; 0x10ea <_ZN7Sd2Card8readDataEmjjPh+0xd4>
    10f0:	5e b5       	in	r21, 0x2e	; 46
    10f2:	51 93       	st	Z+, r21
    10f4:	4e bd       	out	0x2e, r20	; 46
    10f6:	01 96       	adiw	r24, 0x01	; 1
    10f8:	82 17       	cp	r24, r18
    10fa:	93 07       	cpc	r25, r19
    10fc:	b0 f3       	brcs	.-20     	; 0x10ea <_ZN7Sd2Card8readDataEmjjPh+0xd4>
    10fe:	0d b4       	in	r0, 0x2d	; 45
    1100:	07 fe       	sbrs	r0, 7
    1102:	fd cf       	rjmp	.-6      	; 0x10fe <_ZN7Sd2Card8readDataEmjjPh+0xe8>
    1104:	8e b5       	in	r24, 0x2e	; 46
    1106:	2e 0d       	add	r18, r14
    1108:	3f 1d       	adc	r19, r15
    110a:	f9 01       	movw	r30, r18
    110c:	80 83       	st	Z, r24
    110e:	8f 81       	ldd	r24, Y+7	; 0x07
    1110:	98 85       	ldd	r25, Y+8	; 0x08
    1112:	80 0f       	add	r24, r16
    1114:	91 1f       	adc	r25, r17
    1116:	98 87       	std	Y+8, r25	; 0x08
    1118:	8f 83       	std	Y+7, r24	; 0x07
    111a:	29 85       	ldd	r18, Y+9	; 0x09
    111c:	22 23       	and	r18, r18
    111e:	21 f0       	breq	.+8      	; 0x1128 <_ZN7Sd2Card8readDataEmjjPh+0x112>
    1120:	f2 e0       	ldi	r31, 0x02	; 2
    1122:	80 30       	cpi	r24, 0x00	; 0
    1124:	9f 07       	cpc	r25, r31
    1126:	48 f0       	brcs	.+18     	; 0x113a <_ZN7Sd2Card8readDataEmjjPh+0x124>
    1128:	ce 01       	movw	r24, r28
    112a:	0e 94 6d 06 	call	0xcda	; 0xcda <_ZN7Sd2Card7readEndEv>
    112e:	05 c0       	rjmp	.+10     	; 0x113a <_ZN7Sd2Card8readDataEmjjPh+0x124>
    1130:	ce 01       	movw	r24, r28
    1132:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
    1136:	80 e0       	ldi	r24, 0x00	; 0
    1138:	01 c0       	rjmp	.+2      	; 0x113c <_ZN7Sd2Card8readDataEmjjPh+0x126>
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	1f 91       	pop	r17
    1142:	0f 91       	pop	r16
    1144:	ff 90       	pop	r15
    1146:	ef 90       	pop	r14
    1148:	df 90       	pop	r13
    114a:	cf 90       	pop	r12
    114c:	bf 90       	pop	r11
    114e:	af 90       	pop	r10
    1150:	9f 90       	pop	r9
    1152:	8f 90       	pop	r8
    1154:	08 95       	ret

00001156 <_ZN7Sd2Card9readBlockEmPh>:
    1156:	ef 92       	push	r14
    1158:	ff 92       	push	r15
    115a:	0f 93       	push	r16
    115c:	1f 93       	push	r17
    115e:	79 01       	movw	r14, r18
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	00 e0       	ldi	r16, 0x00	; 0
    1166:	12 e0       	ldi	r17, 0x02	; 2
    1168:	0e 94 0b 08 	call	0x1016	; 0x1016 <_ZN7Sd2Card8readDataEmjjPh>
    116c:	1f 91       	pop	r17
    116e:	0f 91       	pop	r16
    1170:	ff 90       	pop	r15
    1172:	ef 90       	pop	r14
    1174:	08 95       	ret

00001176 <_ZN7Sd2Card9writeDataEhPKh>:
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	ec 01       	movw	r28, r24
    117c:	6e bd       	out	0x2e, r22	; 46
    117e:	fa 01       	movw	r30, r20
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	0d b4       	in	r0, 0x2d	; 45
    1186:	07 fe       	sbrs	r0, 7
    1188:	fd cf       	rjmp	.-6      	; 0x1184 <_ZN7Sd2Card9writeDataEhPKh+0xe>
    118a:	20 81       	ld	r18, Z
    118c:	2e bd       	out	0x2e, r18	; 46
    118e:	0d b4       	in	r0, 0x2d	; 45
    1190:	07 fe       	sbrs	r0, 7
    1192:	fd cf       	rjmp	.-6      	; 0x118e <_ZN7Sd2Card9writeDataEhPKh+0x18>
    1194:	21 81       	ldd	r18, Z+1	; 0x01
    1196:	2e bd       	out	0x2e, r18	; 46
    1198:	02 96       	adiw	r24, 0x02	; 2
    119a:	32 96       	adiw	r30, 0x02	; 2
    119c:	22 e0       	ldi	r18, 0x02	; 2
    119e:	80 30       	cpi	r24, 0x00	; 0
    11a0:	92 07       	cpc	r25, r18
    11a2:	81 f7       	brne	.-32     	; 0x1184 <_ZN7Sd2Card9writeDataEhPKh+0xe>
    11a4:	0d b4       	in	r0, 0x2d	; 45
    11a6:	07 fe       	sbrs	r0, 7
    11a8:	fd cf       	rjmp	.-6      	; 0x11a4 <_ZN7Sd2Card9writeDataEhPKh+0x2e>
    11aa:	8f ef       	ldi	r24, 0xFF	; 255
    11ac:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
    11b0:	8f ef       	ldi	r24, 0xFF	; 255
    11b2:	0e 94 57 06 	call	0xcae	; 0xcae <_ZL7spiSendh>
    11b6:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
    11ba:	8a 87       	std	Y+10, r24	; 0x0a
    11bc:	8f 71       	andi	r24, 0x1F	; 31
    11be:	85 30       	cpi	r24, 0x05	; 5
    11c0:	39 f0       	breq	.+14     	; 0x11d0 <_ZN7Sd2Card9writeDataEhPKh+0x5a>
    11c2:	81 e1       	ldi	r24, 0x11	; 17
    11c4:	8d 83       	std	Y+5, r24	; 0x05
    11c6:	ce 01       	movw	r24, r28
    11c8:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
    11cc:	80 e0       	ldi	r24, 0x00	; 0
    11ce:	01 c0       	rjmp	.+2      	; 0x11d2 <_ZN7Sd2Card9writeDataEhPKh+0x5c>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	df 91       	pop	r29
    11d4:	cf 91       	pop	r28
    11d6:	08 95       	ret

000011d8 <_ZN7Sd2Card10writeBlockEmPKh>:
    11d8:	cf 92       	push	r12
    11da:	df 92       	push	r13
    11dc:	ef 92       	push	r14
    11de:	ff 92       	push	r15
    11e0:	0f 93       	push	r16
    11e2:	1f 93       	push	r17
    11e4:	cf 93       	push	r28
    11e6:	df 93       	push	r29
    11e8:	ec 01       	movw	r28, r24
    11ea:	6a 01       	movw	r12, r20
    11ec:	7b 01       	movw	r14, r22
    11ee:	89 01       	movw	r16, r18
    11f0:	41 15       	cp	r20, r1
    11f2:	51 05       	cpc	r21, r1
    11f4:	61 05       	cpc	r22, r1
    11f6:	71 05       	cpc	r23, r1
    11f8:	11 f4       	brne	.+4      	; 0x11fe <_ZN7Sd2Card10writeBlockEmPKh+0x26>
    11fa:	82 e1       	ldi	r24, 0x12	; 18
    11fc:	32 c0       	rjmp	.+100    	; 0x1262 <_ZN7Sd2Card10writeBlockEmPKh+0x8a>
    11fe:	8b 85       	ldd	r24, Y+11	; 0x0b
    1200:	83 30       	cpi	r24, 0x03	; 3
    1202:	39 f0       	breq	.+14     	; 0x1212 <_ZN7Sd2Card10writeBlockEmPKh+0x3a>
    1204:	e9 e0       	ldi	r30, 0x09	; 9
    1206:	cc 0c       	add	r12, r12
    1208:	dd 1c       	adc	r13, r13
    120a:	ee 1c       	adc	r14, r14
    120c:	ff 1c       	adc	r15, r15
    120e:	ea 95       	dec	r30
    1210:	d1 f7       	brne	.-12     	; 0x1206 <_ZN7Sd2Card10writeBlockEmPKh+0x2e>
    1212:	ce 01       	movw	r24, r28
    1214:	68 e1       	ldi	r22, 0x18	; 24
    1216:	a7 01       	movw	r20, r14
    1218:	96 01       	movw	r18, r12
    121a:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
    121e:	88 23       	and	r24, r24
    1220:	11 f0       	breq	.+4      	; 0x1226 <_ZN7Sd2Card10writeBlockEmPKh+0x4e>
    1222:	84 e0       	ldi	r24, 0x04	; 4
    1224:	1e c0       	rjmp	.+60     	; 0x1262 <_ZN7Sd2Card10writeBlockEmPKh+0x8a>
    1226:	ce 01       	movw	r24, r28
    1228:	6e ef       	ldi	r22, 0xFE	; 254
    122a:	a8 01       	movw	r20, r16
    122c:	0e 94 bb 08 	call	0x1176	; 0x1176 <_ZN7Sd2Card9writeDataEhPKh>
    1230:	88 23       	and	r24, r24
    1232:	c1 f0       	breq	.+48     	; 0x1264 <_ZN7Sd2Card10writeBlockEmPKh+0x8c>
    1234:	ce 01       	movw	r24, r28
    1236:	68 e5       	ldi	r22, 0x58	; 88
    1238:	72 e0       	ldi	r23, 0x02	; 2
    123a:	0e 94 b2 06 	call	0xd64	; 0xd64 <_ZN7Sd2Card11waitNotBusyEj>
    123e:	88 23       	and	r24, r24
    1240:	11 f4       	brne	.+4      	; 0x1246 <_ZN7Sd2Card10writeBlockEmPKh+0x6e>
    1242:	85 e1       	ldi	r24, 0x15	; 21
    1244:	0e c0       	rjmp	.+28     	; 0x1262 <_ZN7Sd2Card10writeBlockEmPKh+0x8a>
    1246:	ce 01       	movw	r24, r28
    1248:	6d e0       	ldi	r22, 0x0D	; 13
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	a9 01       	movw	r20, r18
    1250:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7Sd2Card11cardCommandEhm>
    1254:	88 23       	and	r24, r24
    1256:	21 f4       	brne	.+8      	; 0x1260 <_ZN7Sd2Card10writeBlockEmPKh+0x88>
    1258:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZL6spiRecv>
    125c:	88 23       	and	r24, r24
    125e:	79 f0       	breq	.+30     	; 0x127e <_ZN7Sd2Card10writeBlockEmPKh+0xa6>
    1260:	84 e1       	ldi	r24, 0x14	; 20
    1262:	8d 83       	std	Y+5, r24	; 0x05
    1264:	ce 01       	movw	r24, r28
    1266:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
    126a:	80 e0       	ldi	r24, 0x00	; 0
    126c:	df 91       	pop	r29
    126e:	cf 91       	pop	r28
    1270:	1f 91       	pop	r17
    1272:	0f 91       	pop	r16
    1274:	ff 90       	pop	r15
    1276:	ef 90       	pop	r14
    1278:	df 90       	pop	r13
    127a:	cf 90       	pop	r12
    127c:	08 95       	ret
    127e:	ce 01       	movw	r24, r28
    1280:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN7Sd2Card14chipSelectHighEv>
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	f2 cf       	rjmp	.-28     	; 0x126c <_ZN7Sd2Card10writeBlockEmPKh+0x94>

00001288 <_ZN6SdFile10addClusterEv>:
    1288:	cf 93       	push	r28
    128a:	df 93       	push	r29
    128c:	ec 01       	movw	r28, r24
    128e:	9c 01       	movw	r18, r24
    1290:	2a 5f       	subi	r18, 0xFA	; 250
    1292:	3f 4f       	sbci	r19, 0xFF	; 255
    1294:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1296:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1298:	41 e0       	ldi	r20, 0x01	; 1
    129a:	50 e0       	ldi	r21, 0x00	; 0
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	70 e0       	ldi	r23, 0x00	; 0
    12a0:	0e 94 25 13 	call	0x264a	; 0x264a <_ZN8SdVolume15allocContiguousEmPm>
    12a4:	88 23       	and	r24, r24
    12a6:	a1 f0       	breq	.+40     	; 0x12d0 <_ZN6SdFile10addClusterEv+0x48>
    12a8:	8f 89       	ldd	r24, Y+23	; 0x17
    12aa:	98 8d       	ldd	r25, Y+24	; 0x18
    12ac:	a9 8d       	ldd	r26, Y+25	; 0x19
    12ae:	ba 8d       	ldd	r27, Y+26	; 0x1a
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	a1 05       	cpc	r26, r1
    12b4:	b1 05       	cpc	r27, r1
    12b6:	71 f4       	brne	.+28     	; 0x12d4 <_ZN6SdFile10addClusterEv+0x4c>
    12b8:	8e 81       	ldd	r24, Y+6	; 0x06
    12ba:	9f 81       	ldd	r25, Y+7	; 0x07
    12bc:	a8 85       	ldd	r26, Y+8	; 0x08
    12be:	b9 85       	ldd	r27, Y+9	; 0x09
    12c0:	8f 8b       	std	Y+23, r24	; 0x17
    12c2:	98 8f       	std	Y+24, r25	; 0x18
    12c4:	a9 8f       	std	Y+25, r26	; 0x19
    12c6:	ba 8f       	std	Y+26, r27	; 0x1a
    12c8:	8c 81       	ldd	r24, Y+4	; 0x04
    12ca:	80 68       	ori	r24, 0x80	; 128
    12cc:	8c 83       	std	Y+4, r24	; 0x04
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <_ZN6SdFile10addClusterEv+0x4c>
    12d0:	80 e0       	ldi	r24, 0x00	; 0
    12d2:	01 c0       	rjmp	.+2      	; 0x12d6 <_ZN6SdFile10addClusterEv+0x4e>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	df 91       	pop	r29
    12d8:	cf 91       	pop	r28
    12da:	08 95       	ret

000012dc <_ZN6SdFile13addDirClusterEv>:
    12dc:	cf 92       	push	r12
    12de:	df 92       	push	r13
    12e0:	ef 92       	push	r14
    12e2:	ff 92       	push	r15
    12e4:	1f 93       	push	r17
    12e6:	cf 93       	push	r28
    12e8:	df 93       	push	r29
    12ea:	ec 01       	movw	r28, r24
    12ec:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN6SdFile10addClusterEv>
    12f0:	88 23       	and	r24, r24
    12f2:	09 f4       	brne	.+2      	; 0x12f6 <_ZN6SdFile13addDirClusterEv+0x1a>
    12f4:	4e c0       	rjmp	.+156    	; 0x1392 <_ZN6SdFile13addDirClusterEv+0xb6>
    12f6:	eb 8d       	ldd	r30, Y+27	; 0x1b
    12f8:	fc 8d       	ldd	r31, Y+28	; 0x1c
  //----------------------------------------------------------------------------
  uint8_t allocContiguous(uint32_t count, uint32_t* curCluster);
  uint8_t blockOfCluster(uint32_t position) const {
          return (position >> 9) & (blocksPerCluster_ - 1);}
  uint32_t clusterStartBlock(uint32_t cluster) const {
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
    12fa:	ce 80       	ldd	r12, Y+6	; 0x06
    12fc:	df 80       	ldd	r13, Y+7	; 0x07
    12fe:	e8 84       	ldd	r14, Y+8	; 0x08
    1300:	f9 84       	ldd	r15, Y+9	; 0x09
    1302:	8e ef       	ldi	r24, 0xFE	; 254
    1304:	9f ef       	ldi	r25, 0xFF	; 255
    1306:	af ef       	ldi	r26, 0xFF	; 255
    1308:	bf ef       	ldi	r27, 0xFF	; 255
    130a:	c8 0e       	add	r12, r24
    130c:	d9 1e       	adc	r13, r25
    130e:	ea 1e       	adc	r14, r26
    1310:	fb 1e       	adc	r15, r27
    1312:	05 84       	ldd	r0, Z+13	; 0x0d
    1314:	04 c0       	rjmp	.+8      	; 0x131e <_ZN6SdFile13addDirClusterEv+0x42>
    1316:	cc 0c       	add	r12, r12
    1318:	dd 1c       	adc	r13, r13
    131a:	ee 1c       	adc	r14, r14
    131c:	ff 1c       	adc	r15, r15
    131e:	0a 94       	dec	r0
    1320:	d2 f7       	brpl	.-12     	; 0x1316 <_ZN6SdFile13addDirClusterEv+0x3a>
    1322:	86 85       	ldd	r24, Z+14	; 0x0e
    1324:	97 85       	ldd	r25, Z+15	; 0x0f
    1326:	a0 89       	ldd	r26, Z+16	; 0x10
    1328:	b1 89       	ldd	r27, Z+17	; 0x11
    132a:	c8 0e       	add	r12, r24
    132c:	d9 1e       	adc	r13, r25
    132e:	ea 1e       	adc	r14, r26
    1330:	fb 1e       	adc	r15, r27
    1332:	14 81       	ldd	r17, Z+4	; 0x04
    1334:	08 94       	sec
    1336:	c1 08       	sbc	r12, r1
    1338:	d1 08       	sbc	r13, r1
    133a:	e1 08       	sbc	r14, r1
    133c:	f1 08       	sbc	r15, r1
    133e:	0b c0       	rjmp	.+22     	; 0x1356 <_ZN6SdFile13addDirClusterEv+0x7a>
    1340:	c7 01       	movw	r24, r14
    1342:	b6 01       	movw	r22, r12
    1344:	61 0f       	add	r22, r17
    1346:	71 1d       	adc	r23, r1
    1348:	81 1d       	adc	r24, r1
    134a:	91 1d       	adc	r25, r1
    134c:	0e 94 61 11 	call	0x22c2	; 0x22c2 <_ZN8SdVolume14cacheZeroBlockEm>
    1350:	88 23       	and	r24, r24
    1352:	f9 f0       	breq	.+62     	; 0x1392 <_ZN6SdFile13addDirClusterEv+0xb6>
    1354:	11 50       	subi	r17, 0x01	; 1
    1356:	11 23       	and	r17, r17
    1358:	99 f7       	brne	.-26     	; 0x1340 <_ZN6SdFile13addDirClusterEv+0x64>
    135a:	eb 8d       	ldd	r30, Y+27	; 0x1b
    135c:	fc 8d       	ldd	r31, Y+28	; 0x1c
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	92 e0       	ldi	r25, 0x02	; 2
    1362:	a0 e0       	ldi	r26, 0x00	; 0
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	05 84       	ldd	r0, Z+13	; 0x0d
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <_ZN6SdFile13addDirClusterEv+0x96>
    136a:	88 0f       	add	r24, r24
    136c:	99 1f       	adc	r25, r25
    136e:	aa 1f       	adc	r26, r26
    1370:	bb 1f       	adc	r27, r27
    1372:	0a 94       	dec	r0
    1374:	d2 f7       	brpl	.-12     	; 0x136a <_ZN6SdFile13addDirClusterEv+0x8e>
    1376:	4b 89       	ldd	r20, Y+19	; 0x13
    1378:	5c 89       	ldd	r21, Y+20	; 0x14
    137a:	6d 89       	ldd	r22, Y+21	; 0x15
    137c:	7e 89       	ldd	r23, Y+22	; 0x16
    137e:	48 0f       	add	r20, r24
    1380:	59 1f       	adc	r21, r25
    1382:	6a 1f       	adc	r22, r26
    1384:	7b 1f       	adc	r23, r27
    1386:	4b 8b       	std	Y+19, r20	; 0x13
    1388:	5c 8b       	std	Y+20, r21	; 0x14
    138a:	6d 8b       	std	Y+21, r22	; 0x15
    138c:	7e 8b       	std	Y+22, r23	; 0x16
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <_ZN6SdFile13addDirClusterEv+0xb8>
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	df 91       	pop	r29
    1396:	cf 91       	pop	r28
    1398:	1f 91       	pop	r17
    139a:	ff 90       	pop	r15
    139c:	ef 90       	pop	r14
    139e:	df 90       	pop	r13
    13a0:	cf 90       	pop	r12
    13a2:	08 95       	ret

000013a4 <_ZN6SdFile13cacheDirEntryEh>:
    13a4:	cf 93       	push	r28
    13a6:	df 93       	push	r29
    13a8:	ec 01       	movw	r28, r24
    13aa:	46 2f       	mov	r20, r22
    13ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    13ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    13b0:	a8 89       	ldd	r26, Y+16	; 0x10
    13b2:	b9 89       	ldd	r27, Y+17	; 0x11
    13b4:	bc 01       	movw	r22, r24
    13b6:	cd 01       	movw	r24, r26
    13b8:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    13bc:	88 23       	and	r24, r24
    13be:	51 f0       	breq	.+20     	; 0x13d4 <_ZN6SdFile13cacheDirEntryEh+0x30>
    13c0:	8a 89       	ldd	r24, Y+18	; 0x12
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	25 e0       	ldi	r18, 0x05	; 5
    13c6:	88 0f       	add	r24, r24
    13c8:	99 1f       	adc	r25, r25
    13ca:	2a 95       	dec	r18
    13cc:	e1 f7       	brne	.-8      	; 0x13c6 <_ZN6SdFile13cacheDirEntryEh+0x22>
    13ce:	8b 59       	subi	r24, 0x9B	; 155
    13d0:	9b 4f       	sbci	r25, 0xFB	; 251
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <_ZN6SdFile13cacheDirEntryEh+0x34>
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	df 91       	pop	r29
    13da:	cf 91       	pop	r28
    13dc:	08 95       	ret

000013de <_ZN6SdFile10make83NameEPKcPh>:
    13de:	dc 01       	movw	r26, r24
    13e0:	fb 01       	movw	r30, r22
    13e2:	8b e0       	ldi	r24, 0x0B	; 11
    13e4:	90 e2       	ldi	r25, 0x20	; 32
    13e6:	91 93       	st	Z+, r25
    13e8:	81 50       	subi	r24, 0x01	; 1
    13ea:	e9 f7       	brne	.-6      	; 0x13e6 <_ZN6SdFile10make83NameEPKcPh+0x8>
    13ec:	30 e0       	ldi	r19, 0x00	; 0
    13ee:	47 e0       	ldi	r20, 0x07	; 7
    13f0:	21 c0       	rjmp	.+66     	; 0x1434 <_ZN6SdFile10make83NameEPKcPh+0x56>
    13f2:	2e 32       	cpi	r18, 0x2E	; 46
    13f4:	41 f4       	brne	.+16     	; 0x1406 <_ZN6SdFile10make83NameEPKcPh+0x28>
    13f6:	4a 30       	cpi	r20, 0x0A	; 10
    13f8:	29 f1       	breq	.+74     	; 0x1444 <_ZN6SdFile10make83NameEPKcPh+0x66>
    13fa:	38 e0       	ldi	r19, 0x08	; 8
    13fc:	4a e0       	ldi	r20, 0x0A	; 10
    13fe:	1a c0       	rjmp	.+52     	; 0x1434 <_ZN6SdFile10make83NameEPKcPh+0x56>
    1400:	e2 17       	cp	r30, r18
    1402:	19 f4       	brne	.+6      	; 0x140a <_ZN6SdFile10make83NameEPKcPh+0x2c>
    1404:	1f c0       	rjmp	.+62     	; 0x1444 <_ZN6SdFile10make83NameEPKcPh+0x66>
    1406:	88 e6       	ldi	r24, 0x68	; 104
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	fc 01       	movw	r30, r24
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	e4 91       	lpm	r30, Z
    1410:	ee 23       	and	r30, r30
    1412:	b1 f7       	brne	.-20     	; 0x1400 <_ZN6SdFile10make83NameEPKcPh+0x22>
    1414:	43 17       	cp	r20, r19
    1416:	b0 f0       	brcs	.+44     	; 0x1444 <_ZN6SdFile10make83NameEPKcPh+0x66>
    1418:	21 32       	cpi	r18, 0x21	; 33
    141a:	a0 f0       	brcs	.+40     	; 0x1444 <_ZN6SdFile10make83NameEPKcPh+0x66>
    141c:	2f 37       	cpi	r18, 0x7F	; 127
    141e:	a0 f4       	brcc	.+40     	; 0x1448 <_ZN6SdFile10make83NameEPKcPh+0x6a>
    1420:	fb 01       	movw	r30, r22
    1422:	e3 0f       	add	r30, r19
    1424:	f1 1d       	adc	r31, r1
    1426:	82 2f       	mov	r24, r18
    1428:	81 56       	subi	r24, 0x61	; 97
    142a:	8a 31       	cpi	r24, 0x1A	; 26
    142c:	08 f4       	brcc	.+2      	; 0x1430 <_ZN6SdFile10make83NameEPKcPh+0x52>
    142e:	20 52       	subi	r18, 0x20	; 32
    1430:	20 83       	st	Z, r18
    1432:	3f 5f       	subi	r19, 0xFF	; 255
    1434:	2d 91       	ld	r18, X+
    1436:	22 23       	and	r18, r18
    1438:	e1 f6       	brne	.-72     	; 0x13f2 <_ZN6SdFile10make83NameEPKcPh+0x14>
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	fb 01       	movw	r30, r22
    143e:	90 81       	ld	r25, Z
    1440:	90 32       	cpi	r25, 0x20	; 32
    1442:	19 f4       	brne	.+6      	; 0x144a <_ZN6SdFile10make83NameEPKcPh+0x6c>
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	08 95       	ret
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	08 95       	ret

0000144c <_ZN6SdFile8openRootEP8SdVolume>:
    144c:	0f 93       	push	r16
    144e:	1f 93       	push	r17
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	ec 01       	movw	r28, r24
    1456:	8b 01       	movw	r16, r22
    1458:	8d 81       	ldd	r24, Y+5	; 0x05
    145a:	88 23       	and	r24, r24
    145c:	09 f0       	breq	.+2      	; 0x1460 <_ZN6SdFile8openRootEP8SdVolume+0x14>
    145e:	41 c0       	rjmp	.+130    	; 0x14e2 <_ZN6SdFile8openRootEP8SdVolume+0x96>
    1460:	fb 01       	movw	r30, r22
    1462:	87 89       	ldd	r24, Z+23	; 0x17
    1464:	80 31       	cpi	r24, 0x10	; 16
    1466:	b1 f4       	brne	.+44     	; 0x1494 <_ZN6SdFile8openRootEP8SdVolume+0x48>
    1468:	82 e0       	ldi	r24, 0x02	; 2
    146a:	8d 83       	std	Y+5, r24	; 0x05
    146c:	1f 8a       	std	Y+23, r1	; 0x17
    146e:	18 8e       	std	Y+24, r1	; 0x18
    1470:	19 8e       	std	Y+25, r1	; 0x19
    1472:	1a 8e       	std	Y+26, r1	; 0x1a
  /** \return The logical block number for the start of the first FAT. */
  uint32_t fatStartBlock(void) const {return fatStartBlock_;}
  /** \return The FAT type of the volume. Values are 12, 16 or 32. */
  uint8_t fatType(void) const {return fatType_;}
  /** \return The number of entries in the root directory for FAT16 volumes. */
  uint32_t rootDirEntryCount(void) const {return rootDirEntryCount_;}
    1474:	80 8d       	ldd	r24, Z+24	; 0x18
    1476:	91 8d       	ldd	r25, Z+25	; 0x19
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	35 e0       	ldi	r19, 0x05	; 5
    147e:	88 0f       	add	r24, r24
    1480:	99 1f       	adc	r25, r25
    1482:	aa 1f       	adc	r26, r26
    1484:	bb 1f       	adc	r27, r27
    1486:	3a 95       	dec	r19
    1488:	d1 f7       	brne	.-12     	; 0x147e <_ZN6SdFile8openRootEP8SdVolume+0x32>
    148a:	8b 8b       	std	Y+19, r24	; 0x13
    148c:	9c 8b       	std	Y+20, r25	; 0x14
    148e:	ad 8b       	std	Y+21, r26	; 0x15
    1490:	be 8b       	std	Y+22, r27	; 0x16
    1492:	15 c0       	rjmp	.+42     	; 0x14be <_ZN6SdFile8openRootEP8SdVolume+0x72>
    1494:	80 32       	cpi	r24, 0x20	; 32
    1496:	29 f5       	brne	.+74     	; 0x14e2 <_ZN6SdFile8openRootEP8SdVolume+0x96>
    1498:	83 e0       	ldi	r24, 0x03	; 3
    149a:	8d 83       	std	Y+5, r24	; 0x05
  /** \return The logical block number for the start of the root directory
       on FAT16 volumes or the first cluster number on FAT32 volumes. */
  uint32_t rootDirStart(void) const {return rootDirStart_;}
    149c:	fb 01       	movw	r30, r22
    149e:	42 8d       	ldd	r20, Z+26	; 0x1a
    14a0:	53 8d       	ldd	r21, Z+27	; 0x1b
    14a2:	64 8d       	ldd	r22, Z+28	; 0x1c
    14a4:	75 8d       	ldd	r23, Z+29	; 0x1d
    14a6:	4f 8b       	std	Y+23, r20	; 0x17
    14a8:	58 8f       	std	Y+24, r21	; 0x18
    14aa:	69 8f       	std	Y+25, r22	; 0x19
    14ac:	7a 8f       	std	Y+26, r23	; 0x1a
    14ae:	9e 01       	movw	r18, r28
    14b0:	2d 5e       	subi	r18, 0xED	; 237
    14b2:	3f 4f       	sbci	r19, 0xFF	; 255
    14b4:	c8 01       	movw	r24, r16
    14b6:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZNK8SdVolume9chainSizeEmPm>
    14ba:	88 23       	and	r24, r24
    14bc:	91 f0       	breq	.+36     	; 0x14e2 <_ZN6SdFile8openRootEP8SdVolume+0x96>
    14be:	1c 8f       	std	Y+28, r17	; 0x1c
    14c0:	0b 8f       	std	Y+27, r16	; 0x1b
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	8c 83       	std	Y+4, r24	; 0x04
    14c6:	1e 82       	std	Y+6, r1	; 0x06
    14c8:	1f 82       	std	Y+7, r1	; 0x07
    14ca:	18 86       	std	Y+8, r1	; 0x08
    14cc:	19 86       	std	Y+9, r1	; 0x09
    14ce:	1a 86       	std	Y+10, r1	; 0x0a
    14d0:	1b 86       	std	Y+11, r1	; 0x0b
    14d2:	1c 86       	std	Y+12, r1	; 0x0c
    14d4:	1d 86       	std	Y+13, r1	; 0x0d
    14d6:	1e 86       	std	Y+14, r1	; 0x0e
    14d8:	1f 86       	std	Y+15, r1	; 0x0f
    14da:	18 8a       	std	Y+16, r1	; 0x10
    14dc:	19 8a       	std	Y+17, r1	; 0x11
    14de:	1a 8a       	std	Y+18, r1	; 0x12
    14e0:	01 c0       	rjmp	.+2      	; 0x14e4 <_ZN6SdFile8openRootEP8SdVolume+0x98>
    14e2:	80 e0       	ldi	r24, 0x00	; 0
    14e4:	df 91       	pop	r29
    14e6:	cf 91       	pop	r28
    14e8:	1f 91       	pop	r17
    14ea:	0f 91       	pop	r16
    14ec:	08 95       	ret

000014ee <_ZN6SdFile4readEPvj>:
    14ee:	2f 92       	push	r2
    14f0:	3f 92       	push	r3
    14f2:	4f 92       	push	r4
    14f4:	5f 92       	push	r5
    14f6:	6f 92       	push	r6
    14f8:	7f 92       	push	r7
    14fa:	8f 92       	push	r8
    14fc:	9f 92       	push	r9
    14fe:	af 92       	push	r10
    1500:	bf 92       	push	r11
    1502:	cf 92       	push	r12
    1504:	df 92       	push	r13
    1506:	ef 92       	push	r14
    1508:	ff 92       	push	r15
    150a:	0f 93       	push	r16
    150c:	1f 93       	push	r17
    150e:	cf 93       	push	r28
    1510:	df 93       	push	r29
    1512:	00 d0       	rcall	.+0      	; 0x1514 <_ZN6SdFile4readEPvj+0x26>
    1514:	00 d0       	rcall	.+0      	; 0x1516 <_ZN6SdFile4readEPvj+0x28>
    1516:	00 d0       	rcall	.+0      	; 0x1518 <_ZN6SdFile4readEPvj+0x2a>
    1518:	cd b7       	in	r28, 0x3d	; 61
    151a:	de b7       	in	r29, 0x3e	; 62
    151c:	9c 83       	std	Y+4, r25	; 0x04
    151e:	8b 83       	std	Y+3, r24	; 0x03
    1520:	86 2e       	mov	r8, r22
    1522:	27 2e       	mov	r2, r23
    1524:	2a 01       	movw	r4, r20
    1526:	dc 01       	movw	r26, r24
    1528:	15 96       	adiw	r26, 0x05	; 5
    152a:	8c 91       	ld	r24, X
    152c:	15 97       	sbiw	r26, 0x05	; 5
    152e:	88 23       	and	r24, r24
    1530:	09 f4       	brne	.+2      	; 0x1534 <_ZN6SdFile4readEPvj+0x46>
    1532:	e5 c0       	rjmp	.+458    	; 0x16fe <_ZN6SdFile4readEPvj+0x210>
    1534:	14 96       	adiw	r26, 0x04	; 4
    1536:	8c 91       	ld	r24, X
    1538:	14 97       	sbiw	r26, 0x04	; 4
    153a:	80 ff       	sbrs	r24, 0
    153c:	e0 c0       	rjmp	.+448    	; 0x16fe <_ZN6SdFile4readEPvj+0x210>
    153e:	fa c0       	rjmp	.+500    	; 0x1734 <_ZN6SdFile4readEPvj+0x246>
    1540:	2a 01       	movw	r4, r20
    1542:	48 1a       	sub	r4, r24
    1544:	59 0a       	sbc	r5, r25
    1546:	32 01       	movw	r6, r4
    1548:	a8 2c       	mov	r10, r8
    154a:	b2 2c       	mov	r11, r2
    154c:	eb 81       	ldd	r30, Y+3	; 0x03
    154e:	fc 81       	ldd	r31, Y+4	; 0x04
    1550:	36 96       	adiw	r30, 0x06	; 6
    1552:	fa 83       	std	Y+2, r31	; 0x02
    1554:	e9 83       	std	Y+1, r30	; 0x01
    1556:	21 2c       	mov	r2, r1
    1558:	02 e0       	ldi	r16, 0x02	; 2
    155a:	30 2e       	mov	r3, r16
    155c:	ca c0       	rjmp	.+404    	; 0x16f2 <_ZN6SdFile4readEPvj+0x204>
    155e:	eb 81       	ldd	r30, Y+3	; 0x03
    1560:	fc 81       	ldd	r31, Y+4	; 0x04
    1562:	82 85       	ldd	r24, Z+10	; 0x0a
    1564:	93 85       	ldd	r25, Z+11	; 0x0b
    1566:	a4 85       	ldd	r26, Z+12	; 0x0c
    1568:	b5 85       	ldd	r27, Z+13	; 0x0d
    156a:	7f ef       	ldi	r23, 0xFF	; 255
    156c:	87 2e       	mov	r8, r23
    156e:	71 e0       	ldi	r23, 0x01	; 1
    1570:	97 2e       	mov	r9, r23
    1572:	88 22       	and	r8, r24
    1574:	99 22       	and	r9, r25
    1576:	25 81       	ldd	r18, Z+5	; 0x05
    1578:	6c 01       	movw	r12, r24
    157a:	7d 01       	movw	r14, r26
    157c:	19 e0       	ldi	r17, 0x09	; 9
    157e:	f6 94       	lsr	r15
    1580:	e7 94       	ror	r14
    1582:	d7 94       	ror	r13
    1584:	c7 94       	ror	r12
    1586:	1a 95       	dec	r17
    1588:	d1 f7       	brne	.-12     	; 0x157e <_ZN6SdFile4readEPvj+0x90>
    158a:	43 8d       	ldd	r20, Z+27	; 0x1b
    158c:	54 8d       	ldd	r21, Z+28	; 0x1c
    158e:	5e 83       	std	Y+6, r21	; 0x06
    1590:	4d 83       	std	Y+5, r20	; 0x05
    1592:	22 30       	cpi	r18, 0x02	; 2
    1594:	61 f4       	brne	.+24     	; 0x15ae <_ZN6SdFile4readEPvj+0xc0>
    1596:	da 01       	movw	r26, r20
    1598:	5a 96       	adiw	r26, 0x1a	; 26
    159a:	4d 91       	ld	r20, X+
    159c:	5d 91       	ld	r21, X+
    159e:	6d 91       	ld	r22, X+
    15a0:	7c 91       	ld	r23, X
    15a2:	5d 97       	sbiw	r26, 0x1d	; 29
    15a4:	4c 0d       	add	r20, r12
    15a6:	5d 1d       	adc	r21, r13
    15a8:	6e 1d       	adc	r22, r14
    15aa:	7f 1d       	adc	r23, r15
    15ac:	4e c0       	rjmp	.+156    	; 0x164a <_ZN6SdFile4readEPvj+0x15c>
  uint16_t rootDirEntryCount_;  // number of entries in FAT16 root dir
  uint32_t rootDirStart_;       // root start block for FAT16, cluster for FAT32
  //----------------------------------------------------------------------------
  uint8_t allocContiguous(uint32_t count, uint32_t* curCluster);
  uint8_t blockOfCluster(uint32_t position) const {
          return (position >> 9) & (blocksPerCluster_ - 1);}
    15ae:	ed 81       	ldd	r30, Y+5	; 0x05
    15b0:	fe 81       	ldd	r31, Y+6	; 0x06
    15b2:	04 81       	ldd	r16, Z+4	; 0x04
    15b4:	01 50       	subi	r16, 0x01	; 1
    15b6:	0c 21       	and	r16, r12
    15b8:	81 14       	cp	r8, r1
    15ba:	91 04       	cpc	r9, r1
    15bc:	11 f5       	brne	.+68     	; 0x1602 <_ZN6SdFile4readEPvj+0x114>
    15be:	00 23       	and	r16, r16
    15c0:	01 f5       	brne	.+64     	; 0x1602 <_ZN6SdFile4readEPvj+0x114>
    15c2:	00 97       	sbiw	r24, 0x00	; 0
    15c4:	a1 05       	cpc	r26, r1
    15c6:	b1 05       	cpc	r27, r1
    15c8:	59 f4       	brne	.+22     	; 0x15e0 <_ZN6SdFile4readEPvj+0xf2>
    15ca:	eb 81       	ldd	r30, Y+3	; 0x03
    15cc:	fc 81       	ldd	r31, Y+4	; 0x04
    15ce:	87 89       	ldd	r24, Z+23	; 0x17
    15d0:	90 8d       	ldd	r25, Z+24	; 0x18
    15d2:	a1 8d       	ldd	r26, Z+25	; 0x19
    15d4:	b2 8d       	ldd	r27, Z+26	; 0x1a
    15d6:	86 83       	std	Z+6, r24	; 0x06
    15d8:	97 83       	std	Z+7, r25	; 0x07
    15da:	a0 87       	std	Z+8, r26	; 0x08
    15dc:	b1 87       	std	Z+9, r27	; 0x09
    15de:	11 c0       	rjmp	.+34     	; 0x1602 <_ZN6SdFile4readEPvj+0x114>
    15e0:	ab 81       	ldd	r26, Y+3	; 0x03
    15e2:	bc 81       	ldd	r27, Y+4	; 0x04
    15e4:	16 96       	adiw	r26, 0x06	; 6
    15e6:	4d 91       	ld	r20, X+
    15e8:	5d 91       	ld	r21, X+
    15ea:	6d 91       	ld	r22, X+
    15ec:	7c 91       	ld	r23, X
    15ee:	19 97       	sbiw	r26, 0x09	; 9
    15f0:	8d 81       	ldd	r24, Y+5	; 0x05
    15f2:	9e 81       	ldd	r25, Y+6	; 0x06
    15f4:	29 81       	ldd	r18, Y+1	; 0x01
    15f6:	3a 81       	ldd	r19, Y+2	; 0x02
    15f8:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    15fc:	88 23       	and	r24, r24
    15fe:	09 f4       	brne	.+2      	; 0x1602 <_ZN6SdFile4readEPvj+0x114>
    1600:	7e c0       	rjmp	.+252    	; 0x16fe <_ZN6SdFile4readEPvj+0x210>
    1602:	ab 81       	ldd	r26, Y+3	; 0x03
    1604:	bc 81       	ldd	r27, Y+4	; 0x04
    1606:	5b 96       	adiw	r26, 0x1b	; 27
    1608:	ed 91       	ld	r30, X+
    160a:	fc 91       	ld	r31, X
    160c:	5c 97       	sbiw	r26, 0x1c	; 28
  uint32_t clusterStartBlock(uint32_t cluster) const {
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
    160e:	16 96       	adiw	r26, 0x06	; 6
    1610:	4d 91       	ld	r20, X+
    1612:	5d 91       	ld	r21, X+
    1614:	6d 91       	ld	r22, X+
    1616:	7c 91       	ld	r23, X
    1618:	19 97       	sbiw	r26, 0x09	; 9
    161a:	42 50       	subi	r20, 0x02	; 2
    161c:	50 40       	sbci	r21, 0x00	; 0
    161e:	60 40       	sbci	r22, 0x00	; 0
    1620:	70 40       	sbci	r23, 0x00	; 0
    1622:	05 84       	ldd	r0, Z+13	; 0x0d
    1624:	04 c0       	rjmp	.+8      	; 0x162e <_ZN6SdFile4readEPvj+0x140>
    1626:	44 0f       	add	r20, r20
    1628:	55 1f       	adc	r21, r21
    162a:	66 1f       	adc	r22, r22
    162c:	77 1f       	adc	r23, r23
    162e:	0a 94       	dec	r0
    1630:	d2 f7       	brpl	.-12     	; 0x1626 <_ZN6SdFile4readEPvj+0x138>
    1632:	86 85       	ldd	r24, Z+14	; 0x0e
    1634:	97 85       	ldd	r25, Z+15	; 0x0f
    1636:	a0 89       	ldd	r26, Z+16	; 0x10
    1638:	b1 89       	ldd	r27, Z+17	; 0x11
    163a:	48 0f       	add	r20, r24
    163c:	59 1f       	adc	r21, r25
    163e:	6a 1f       	adc	r22, r26
    1640:	7b 1f       	adc	r23, r27
    1642:	40 0f       	add	r20, r16
    1644:	51 1d       	adc	r21, r1
    1646:	61 1d       	adc	r22, r1
    1648:	71 1d       	adc	r23, r1
    164a:	c1 01       	movw	r24, r2
    164c:	88 19       	sub	r24, r8
    164e:	99 09       	sbc	r25, r9
    1650:	63 01       	movw	r12, r6
    1652:	86 15       	cp	r24, r6
    1654:	97 05       	cpc	r25, r7
    1656:	08 f4       	brcc	.+2      	; 0x165a <_ZN6SdFile4readEPvj+0x16c>
    1658:	6c 01       	movw	r12, r24
   */
  uint8_t type(void) const {return type_;}
  uint8_t truncate(uint32_t size);
  /** \return Unbuffered read flag. */
  uint8_t unbufferedRead(void) const {
    return flags_ & F_FILE_UNBUFFERED_READ;
    165a:	eb 81       	ldd	r30, Y+3	; 0x03
    165c:	fc 81       	ldd	r31, Y+4	; 0x04
    165e:	84 81       	ldd	r24, Z+4	; 0x04
    1660:	86 fd       	sbrc	r24, 6
    1662:	06 c0       	rjmp	.+12     	; 0x1670 <_ZN6SdFile4readEPvj+0x182>
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	cf 16       	cp	r12, r31
    1668:	f2 e0       	ldi	r31, 0x02	; 2
    166a:	df 06       	cpc	r13, r31
    166c:	09 f0       	breq	.+2      	; 0x1670 <_ZN6SdFile4readEPvj+0x182>
    166e:	80 c0       	rjmp	.+256    	; 0x1770 <_ZN6SdFile4readEPvj+0x282>
    1670:	80 91 cb 01 	lds	r24, 0x01CB
    1674:	90 91 cc 01 	lds	r25, 0x01CC
    1678:	a0 91 cd 01 	lds	r26, 0x01CD
    167c:	b0 91 ce 01 	lds	r27, 0x01CE
    1680:	48 17       	cp	r20, r24
    1682:	59 07       	cpc	r21, r25
    1684:	6a 07       	cpc	r22, r26
    1686:	7b 07       	cpc	r23, r27
    1688:	09 f4       	brne	.+2      	; 0x168c <_ZN6SdFile4readEPvj+0x19e>
    168a:	72 c0       	rjmp	.+228    	; 0x1770 <_ZN6SdFile4readEPvj+0x282>
  }
  uint8_t readBlock(uint32_t block, uint8_t* dst) {
    return sdCard_->readBlock(block, dst);}
  uint8_t readData(uint32_t block, uint16_t offset,
    uint16_t count, uint8_t* dst) {
      return sdCard_->readData(block, offset, count, dst);
    168c:	80 91 63 04 	lds	r24, 0x0463
    1690:	90 91 64 04 	lds	r25, 0x0464
    1694:	94 01       	movw	r18, r8
    1696:	86 01       	movw	r16, r12
    1698:	75 01       	movw	r14, r10
    169a:	0e 94 0b 08 	call	0x1016	; 0x1016 <_ZN7Sd2Card8readDataEmjjPh>
    169e:	88 23       	and	r24, r24
    16a0:	71 f1       	breq	.+92     	; 0x16fe <_ZN6SdFile4readEPvj+0x210>
    16a2:	ac 0c       	add	r10, r12
    16a4:	bd 1c       	adc	r11, r13
    16a6:	12 c0       	rjmp	.+36     	; 0x16cc <_ZN6SdFile4readEPvj+0x1de>
    16a8:	94 01       	movw	r18, r8
    16aa:	2b 59       	subi	r18, 0x9B	; 155
    16ac:	3b 4f       	sbci	r19, 0xFB	; 251
    16ae:	c9 01       	movw	r24, r18
    16b0:	8c 0d       	add	r24, r12
    16b2:	9d 1d       	adc	r25, r13
    16b4:	f9 01       	movw	r30, r18
    16b6:	d5 01       	movw	r26, r10
    16b8:	02 c0       	rjmp	.+4      	; 0x16be <_ZN6SdFile4readEPvj+0x1d0>
    16ba:	41 91       	ld	r20, Z+
    16bc:	4d 93       	st	X+, r20
    16be:	e8 17       	cp	r30, r24
    16c0:	f9 07       	cpc	r31, r25
    16c2:	d9 f7       	brne	.-10     	; 0x16ba <_ZN6SdFile4readEPvj+0x1cc>
    16c4:	e2 1b       	sub	r30, r18
    16c6:	f3 0b       	sbc	r31, r19
    16c8:	ae 0e       	add	r10, r30
    16ca:	bf 1e       	adc	r11, r31
    16cc:	a6 01       	movw	r20, r12
    16ce:	60 e0       	ldi	r22, 0x00	; 0
    16d0:	70 e0       	ldi	r23, 0x00	; 0
    16d2:	eb 81       	ldd	r30, Y+3	; 0x03
    16d4:	fc 81       	ldd	r31, Y+4	; 0x04
    16d6:	82 85       	ldd	r24, Z+10	; 0x0a
    16d8:	93 85       	ldd	r25, Z+11	; 0x0b
    16da:	a4 85       	ldd	r26, Z+12	; 0x0c
    16dc:	b5 85       	ldd	r27, Z+13	; 0x0d
    16de:	84 0f       	add	r24, r20
    16e0:	95 1f       	adc	r25, r21
    16e2:	a6 1f       	adc	r26, r22
    16e4:	b7 1f       	adc	r27, r23
    16e6:	82 87       	std	Z+10, r24	; 0x0a
    16e8:	93 87       	std	Z+11, r25	; 0x0b
    16ea:	a4 87       	std	Z+12, r26	; 0x0c
    16ec:	b5 87       	std	Z+13, r27	; 0x0d
    16ee:	6c 18       	sub	r6, r12
    16f0:	7d 08       	sbc	r7, r13
    16f2:	61 14       	cp	r6, r1
    16f4:	71 04       	cpc	r7, r1
    16f6:	09 f0       	breq	.+2      	; 0x16fa <_ZN6SdFile4readEPvj+0x20c>
    16f8:	32 cf       	rjmp	.-412    	; 0x155e <_ZN6SdFile4readEPvj+0x70>
    16fa:	c2 01       	movw	r24, r4
    16fc:	02 c0       	rjmp	.+4      	; 0x1702 <_ZN6SdFile4readEPvj+0x214>
    16fe:	8f ef       	ldi	r24, 0xFF	; 255
    1700:	9f ef       	ldi	r25, 0xFF	; 255
    1702:	26 96       	adiw	r28, 0x06	; 6
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	f8 94       	cli
    1708:	de bf       	out	0x3e, r29	; 62
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	cd bf       	out	0x3d, r28	; 61
    170e:	df 91       	pop	r29
    1710:	cf 91       	pop	r28
    1712:	1f 91       	pop	r17
    1714:	0f 91       	pop	r16
    1716:	ff 90       	pop	r15
    1718:	ef 90       	pop	r14
    171a:	df 90       	pop	r13
    171c:	cf 90       	pop	r12
    171e:	bf 90       	pop	r11
    1720:	af 90       	pop	r10
    1722:	9f 90       	pop	r9
    1724:	8f 90       	pop	r8
    1726:	7f 90       	pop	r7
    1728:	6f 90       	pop	r6
    172a:	5f 90       	pop	r5
    172c:	4f 90       	pop	r4
    172e:	3f 90       	pop	r3
    1730:	2f 90       	pop	r2
    1732:	08 95       	ret
    1734:	ab 81       	ldd	r26, Y+3	; 0x03
    1736:	bc 81       	ldd	r27, Y+4	; 0x04
    1738:	53 96       	adiw	r26, 0x13	; 19
    173a:	4d 91       	ld	r20, X+
    173c:	5d 91       	ld	r21, X+
    173e:	6d 91       	ld	r22, X+
    1740:	7c 91       	ld	r23, X
    1742:	56 97       	sbiw	r26, 0x16	; 22
    1744:	1a 96       	adiw	r26, 0x0a	; 10
    1746:	8d 91       	ld	r24, X+
    1748:	9d 91       	ld	r25, X+
    174a:	0d 90       	ld	r0, X+
    174c:	bc 91       	ld	r27, X
    174e:	a0 2d       	mov	r26, r0
    1750:	82 01       	movw	r16, r4
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	6a 01       	movw	r12, r20
    1758:	7b 01       	movw	r14, r22
    175a:	c8 1a       	sub	r12, r24
    175c:	d9 0a       	sbc	r13, r25
    175e:	ea 0a       	sbc	r14, r26
    1760:	fb 0a       	sbc	r15, r27
    1762:	c0 16       	cp	r12, r16
    1764:	d1 06       	cpc	r13, r17
    1766:	e2 06       	cpc	r14, r18
    1768:	f3 06       	cpc	r15, r19
    176a:	08 f4       	brcc	.+2      	; 0x176e <_ZN6SdFile4readEPvj+0x280>
    176c:	e9 ce       	rjmp	.-558    	; 0x1540 <_ZN6SdFile4readEPvj+0x52>
    176e:	eb ce       	rjmp	.-554    	; 0x1546 <_ZN6SdFile4readEPvj+0x58>
    1770:	cb 01       	movw	r24, r22
    1772:	ba 01       	movw	r22, r20
    1774:	40 e0       	ldi	r20, 0x00	; 0
    1776:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    177a:	88 23       	and	r24, r24
    177c:	09 f0       	breq	.+2      	; 0x1780 <_ZN6SdFile4readEPvj+0x292>
    177e:	94 cf       	rjmp	.-216    	; 0x16a8 <_ZN6SdFile4readEPvj+0x1ba>
    1780:	be cf       	rjmp	.-132    	; 0x16fe <_ZN6SdFile4readEPvj+0x210>

00001782 <_ZN6SdFile12readDirCacheEv>:
    1782:	cf 92       	push	r12
    1784:	df 92       	push	r13
    1786:	ef 92       	push	r14
    1788:	ff 92       	push	r15
    178a:	0f 93       	push	r16
    178c:	1f 93       	push	r17
    178e:	cf 93       	push	r28
    1790:	df 93       	push	r29
    1792:	0f 92       	push	r0
    1794:	cd b7       	in	r28, 0x3d	; 61
    1796:	de b7       	in	r29, 0x3e	; 62
    1798:	8c 01       	movw	r16, r24
    179a:	fc 01       	movw	r30, r24
    179c:	85 81       	ldd	r24, Z+5	; 0x05
    179e:	82 30       	cpi	r24, 0x02	; 2
    17a0:	78 f0       	brcs	.+30     	; 0x17c0 <_ZN6SdFile12readDirCacheEv+0x3e>
    17a2:	c2 84       	ldd	r12, Z+10	; 0x0a
    17a4:	d3 84       	ldd	r13, Z+11	; 0x0b
    17a6:	e4 84       	ldd	r14, Z+12	; 0x0c
    17a8:	f5 84       	ldd	r15, Z+13	; 0x0d
   * \return For success read returns the next byte in the file as an int.
   * If an error occurs or end of file is reached -1 is returned.
   */
  int16_t read(void) {
    uint8_t b;
    return read(&b, 1) == 1 ? b : -1;
    17aa:	c8 01       	movw	r24, r16
    17ac:	be 01       	movw	r22, r28
    17ae:	6f 5f       	subi	r22, 0xFF	; 255
    17b0:	7f 4f       	sbci	r23, 0xFF	; 255
    17b2:	41 e0       	ldi	r20, 0x01	; 1
    17b4:	50 e0       	ldi	r21, 0x00	; 0
    17b6:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN6SdFile4readEPvj>
    17ba:	81 30       	cpi	r24, 0x01	; 1
    17bc:	91 05       	cpc	r25, r1
    17be:	61 f0       	breq	.+24     	; 0x17d8 <_ZN6SdFile12readDirCacheEv+0x56>
    17c0:	80 e0       	ldi	r24, 0x00	; 0
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	0f 90       	pop	r0
    17c6:	df 91       	pop	r29
    17c8:	cf 91       	pop	r28
    17ca:	1f 91       	pop	r17
    17cc:	0f 91       	pop	r16
    17ce:	ff 90       	pop	r15
    17d0:	ef 90       	pop	r14
    17d2:	df 90       	pop	r13
    17d4:	cf 90       	pop	r12
    17d6:	08 95       	ret
    17d8:	f8 01       	movw	r30, r16
    17da:	82 85       	ldd	r24, Z+10	; 0x0a
    17dc:	93 85       	ldd	r25, Z+11	; 0x0b
    17de:	a4 85       	ldd	r26, Z+12	; 0x0c
    17e0:	b5 85       	ldd	r27, Z+13	; 0x0d
    17e2:	4f 96       	adiw	r24, 0x1f	; 31
    17e4:	a1 1d       	adc	r26, r1
    17e6:	b1 1d       	adc	r27, r1
    17e8:	82 87       	std	Z+10, r24	; 0x0a
    17ea:	93 87       	std	Z+11, r25	; 0x0b
    17ec:	a4 87       	std	Z+12, r26	; 0x0c
    17ee:	b5 87       	std	Z+13, r27	; 0x0d
    17f0:	d7 01       	movw	r26, r14
    17f2:	c6 01       	movw	r24, r12
    17f4:	25 e0       	ldi	r18, 0x05	; 5
    17f6:	b6 95       	lsr	r27
    17f8:	a7 95       	ror	r26
    17fa:	97 95       	ror	r25
    17fc:	87 95       	ror	r24
    17fe:	2a 95       	dec	r18
    1800:	d1 f7       	brne	.-12     	; 0x17f6 <_ZN6SdFile12readDirCacheEv+0x74>
    1802:	8f 70       	andi	r24, 0x0F	; 15
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	35 e0       	ldi	r19, 0x05	; 5
    1808:	88 0f       	add	r24, r24
    180a:	99 1f       	adc	r25, r25
    180c:	3a 95       	dec	r19
    180e:	e1 f7       	brne	.-8      	; 0x1808 <_ZN6SdFile12readDirCacheEv+0x86>
    1810:	8b 59       	subi	r24, 0x9B	; 155
    1812:	9b 4f       	sbci	r25, 0xFB	; 251
    1814:	d7 cf       	rjmp	.-82     	; 0x17c4 <_ZN6SdFile12readDirCacheEv+0x42>

00001816 <_ZN6SdFile7seekSetEm>:
    1816:	8f 92       	push	r8
    1818:	9f 92       	push	r9
    181a:	af 92       	push	r10
    181c:	bf 92       	push	r11
    181e:	cf 92       	push	r12
    1820:	df 92       	push	r13
    1822:	ef 92       	push	r14
    1824:	ff 92       	push	r15
    1826:	0f 93       	push	r16
    1828:	1f 93       	push	r17
    182a:	cf 93       	push	r28
    182c:	df 93       	push	r29
    182e:	ec 01       	movw	r28, r24
    1830:	4a 01       	movw	r8, r20
    1832:	5b 01       	movw	r10, r22
    1834:	2d 81       	ldd	r18, Y+5	; 0x05
    1836:	22 23       	and	r18, r18
    1838:	09 f4       	brne	.+2      	; 0x183c <_ZN6SdFile7seekSetEm+0x26>
    183a:	75 c0       	rjmp	.+234    	; 0x1926 <_ZN6SdFile7seekSetEm+0x110>
    183c:	8b 89       	ldd	r24, Y+19	; 0x13
    183e:	9c 89       	ldd	r25, Y+20	; 0x14
    1840:	ad 89       	ldd	r26, Y+21	; 0x15
    1842:	be 89       	ldd	r27, Y+22	; 0x16
    1844:	84 17       	cp	r24, r20
    1846:	95 07       	cpc	r25, r21
    1848:	a6 07       	cpc	r26, r22
    184a:	b7 07       	cpc	r27, r23
    184c:	08 f4       	brcc	.+2      	; 0x1850 <_ZN6SdFile7seekSetEm+0x3a>
    184e:	6b c0       	rjmp	.+214    	; 0x1926 <_ZN6SdFile7seekSetEm+0x110>
    1850:	78 c0       	rjmp	.+240    	; 0x1942 <_ZN6SdFile7seekSetEm+0x12c>
    1852:	81 14       	cp	r8, r1
    1854:	91 04       	cpc	r9, r1
    1856:	a1 04       	cpc	r10, r1
    1858:	b1 04       	cpc	r11, r1
    185a:	49 f4       	brne	.+18     	; 0x186e <_ZN6SdFile7seekSetEm+0x58>
    185c:	1e 82       	std	Y+6, r1	; 0x06
    185e:	1f 82       	std	Y+7, r1	; 0x07
    1860:	18 86       	std	Y+8, r1	; 0x08
    1862:	19 86       	std	Y+9, r1	; 0x09
    1864:	1a 86       	std	Y+10, r1	; 0x0a
    1866:	1b 86       	std	Y+11, r1	; 0x0b
    1868:	1c 86       	std	Y+12, r1	; 0x0c
    186a:	1d 86       	std	Y+13, r1	; 0x0d
    186c:	5a c0       	rjmp	.+180    	; 0x1922 <_ZN6SdFile7seekSetEm+0x10c>
    186e:	4a 85       	ldd	r20, Y+10	; 0x0a
    1870:	5b 85       	ldd	r21, Y+11	; 0x0b
    1872:	6c 85       	ldd	r22, Y+12	; 0x0c
    1874:	7d 85       	ldd	r23, Y+13	; 0x0d
    1876:	eb 8d       	ldd	r30, Y+27	; 0x1b
    1878:	fc 8d       	ldd	r31, Y+28	; 0x1c
    187a:	25 85       	ldd	r18, Z+13	; 0x0d
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	27 5f       	subi	r18, 0xF7	; 247
    1880:	3f 4f       	sbci	r19, 0xFF	; 255
    1882:	db 01       	movw	r26, r22
    1884:	ca 01       	movw	r24, r20
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	a1 09       	sbc	r26, r1
    188a:	b1 09       	sbc	r27, r1
    188c:	02 2e       	mov	r0, r18
    188e:	04 c0       	rjmp	.+8      	; 0x1898 <_ZN6SdFile7seekSetEm+0x82>
    1890:	b6 95       	lsr	r27
    1892:	a7 95       	ror	r26
    1894:	97 95       	ror	r25
    1896:	87 95       	ror	r24
    1898:	0a 94       	dec	r0
    189a:	d2 f7       	brpl	.-12     	; 0x1890 <_ZN6SdFile7seekSetEm+0x7a>
    189c:	75 01       	movw	r14, r10
    189e:	64 01       	movw	r12, r8
    18a0:	08 94       	sec
    18a2:	c1 08       	sbc	r12, r1
    18a4:	d1 08       	sbc	r13, r1
    18a6:	e1 08       	sbc	r14, r1
    18a8:	f1 08       	sbc	r15, r1
    18aa:	04 c0       	rjmp	.+8      	; 0x18b4 <_ZN6SdFile7seekSetEm+0x9e>
    18ac:	f6 94       	lsr	r15
    18ae:	e7 94       	ror	r14
    18b0:	d7 94       	ror	r13
    18b2:	c7 94       	ror	r12
    18b4:	2a 95       	dec	r18
    18b6:	d2 f7       	brpl	.-12     	; 0x18ac <_ZN6SdFile7seekSetEm+0x96>
    18b8:	c8 16       	cp	r12, r24
    18ba:	d9 06       	cpc	r13, r25
    18bc:	ea 06       	cpc	r14, r26
    18be:	fb 06       	cpc	r15, r27
    18c0:	28 f0       	brcs	.+10     	; 0x18cc <_ZN6SdFile7seekSetEm+0xb6>
    18c2:	41 15       	cp	r20, r1
    18c4:	51 05       	cpc	r21, r1
    18c6:	61 05       	cpc	r22, r1
    18c8:	71 05       	cpc	r23, r1
    18ca:	49 f4       	brne	.+18     	; 0x18de <_ZN6SdFile7seekSetEm+0xc8>
    18cc:	8f 89       	ldd	r24, Y+23	; 0x17
    18ce:	98 8d       	ldd	r25, Y+24	; 0x18
    18d0:	a9 8d       	ldd	r26, Y+25	; 0x19
    18d2:	ba 8d       	ldd	r27, Y+26	; 0x1a
    18d4:	8e 83       	std	Y+6, r24	; 0x06
    18d6:	9f 83       	std	Y+7, r25	; 0x07
    18d8:	a8 87       	std	Y+8, r26	; 0x08
    18da:	b9 87       	std	Y+9, r27	; 0x09
    18dc:	16 c0       	rjmp	.+44     	; 0x190a <_ZN6SdFile7seekSetEm+0xf4>
    18de:	c8 1a       	sub	r12, r24
    18e0:	d9 0a       	sbc	r13, r25
    18e2:	ea 0a       	sbc	r14, r26
    18e4:	fb 0a       	sbc	r15, r27
    18e6:	11 c0       	rjmp	.+34     	; 0x190a <_ZN6SdFile7seekSetEm+0xf4>
    18e8:	4e 81       	ldd	r20, Y+6	; 0x06
    18ea:	5f 81       	ldd	r21, Y+7	; 0x07
    18ec:	68 85       	ldd	r22, Y+8	; 0x08
    18ee:	79 85       	ldd	r23, Y+9	; 0x09
    18f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18f4:	98 01       	movw	r18, r16
    18f6:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    18fa:	08 94       	sec
    18fc:	c1 08       	sbc	r12, r1
    18fe:	d1 08       	sbc	r13, r1
    1900:	e1 08       	sbc	r14, r1
    1902:	f1 08       	sbc	r15, r1
    1904:	88 23       	and	r24, r24
    1906:	21 f4       	brne	.+8      	; 0x1910 <_ZN6SdFile7seekSetEm+0xfa>
    1908:	0e c0       	rjmp	.+28     	; 0x1926 <_ZN6SdFile7seekSetEm+0x110>
    190a:	8e 01       	movw	r16, r28
    190c:	0a 5f       	subi	r16, 0xFA	; 250
    190e:	1f 4f       	sbci	r17, 0xFF	; 255
    1910:	c1 14       	cp	r12, r1
    1912:	d1 04       	cpc	r13, r1
    1914:	e1 04       	cpc	r14, r1
    1916:	f1 04       	cpc	r15, r1
    1918:	39 f7       	brne	.-50     	; 0x18e8 <_ZN6SdFile7seekSetEm+0xd2>
    191a:	8a 86       	std	Y+10, r8	; 0x0a
    191c:	9b 86       	std	Y+11, r9	; 0x0b
    191e:	ac 86       	std	Y+12, r10	; 0x0c
    1920:	bd 86       	std	Y+13, r11	; 0x0d
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	01 c0       	rjmp	.+2      	; 0x1928 <_ZN6SdFile7seekSetEm+0x112>
    1926:	80 e0       	ldi	r24, 0x00	; 0
    1928:	df 91       	pop	r29
    192a:	cf 91       	pop	r28
    192c:	1f 91       	pop	r17
    192e:	0f 91       	pop	r16
    1930:	ff 90       	pop	r15
    1932:	ef 90       	pop	r14
    1934:	df 90       	pop	r13
    1936:	cf 90       	pop	r12
    1938:	bf 90       	pop	r11
    193a:	af 90       	pop	r10
    193c:	9f 90       	pop	r9
    193e:	8f 90       	pop	r8
    1940:	08 95       	ret
    1942:	22 30       	cpi	r18, 0x02	; 2
    1944:	09 f0       	breq	.+2      	; 0x1948 <_ZN6SdFile7seekSetEm+0x132>
    1946:	85 cf       	rjmp	.-246    	; 0x1852 <_ZN6SdFile7seekSetEm+0x3c>
    1948:	e8 cf       	rjmp	.-48     	; 0x191a <_ZN6SdFile7seekSetEm+0x104>

0000194a <_ZN6SdFile4syncEv>:
    194a:	0f 93       	push	r16
    194c:	1f 93       	push	r17
    194e:	cf 93       	push	r28
    1950:	df 93       	push	r29
    1952:	8c 01       	movw	r16, r24
    1954:	fc 01       	movw	r30, r24
    1956:	85 81       	ldd	r24, Z+5	; 0x05
    1958:	88 23       	and	r24, r24
    195a:	b1 f1       	breq	.+108    	; 0x19c8 <_ZN6SdFile4syncEv+0x7e>
    195c:	84 81       	ldd	r24, Z+4	; 0x04
    195e:	87 ff       	sbrs	r24, 7
    1960:	30 c0       	rjmp	.+96     	; 0x19c2 <_ZN6SdFile4syncEv+0x78>
    1962:	c8 01       	movw	r24, r16
    1964:	61 e0       	ldi	r22, 0x01	; 1
    1966:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <_ZN6SdFile13cacheDirEntryEh>
    196a:	ec 01       	movw	r28, r24
    196c:	00 97       	sbiw	r24, 0x00	; 0
    196e:	61 f1       	breq	.+88     	; 0x19c8 <_ZN6SdFile4syncEv+0x7e>
    1970:	f8 01       	movw	r30, r16
    1972:	85 81       	ldd	r24, Z+5	; 0x05
    1974:	82 30       	cpi	r24, 0x02	; 2
    1976:	40 f4       	brcc	.+16     	; 0x1988 <_ZN6SdFile4syncEv+0x3e>
    1978:	83 89       	ldd	r24, Z+19	; 0x13
    197a:	94 89       	ldd	r25, Z+20	; 0x14
    197c:	a5 89       	ldd	r26, Z+21	; 0x15
    197e:	b6 89       	ldd	r27, Z+22	; 0x16
    1980:	8c 8f       	std	Y+28, r24	; 0x1c
    1982:	9d 8f       	std	Y+29, r25	; 0x1d
    1984:	ae 8f       	std	Y+30, r26	; 0x1e
    1986:	bf 8f       	std	Y+31, r27	; 0x1f
    1988:	f8 01       	movw	r30, r16
    198a:	87 89       	ldd	r24, Z+23	; 0x17
    198c:	90 8d       	ldd	r25, Z+24	; 0x18
    198e:	a1 8d       	ldd	r26, Z+25	; 0x19
    1990:	b2 8d       	ldd	r27, Z+26	; 0x1a
    1992:	9b 8f       	std	Y+27, r25	; 0x1b
    1994:	8a 8f       	std	Y+26, r24	; 0x1a
    1996:	bd 8b       	std	Y+21, r27	; 0x15
    1998:	ac 8b       	std	Y+20, r26	; 0x14
    199a:	e0 91 5c 04 	lds	r30, 0x045C
    199e:	f0 91 5d 04 	lds	r31, 0x045D
    19a2:	30 97       	sbiw	r30, 0x00	; 0
    19a4:	51 f0       	breq	.+20     	; 0x19ba <_ZN6SdFile4syncEv+0x70>
    19a6:	be 01       	movw	r22, r28
    19a8:	6a 5e       	subi	r22, 0xEA	; 234
    19aa:	7f 4f       	sbci	r23, 0xFF	; 255
    19ac:	ce 01       	movw	r24, r28
    19ae:	48 96       	adiw	r24, 0x18	; 24
    19b0:	09 95       	icall
    19b2:	88 8d       	ldd	r24, Y+24	; 0x18
    19b4:	99 8d       	ldd	r25, Y+25	; 0x19
    19b6:	9b 8b       	std	Y+19, r25	; 0x13
    19b8:	8a 8b       	std	Y+18, r24	; 0x12
    19ba:	f8 01       	movw	r30, r16
    19bc:	84 81       	ldd	r24, Z+4	; 0x04
    19be:	8f 77       	andi	r24, 0x7F	; 127
    19c0:	84 83       	std	Z+4, r24	; 0x04
    19c2:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <_ZN8SdVolume10cacheFlushEv>
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <_ZN6SdFile4syncEv+0x80>
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	df 91       	pop	r29
    19cc:	cf 91       	pop	r28
    19ce:	1f 91       	pop	r17
    19d0:	0f 91       	pop	r16
    19d2:	08 95       	ret

000019d4 <_ZN6SdFile5closeEv>:
    19d4:	cf 93       	push	r28
    19d6:	df 93       	push	r29
    19d8:	ec 01       	movw	r28, r24
    19da:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN6SdFile4syncEv>
    19de:	88 23       	and	r24, r24
    19e0:	19 f0       	breq	.+6      	; 0x19e8 <_ZN6SdFile5closeEv+0x14>
    19e2:	1d 82       	std	Y+5, r1	; 0x05
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	01 c0       	rjmp	.+2      	; 0x19ea <_ZN6SdFile5closeEv+0x16>
    19e8:	80 e0       	ldi	r24, 0x00	; 0
    19ea:	df 91       	pop	r29
    19ec:	cf 91       	pop	r28
    19ee:	08 95       	ret

000019f0 <_ZN6SdFile8truncateEm>:
    19f0:	4f 92       	push	r4
    19f2:	5f 92       	push	r5
    19f4:	6f 92       	push	r6
    19f6:	7f 92       	push	r7
    19f8:	8f 92       	push	r8
    19fa:	9f 92       	push	r9
    19fc:	af 92       	push	r10
    19fe:	bf 92       	push	r11
    1a00:	ef 92       	push	r14
    1a02:	ff 92       	push	r15
    1a04:	0f 93       	push	r16
    1a06:	1f 93       	push	r17
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	00 d0       	rcall	.+0      	; 0x1a0e <_ZN6SdFile8truncateEm+0x1e>
    1a0e:	00 d0       	rcall	.+0      	; 0x1a10 <_ZN6SdFile8truncateEm+0x20>
    1a10:	cd b7       	in	r28, 0x3d	; 61
    1a12:	de b7       	in	r29, 0x3e	; 62
    1a14:	7c 01       	movw	r14, r24
    1a16:	4a 01       	movw	r8, r20
    1a18:	5b 01       	movw	r10, r22
    1a1a:	dc 01       	movw	r26, r24
    1a1c:	15 96       	adiw	r26, 0x05	; 5
    1a1e:	8c 91       	ld	r24, X
    1a20:	15 97       	sbiw	r26, 0x05	; 5
    1a22:	81 30       	cpi	r24, 0x01	; 1
    1a24:	09 f0       	breq	.+2      	; 0x1a28 <_ZN6SdFile8truncateEm+0x38>
    1a26:	91 c0       	rjmp	.+290    	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1a28:	14 96       	adiw	r26, 0x04	; 4
    1a2a:	8c 91       	ld	r24, X
    1a2c:	14 97       	sbiw	r26, 0x04	; 4
    1a2e:	81 ff       	sbrs	r24, 1
    1a30:	8c c0       	rjmp	.+280    	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1a32:	9f c0       	rjmp	.+318    	; 0x1b72 <_ZN6SdFile8truncateEm+0x182>
    1a34:	00 97       	sbiw	r24, 0x00	; 0
    1a36:	a1 05       	cpc	r26, r1
    1a38:	b1 05       	cpc	r27, r1
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <_ZN6SdFile8truncateEm+0x4e>
    1a3c:	84 c0       	rjmp	.+264    	; 0x1b46 <_ZN6SdFile8truncateEm+0x156>
    1a3e:	f7 01       	movw	r30, r14
    1a40:	42 84       	ldd	r4, Z+10	; 0x0a
    1a42:	53 84       	ldd	r5, Z+11	; 0x0b
    1a44:	64 84       	ldd	r6, Z+12	; 0x0c
    1a46:	75 84       	ldd	r7, Z+13	; 0x0d
    1a48:	c7 01       	movw	r24, r14
    1a4a:	b5 01       	movw	r22, r10
    1a4c:	a4 01       	movw	r20, r8
    1a4e:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
    1a52:	88 23       	and	r24, r24
    1a54:	09 f4       	brne	.+2      	; 0x1a58 <_ZN6SdFile8truncateEm+0x68>
    1a56:	79 c0       	rjmp	.+242    	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1a58:	d7 01       	movw	r26, r14
    1a5a:	5b 96       	adiw	r26, 0x1b	; 27
    1a5c:	8d 91       	ld	r24, X+
    1a5e:	9c 91       	ld	r25, X
    1a60:	5c 97       	sbiw	r26, 0x1c	; 28
    1a62:	81 14       	cp	r8, r1
    1a64:	91 04       	cpc	r9, r1
    1a66:	a1 04       	cpc	r10, r1
    1a68:	b1 04       	cpc	r11, r1
    1a6a:	89 f4       	brne	.+34     	; 0x1a8e <_ZN6SdFile8truncateEm+0x9e>
    1a6c:	57 96       	adiw	r26, 0x17	; 23
    1a6e:	4d 91       	ld	r20, X+
    1a70:	5d 91       	ld	r21, X+
    1a72:	6d 91       	ld	r22, X+
    1a74:	7c 91       	ld	r23, X
    1a76:	5a 97       	sbiw	r26, 0x1a	; 26
    1a78:	0e 94 3a 14 	call	0x2874	; 0x2874 <_ZN8SdVolume9freeChainEm>
    1a7c:	88 23       	and	r24, r24
    1a7e:	09 f4       	brne	.+2      	; 0x1a82 <_ZN6SdFile8truncateEm+0x92>
    1a80:	64 c0       	rjmp	.+200    	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1a82:	f7 01       	movw	r30, r14
    1a84:	17 8a       	std	Z+23, r1	; 0x17
    1a86:	10 8e       	std	Z+24, r1	; 0x18
    1a88:	11 8e       	std	Z+25, r1	; 0x19
    1a8a:	12 8e       	std	Z+26, r1	; 0x1a
    1a8c:	3d c0       	rjmp	.+122    	; 0x1b08 <_ZN6SdFile8truncateEm+0x118>
    1a8e:	d7 01       	movw	r26, r14
    1a90:	16 96       	adiw	r26, 0x06	; 6
    1a92:	4d 91       	ld	r20, X+
    1a94:	5d 91       	ld	r21, X+
    1a96:	6d 91       	ld	r22, X+
    1a98:	7c 91       	ld	r23, X
    1a9a:	19 97       	sbiw	r26, 0x09	; 9
    1a9c:	9e 01       	movw	r18, r28
    1a9e:	2f 5f       	subi	r18, 0xFF	; 255
    1aa0:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa2:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    1aa6:	88 23       	and	r24, r24
    1aa8:	09 f4       	brne	.+2      	; 0x1aac <_ZN6SdFile8truncateEm+0xbc>
    1aaa:	4f c0       	rjmp	.+158    	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1aac:	d7 01       	movw	r26, r14
    1aae:	5b 96       	adiw	r26, 0x1b	; 27
    1ab0:	ed 91       	ld	r30, X+
    1ab2:	fc 91       	ld	r31, X
    1ab4:	5c 97       	sbiw	r26, 0x1c	; 28
    1ab6:	49 81       	ldd	r20, Y+1	; 0x01
    1ab8:	5a 81       	ldd	r21, Y+2	; 0x02
    1aba:	6b 81       	ldd	r22, Y+3	; 0x03
    1abc:	7c 81       	ldd	r23, Y+4	; 0x04
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
  }
  uint8_t freeChain(uint32_t cluster);
  uint8_t isEOC(uint32_t cluster) const {
    return  cluster >= (fatType_ == 16 ? FAT16EOC_MIN : FAT32EOC_MIN);
    1abe:	87 89       	ldd	r24, Z+23	; 0x17
    1ac0:	80 31       	cpi	r24, 0x10	; 16
    1ac2:	29 f4       	brne	.+10     	; 0x1ace <_ZN6SdFile8truncateEm+0xde>
    1ac4:	88 ef       	ldi	r24, 0xF8	; 248
    1ac6:	9f ef       	ldi	r25, 0xFF	; 255
    1ac8:	a0 e0       	ldi	r26, 0x00	; 0
    1aca:	b0 e0       	ldi	r27, 0x00	; 0
    1acc:	04 c0       	rjmp	.+8      	; 0x1ad6 <_ZN6SdFile8truncateEm+0xe6>
    1ace:	88 ef       	ldi	r24, 0xF8	; 248
    1ad0:	9f ef       	ldi	r25, 0xFF	; 255
    1ad2:	af ef       	ldi	r26, 0xFF	; 255
    1ad4:	bf e0       	ldi	r27, 0x0F	; 15
    1ad6:	48 17       	cp	r20, r24
    1ad8:	59 07       	cpc	r21, r25
    1ada:	6a 07       	cpc	r22, r26
    1adc:	7b 07       	cpc	r23, r27
    1ade:	a0 f4       	brcc	.+40     	; 0x1b08 <_ZN6SdFile8truncateEm+0x118>
    1ae0:	cf 01       	movw	r24, r30
    1ae2:	0e 94 3a 14 	call	0x2874	; 0x2874 <_ZN8SdVolume9freeChainEm>
    1ae6:	88 23       	and	r24, r24
    1ae8:	81 f1       	breq	.+96     	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
  static uint8_t cacheZeroBlock(uint32_t blockNumber);
  uint8_t chainSize(uint32_t beginCluster, uint32_t* size) const;
  uint8_t fatGet(uint32_t cluster, uint32_t* value) const;
  uint8_t fatPut(uint32_t cluster, uint32_t value);
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
    1aea:	f7 01       	movw	r30, r14
    1aec:	46 81       	ldd	r20, Z+6	; 0x06
    1aee:	57 81       	ldd	r21, Z+7	; 0x07
    1af0:	60 85       	ldd	r22, Z+8	; 0x08
    1af2:	71 85       	ldd	r23, Z+9	; 0x09
    1af4:	83 8d       	ldd	r24, Z+27	; 0x1b
    1af6:	94 8d       	ldd	r25, Z+28	; 0x1c
    1af8:	0f ef       	ldi	r16, 0xFF	; 255
    1afa:	1f ef       	ldi	r17, 0xFF	; 255
    1afc:	2f ef       	ldi	r18, 0xFF	; 255
    1afe:	3f e0       	ldi	r19, 0x0F	; 15
    1b00:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_ZN8SdVolume6fatPutEmm>
    1b04:	88 23       	and	r24, r24
    1b06:	09 f1       	breq	.+66     	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1b08:	d7 01       	movw	r26, r14
    1b0a:	53 96       	adiw	r26, 0x13	; 19
    1b0c:	8d 92       	st	X+, r8
    1b0e:	9d 92       	st	X+, r9
    1b10:	ad 92       	st	X+, r10
    1b12:	bc 92       	st	X, r11
    1b14:	56 97       	sbiw	r26, 0x16	; 22
    1b16:	14 96       	adiw	r26, 0x04	; 4
    1b18:	8c 91       	ld	r24, X
    1b1a:	14 97       	sbiw	r26, 0x04	; 4
    1b1c:	80 68       	ori	r24, 0x80	; 128
    1b1e:	14 96       	adiw	r26, 0x04	; 4
    1b20:	8c 93       	st	X, r24
    1b22:	c7 01       	movw	r24, r14
    1b24:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN6SdFile4syncEv>
    1b28:	88 23       	and	r24, r24
    1b2a:	79 f0       	breq	.+30     	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>
    1b2c:	b5 01       	movw	r22, r10
    1b2e:	a4 01       	movw	r20, r8
    1b30:	48 14       	cp	r4, r8
    1b32:	59 04       	cpc	r5, r9
    1b34:	6a 04       	cpc	r6, r10
    1b36:	7b 04       	cpc	r7, r11
    1b38:	10 f4       	brcc	.+4      	; 0x1b3e <_ZN6SdFile8truncateEm+0x14e>
    1b3a:	b3 01       	movw	r22, r6
    1b3c:	a2 01       	movw	r20, r4
    1b3e:	c7 01       	movw	r24, r14
    1b40:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
    1b44:	03 c0       	rjmp	.+6      	; 0x1b4c <_ZN6SdFile8truncateEm+0x15c>
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	01 c0       	rjmp	.+2      	; 0x1b4c <_ZN6SdFile8truncateEm+0x15c>
    1b4a:	80 e0       	ldi	r24, 0x00	; 0
    1b4c:	0f 90       	pop	r0
    1b4e:	0f 90       	pop	r0
    1b50:	0f 90       	pop	r0
    1b52:	0f 90       	pop	r0
    1b54:	df 91       	pop	r29
    1b56:	cf 91       	pop	r28
    1b58:	1f 91       	pop	r17
    1b5a:	0f 91       	pop	r16
    1b5c:	ff 90       	pop	r15
    1b5e:	ef 90       	pop	r14
    1b60:	bf 90       	pop	r11
    1b62:	af 90       	pop	r10
    1b64:	9f 90       	pop	r9
    1b66:	8f 90       	pop	r8
    1b68:	7f 90       	pop	r7
    1b6a:	6f 90       	pop	r6
    1b6c:	5f 90       	pop	r5
    1b6e:	4f 90       	pop	r4
    1b70:	08 95       	ret
    1b72:	f7 01       	movw	r30, r14
    1b74:	83 89       	ldd	r24, Z+19	; 0x13
    1b76:	94 89       	ldd	r25, Z+20	; 0x14
    1b78:	a5 89       	ldd	r26, Z+21	; 0x15
    1b7a:	b6 89       	ldd	r27, Z+22	; 0x16
    1b7c:	84 17       	cp	r24, r20
    1b7e:	95 07       	cpc	r25, r21
    1b80:	a6 07       	cpc	r26, r22
    1b82:	b7 07       	cpc	r27, r23
    1b84:	08 f0       	brcs	.+2      	; 0x1b88 <_ZN6SdFile8truncateEm+0x198>
    1b86:	56 cf       	rjmp	.-340    	; 0x1a34 <_ZN6SdFile8truncateEm+0x44>
    1b88:	e0 cf       	rjmp	.-64     	; 0x1b4a <_ZN6SdFile8truncateEm+0x15a>

00001b8a <_ZN6SdFile15openCachedEntryEhh>:
    1b8a:	1f 93       	push	r17
    1b8c:	cf 93       	push	r28
    1b8e:	df 93       	push	r29
    1b90:	ec 01       	movw	r28, r24
    1b92:	14 2f       	mov	r17, r20
    1b94:	e6 2f       	mov	r30, r22
    1b96:	f0 e0       	ldi	r31, 0x00	; 0
    1b98:	35 e0       	ldi	r19, 0x05	; 5
    1b9a:	ee 0f       	add	r30, r30
    1b9c:	ff 1f       	adc	r31, r31
    1b9e:	3a 95       	dec	r19
    1ba0:	e1 f7       	brne	.-8      	; 0x1b9a <_ZN6SdFile15openCachedEntryEhh+0x10>
    1ba2:	eb 59       	subi	r30, 0x9B	; 155
    1ba4:	fb 4f       	sbci	r31, 0xFB	; 251
    1ba6:	83 85       	ldd	r24, Z+11	; 0x0b
    1ba8:	81 71       	andi	r24, 0x11	; 17
    1baa:	21 f0       	breq	.+8      	; 0x1bb4 <_ZN6SdFile15openCachedEntryEhh+0x2a>
    1bac:	84 2f       	mov	r24, r20
    1bae:	82 74       	andi	r24, 0x42	; 66
    1bb0:	09 f0       	breq	.+2      	; 0x1bb4 <_ZN6SdFile15openCachedEntryEhh+0x2a>
    1bb2:	52 c0       	rjmp	.+164    	; 0x1c58 <_ZN6SdFile15openCachedEntryEhh+0xce>
    1bb4:	6a 8b       	std	Y+18, r22	; 0x12
    1bb6:	80 91 cb 01 	lds	r24, 0x01CB
    1bba:	90 91 cc 01 	lds	r25, 0x01CC
    1bbe:	a0 91 cd 01 	lds	r26, 0x01CD
    1bc2:	b0 91 ce 01 	lds	r27, 0x01CE
    1bc6:	8e 87       	std	Y+14, r24	; 0x0e
    1bc8:	9f 87       	std	Y+15, r25	; 0x0f
    1bca:	a8 8b       	std	Y+16, r26	; 0x10
    1bcc:	b9 8b       	std	Y+17, r27	; 0x11
    1bce:	44 89       	ldd	r20, Z+20	; 0x14
    1bd0:	55 89       	ldd	r21, Z+21	; 0x15
    1bd2:	60 e0       	ldi	r22, 0x00	; 0
    1bd4:	70 e0       	ldi	r23, 0x00	; 0
    1bd6:	ba 01       	movw	r22, r20
    1bd8:	55 27       	eor	r21, r21
    1bda:	44 27       	eor	r20, r20
    1bdc:	82 8d       	ldd	r24, Z+26	; 0x1a
    1bde:	93 8d       	ldd	r25, Z+27	; 0x1b
    1be0:	a0 e0       	ldi	r26, 0x00	; 0
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	48 2b       	or	r20, r24
    1be6:	59 2b       	or	r21, r25
    1be8:	6a 2b       	or	r22, r26
    1bea:	7b 2b       	or	r23, r27
    1bec:	4f 8b       	std	Y+23, r20	; 0x17
    1bee:	58 8f       	std	Y+24, r21	; 0x18
    1bf0:	69 8f       	std	Y+25, r22	; 0x19
    1bf2:	7a 8f       	std	Y+26, r23	; 0x1a
}
/** Mask for file/subdirectory tests */
uint8_t const DIR_ATT_FILE_TYPE_MASK = (DIR_ATT_VOLUME_ID | DIR_ATT_DIRECTORY);
/** Directory entry is for a file */
static inline uint8_t DIR_IS_FILE(const dir_t* dir) {
  return (dir->attributes & DIR_ATT_FILE_TYPE_MASK) == 0;
    1bf4:	83 85       	ldd	r24, Z+11	; 0x0b
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	88 71       	andi	r24, 0x18	; 24
    1bfa:	90 70       	andi	r25, 0x00	; 0
    1bfc:	00 97       	sbiw	r24, 0x00	; 0
    1bfe:	51 f4       	brne	.+20     	; 0x1c14 <_ZN6SdFile15openCachedEntryEhh+0x8a>
    1c00:	84 8d       	ldd	r24, Z+28	; 0x1c
    1c02:	95 8d       	ldd	r25, Z+29	; 0x1d
    1c04:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1c06:	b7 8d       	ldd	r27, Z+31	; 0x1f
    1c08:	8b 8b       	std	Y+19, r24	; 0x13
    1c0a:	9c 8b       	std	Y+20, r25	; 0x14
    1c0c:	ad 8b       	std	Y+21, r26	; 0x15
    1c0e:	be 8b       	std	Y+22, r27	; 0x16
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	0d c0       	rjmp	.+26     	; 0x1c2e <_ZN6SdFile15openCachedEntryEhh+0xa4>
    1c14:	80 31       	cpi	r24, 0x10	; 16
    1c16:	91 05       	cpc	r25, r1
    1c18:	f9 f4       	brne	.+62     	; 0x1c58 <_ZN6SdFile15openCachedEntryEhh+0xce>
    1c1a:	9e 01       	movw	r18, r28
    1c1c:	2d 5e       	subi	r18, 0xED	; 237
    1c1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c20:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c22:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c24:	0e 94 10 12 	call	0x2420	; 0x2420 <_ZNK8SdVolume9chainSizeEmPm>
    1c28:	88 23       	and	r24, r24
    1c2a:	b1 f0       	breq	.+44     	; 0x1c58 <_ZN6SdFile15openCachedEntryEhh+0xce>
    1c2c:	84 e0       	ldi	r24, 0x04	; 4
    1c2e:	8d 83       	std	Y+5, r24	; 0x05
    1c30:	81 2f       	mov	r24, r17
    1c32:	8f 70       	andi	r24, 0x0F	; 15
    1c34:	8c 83       	std	Y+4, r24	; 0x04
    1c36:	1e 82       	std	Y+6, r1	; 0x06
    1c38:	1f 82       	std	Y+7, r1	; 0x07
    1c3a:	18 86       	std	Y+8, r1	; 0x08
    1c3c:	19 86       	std	Y+9, r1	; 0x09
    1c3e:	1a 86       	std	Y+10, r1	; 0x0a
    1c40:	1b 86       	std	Y+11, r1	; 0x0b
    1c42:	1c 86       	std	Y+12, r1	; 0x0c
    1c44:	1d 86       	std	Y+13, r1	; 0x0d
    1c46:	16 ff       	sbrs	r17, 6
    1c48:	09 c0       	rjmp	.+18     	; 0x1c5c <_ZN6SdFile15openCachedEntryEhh+0xd2>
    1c4a:	ce 01       	movw	r24, r28
    1c4c:	40 e0       	ldi	r20, 0x00	; 0
    1c4e:	50 e0       	ldi	r21, 0x00	; 0
    1c50:	ba 01       	movw	r22, r20
    1c52:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <_ZN6SdFile8truncateEm>
    1c56:	03 c0       	rjmp	.+6      	; 0x1c5e <_ZN6SdFile15openCachedEntryEhh+0xd4>
    1c58:	80 e0       	ldi	r24, 0x00	; 0
    1c5a:	01 c0       	rjmp	.+2      	; 0x1c5e <_ZN6SdFile15openCachedEntryEhh+0xd4>
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	df 91       	pop	r29
    1c60:	cf 91       	pop	r28
    1c62:	1f 91       	pop	r17
    1c64:	08 95       	ret

00001c66 <_ZN6SdFile4openEPS_PKch>:
    1c66:	4f 92       	push	r4
    1c68:	5f 92       	push	r5
    1c6a:	6f 92       	push	r6
    1c6c:	7f 92       	push	r7
    1c6e:	8f 92       	push	r8
    1c70:	9f 92       	push	r9
    1c72:	af 92       	push	r10
    1c74:	bf 92       	push	r11
    1c76:	cf 92       	push	r12
    1c78:	df 92       	push	r13
    1c7a:	ef 92       	push	r14
    1c7c:	ff 92       	push	r15
    1c7e:	0f 93       	push	r16
    1c80:	1f 93       	push	r17
    1c82:	cf 93       	push	r28
    1c84:	df 93       	push	r29
    1c86:	cd b7       	in	r28, 0x3d	; 61
    1c88:	de b7       	in	r29, 0x3e	; 62
    1c8a:	2b 97       	sbiw	r28, 0x0b	; 11
    1c8c:	0f b6       	in	r0, 0x3f	; 63
    1c8e:	f8 94       	cli
    1c90:	de bf       	out	0x3e, r29	; 62
    1c92:	0f be       	out	0x3f, r0	; 63
    1c94:	cd bf       	out	0x3d, r28	; 61
    1c96:	3c 01       	movw	r6, r24
    1c98:	5b 01       	movw	r10, r22
    1c9a:	ca 01       	movw	r24, r20
    1c9c:	82 2e       	mov	r8, r18
    1c9e:	f3 01       	movw	r30, r6
    1ca0:	25 81       	ldd	r18, Z+5	; 0x05
    1ca2:	22 23       	and	r18, r18
    1ca4:	09 f0       	breq	.+2      	; 0x1ca8 <_ZN6SdFile4openEPS_PKch+0x42>
    1ca6:	bd c0       	rjmp	.+378    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1ca8:	8e 01       	movw	r16, r28
    1caa:	0f 5f       	subi	r16, 0xFF	; 255
    1cac:	1f 4f       	sbci	r17, 0xFF	; 255
    1cae:	b8 01       	movw	r22, r16
    1cb0:	0e 94 ef 09 	call	0x13de	; 0x13de <_ZN6SdFile10make83NameEPKcPh>
    1cb4:	88 23       	and	r24, r24
    1cb6:	09 f4       	brne	.+2      	; 0x1cba <_ZN6SdFile4openEPS_PKch+0x54>
    1cb8:	b4 c0       	rjmp	.+360    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1cba:	f5 01       	movw	r30, r10
    1cbc:	83 8d       	ldd	r24, Z+27	; 0x1b
    1cbe:	94 8d       	ldd	r25, Z+28	; 0x1c
    1cc0:	f3 01       	movw	r30, r6
    1cc2:	94 8f       	std	Z+28, r25	; 0x1c
    1cc4:	83 8f       	std	Z+27, r24	; 0x1b
  int8_t readDir(dir_t* dir);
  static uint8_t remove(SdFile* dirFile, const char* fileName);
  uint8_t remove(void);
  /** Set the file's current position to zero. */
  void rewind(void) {
    curPosition_ = curCluster_ = 0;
    1cc6:	f5 01       	movw	r30, r10
    1cc8:	16 82       	std	Z+6, r1	; 0x06
    1cca:	17 82       	std	Z+7, r1	; 0x07
    1ccc:	10 86       	std	Z+8, r1	; 0x08
    1cce:	11 86       	std	Z+9, r1	; 0x09
    1cd0:	12 86       	std	Z+10, r1	; 0x0a
    1cd2:	13 86       	std	Z+11, r1	; 0x0b
    1cd4:	14 86       	std	Z+12, r1	; 0x0c
    1cd6:	15 86       	std	Z+13, r1	; 0x0d
    1cd8:	99 24       	eor	r9, r9
    1cda:	28 01       	movw	r4, r16
    1cdc:	3d c0       	rjmp	.+122    	; 0x1d58 <_ZN6SdFile4openEPS_PKch+0xf2>
    1cde:	c5 01       	movw	r24, r10
    1ce0:	0e 94 c1 0b 	call	0x1782	; 0x1782 <_ZN6SdFile12readDirCacheEv>
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	00 97       	sbiw	r24, 0x00	; 0
    1ce8:	09 f4       	brne	.+2      	; 0x1cec <_ZN6SdFile4openEPS_PKch+0x86>
    1cea:	9b c0       	rjmp	.+310    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1cec:	97 01       	movw	r18, r14
    1cee:	86 01       	movw	r16, r12
    1cf0:	e5 e0       	ldi	r30, 0x05	; 5
    1cf2:	36 95       	lsr	r19
    1cf4:	27 95       	ror	r18
    1cf6:	17 95       	ror	r17
    1cf8:	07 95       	ror	r16
    1cfa:	ea 95       	dec	r30
    1cfc:	d1 f7       	brne	.-12     	; 0x1cf2 <_ZN6SdFile4openEPS_PKch+0x8c>
    1cfe:	0f 70       	andi	r16, 0x0F	; 15
    1d00:	fc 01       	movw	r30, r24
    1d02:	80 81       	ld	r24, Z
    1d04:	88 23       	and	r24, r24
    1d06:	11 f0       	breq	.+4      	; 0x1d0c <_ZN6SdFile4openEPS_PKch+0xa6>
    1d08:	85 3e       	cpi	r24, 0xE5	; 229
    1d0a:	b9 f4       	brne	.+46     	; 0x1d3a <_ZN6SdFile4openEPS_PKch+0xd4>
    1d0c:	99 20       	and	r9, r9
    1d0e:	81 f4       	brne	.+32     	; 0x1d30 <_ZN6SdFile4openEPS_PKch+0xca>
    1d10:	f3 01       	movw	r30, r6
    1d12:	02 8b       	std	Z+18, r16	; 0x12
    1d14:	80 91 cb 01 	lds	r24, 0x01CB
    1d18:	90 91 cc 01 	lds	r25, 0x01CC
    1d1c:	a0 91 cd 01 	lds	r26, 0x01CD
    1d20:	b0 91 ce 01 	lds	r27, 0x01CE
    1d24:	86 87       	std	Z+14, r24	; 0x0e
    1d26:	97 87       	std	Z+15, r25	; 0x0f
    1d28:	a0 8b       	std	Z+16, r26	; 0x10
    1d2a:	b1 8b       	std	Z+17, r27	; 0x11
    1d2c:	99 24       	eor	r9, r9
    1d2e:	93 94       	inc	r9
    1d30:	fb 01       	movw	r30, r22
    1d32:	80 81       	ld	r24, Z
    1d34:	88 23       	and	r24, r24
    1d36:	81 f4       	brne	.+32     	; 0x1d58 <_ZN6SdFile4openEPS_PKch+0xf2>
    1d38:	1e c0       	rjmp	.+60     	; 0x1d76 <_ZN6SdFile4openEPS_PKch+0x110>
    1d3a:	c2 01       	movw	r24, r4
    1d3c:	4b e0       	ldi	r20, 0x0B	; 11
    1d3e:	50 e0       	ldi	r21, 0x00	; 0
    1d40:	0e 94 a8 1d 	call	0x3b50	; 0x3b50 <memcmp>
    1d44:	00 97       	sbiw	r24, 0x00	; 0
    1d46:	41 f4       	brne	.+16     	; 0x1d58 <_ZN6SdFile4openEPS_PKch+0xf2>
    1d48:	88 2d       	mov	r24, r8
    1d4a:	80 73       	andi	r24, 0x30	; 48
    1d4c:	80 33       	cpi	r24, 0x30	; 48
    1d4e:	09 f4       	brne	.+2      	; 0x1d52 <_ZN6SdFile4openEPS_PKch+0xec>
    1d50:	68 c0       	rjmp	.+208    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1d52:	c3 01       	movw	r24, r6
    1d54:	60 2f       	mov	r22, r16
    1d56:	61 c0       	rjmp	.+194    	; 0x1e1a <_ZN6SdFile4openEPS_PKch+0x1b4>
    1d58:	f5 01       	movw	r30, r10
    1d5a:	c2 84       	ldd	r12, Z+10	; 0x0a
    1d5c:	d3 84       	ldd	r13, Z+11	; 0x0b
    1d5e:	e4 84       	ldd	r14, Z+12	; 0x0c
    1d60:	f5 84       	ldd	r15, Z+13	; 0x0d
    1d62:	83 89       	ldd	r24, Z+19	; 0x13
    1d64:	94 89       	ldd	r25, Z+20	; 0x14
    1d66:	a5 89       	ldd	r26, Z+21	; 0x15
    1d68:	b6 89       	ldd	r27, Z+22	; 0x16
    1d6a:	c8 16       	cp	r12, r24
    1d6c:	d9 06       	cpc	r13, r25
    1d6e:	ea 06       	cpc	r14, r26
    1d70:	fb 06       	cpc	r15, r27
    1d72:	08 f4       	brcc	.+2      	; 0x1d76 <_ZN6SdFile4openEPS_PKch+0x110>
    1d74:	b4 cf       	rjmp	.-152    	; 0x1cde <_ZN6SdFile4openEPS_PKch+0x78>
    1d76:	88 2d       	mov	r24, r8
    1d78:	82 71       	andi	r24, 0x12	; 18
    1d7a:	82 31       	cpi	r24, 0x12	; 18
    1d7c:	09 f0       	breq	.+2      	; 0x1d80 <_ZN6SdFile4openEPS_PKch+0x11a>
    1d7e:	51 c0       	rjmp	.+162    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1d80:	99 20       	and	r9, r9
    1d82:	41 f0       	breq	.+16     	; 0x1d94 <_ZN6SdFile4openEPS_PKch+0x12e>
    1d84:	c3 01       	movw	r24, r6
    1d86:	61 e0       	ldi	r22, 0x01	; 1
    1d88:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <_ZN6SdFile13cacheDirEntryEh>
    1d8c:	8c 01       	movw	r16, r24
    1d8e:	00 97       	sbiw	r24, 0x00	; 0
    1d90:	79 f4       	brne	.+30     	; 0x1db0 <_ZN6SdFile4openEPS_PKch+0x14a>
    1d92:	47 c0       	rjmp	.+142    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1d94:	f5 01       	movw	r30, r10
    1d96:	85 81       	ldd	r24, Z+5	; 0x05
    1d98:	82 30       	cpi	r24, 0x02	; 2
    1d9a:	09 f4       	brne	.+2      	; 0x1d9e <_ZN6SdFile4openEPS_PKch+0x138>
    1d9c:	42 c0       	rjmp	.+132    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1d9e:	c5 01       	movw	r24, r10
    1da0:	0e 94 6e 09 	call	0x12dc	; 0x12dc <_ZN6SdFile13addDirClusterEv>
    1da4:	88 23       	and	r24, r24
    1da6:	e9 f1       	breq	.+122    	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1da8:	f3 01       	movw	r30, r6
    1daa:	12 8a       	std	Z+18, r1	; 0x12
    1dac:	05 e6       	ldi	r16, 0x65	; 101
    1dae:	14 e0       	ldi	r17, 0x04	; 4
    1db0:	80 e2       	ldi	r24, 0x20	; 32
    1db2:	f8 01       	movw	r30, r16
    1db4:	11 92       	st	Z+, r1
    1db6:	8a 95       	dec	r24
    1db8:	e9 f7       	brne	.-6      	; 0x1db4 <_ZN6SdFile4openEPS_PKch+0x14e>
    1dba:	d8 01       	movw	r26, r16
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	31 96       	adiw	r30, 0x01	; 1
    1dc0:	8b e0       	ldi	r24, 0x0B	; 11
    1dc2:	01 90       	ld	r0, Z+
    1dc4:	0d 92       	st	X+, r0
    1dc6:	81 50       	subi	r24, 0x01	; 1
    1dc8:	e1 f7       	brne	.-8      	; 0x1dc2 <_ZN6SdFile4openEPS_PKch+0x15c>
    1dca:	e0 91 5c 04 	lds	r30, 0x045C
    1dce:	f0 91 5d 04 	lds	r31, 0x045D
    1dd2:	30 97       	sbiw	r30, 0x00	; 0
    1dd4:	39 f0       	breq	.+14     	; 0x1de4 <_ZN6SdFile4openEPS_PKch+0x17e>
    1dd6:	b8 01       	movw	r22, r16
    1dd8:	62 5f       	subi	r22, 0xF2	; 242
    1dda:	7f 4f       	sbci	r23, 0xFF	; 255
    1ddc:	c8 01       	movw	r24, r16
    1dde:	40 96       	adiw	r24, 0x10	; 16
    1de0:	09 95       	icall
    1de2:	09 c0       	rjmp	.+18     	; 0x1df6 <_ZN6SdFile4openEPS_PKch+0x190>
    1de4:	81 e2       	ldi	r24, 0x21	; 33
    1de6:	98 e2       	ldi	r25, 0x28	; 40
    1de8:	f8 01       	movw	r30, r16
    1dea:	91 8b       	std	Z+17, r25	; 0x11
    1dec:	80 8b       	std	Z+16, r24	; 0x10
    1dee:	80 e0       	ldi	r24, 0x00	; 0
    1df0:	98 e0       	ldi	r25, 0x08	; 8
    1df2:	97 87       	std	Z+15, r25	; 0x0f
    1df4:	86 87       	std	Z+14, r24	; 0x0e
    1df6:	f8 01       	movw	r30, r16
    1df8:	80 89       	ldd	r24, Z+16	; 0x10
    1dfa:	91 89       	ldd	r25, Z+17	; 0x11
    1dfc:	93 8b       	std	Z+19, r25	; 0x13
    1dfe:	82 8b       	std	Z+18, r24	; 0x12
    1e00:	91 8f       	std	Z+25, r25	; 0x19
    1e02:	80 8f       	std	Z+24, r24	; 0x18
    1e04:	86 85       	ldd	r24, Z+14	; 0x0e
    1e06:	97 85       	ldd	r25, Z+15	; 0x0f
    1e08:	97 8b       	std	Z+23, r25	; 0x17
    1e0a:	86 8b       	std	Z+22, r24	; 0x16
    1e0c:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <_ZN8SdVolume10cacheFlushEv>
    1e10:	88 23       	and	r24, r24
    1e12:	39 f0       	breq	.+14     	; 0x1e22 <_ZN6SdFile4openEPS_PKch+0x1bc>
    1e14:	c3 01       	movw	r24, r6
    1e16:	f3 01       	movw	r30, r6
    1e18:	62 89       	ldd	r22, Z+18	; 0x12
    1e1a:	48 2d       	mov	r20, r8
    1e1c:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <_ZN6SdFile15openCachedEntryEhh>
    1e20:	01 c0       	rjmp	.+2      	; 0x1e24 <_ZN6SdFile4openEPS_PKch+0x1be>
    1e22:	80 e0       	ldi	r24, 0x00	; 0
    1e24:	2b 96       	adiw	r28, 0x0b	; 11
    1e26:	0f b6       	in	r0, 0x3f	; 63
    1e28:	f8 94       	cli
    1e2a:	de bf       	out	0x3e, r29	; 62
    1e2c:	0f be       	out	0x3f, r0	; 63
    1e2e:	cd bf       	out	0x3d, r28	; 61
    1e30:	df 91       	pop	r29
    1e32:	cf 91       	pop	r28
    1e34:	1f 91       	pop	r17
    1e36:	0f 91       	pop	r16
    1e38:	ff 90       	pop	r15
    1e3a:	ef 90       	pop	r14
    1e3c:	df 90       	pop	r13
    1e3e:	cf 90       	pop	r12
    1e40:	bf 90       	pop	r11
    1e42:	af 90       	pop	r10
    1e44:	9f 90       	pop	r9
    1e46:	8f 90       	pop	r8
    1e48:	7f 90       	pop	r7
    1e4a:	6f 90       	pop	r6
    1e4c:	5f 90       	pop	r5
    1e4e:	4f 90       	pop	r4
    1e50:	08 95       	ret

00001e52 <_ZN6SdFile5writeEPKvj>:
    1e52:	2f 92       	push	r2
    1e54:	3f 92       	push	r3
    1e56:	4f 92       	push	r4
    1e58:	5f 92       	push	r5
    1e5a:	6f 92       	push	r6
    1e5c:	7f 92       	push	r7
    1e5e:	8f 92       	push	r8
    1e60:	9f 92       	push	r9
    1e62:	bf 92       	push	r11
    1e64:	cf 92       	push	r12
    1e66:	df 92       	push	r13
    1e68:	ef 92       	push	r14
    1e6a:	ff 92       	push	r15
    1e6c:	0f 93       	push	r16
    1e6e:	1f 93       	push	r17
    1e70:	cf 93       	push	r28
    1e72:	df 93       	push	r29
    1e74:	00 d0       	rcall	.+0      	; 0x1e76 <_ZN6SdFile5writeEPKvj+0x24>
    1e76:	00 d0       	rcall	.+0      	; 0x1e78 <_ZN6SdFile5writeEPKvj+0x26>
    1e78:	00 d0       	rcall	.+0      	; 0x1e7a <_ZN6SdFile5writeEPKvj+0x28>
    1e7a:	cd b7       	in	r28, 0x3d	; 61
    1e7c:	de b7       	in	r29, 0x3e	; 62
    1e7e:	8c 01       	movw	r16, r24
    1e80:	b6 2e       	mov	r11, r22
    1e82:	c7 2e       	mov	r12, r23
    1e84:	5e 83       	std	Y+6, r21	; 0x06
    1e86:	4d 83       	std	Y+5, r20	; 0x05
    1e88:	dc 01       	movw	r26, r24
    1e8a:	15 96       	adiw	r26, 0x05	; 5
    1e8c:	8c 91       	ld	r24, X
    1e8e:	15 97       	sbiw	r26, 0x05	; 5
    1e90:	81 30       	cpi	r24, 0x01	; 1
    1e92:	09 f0       	breq	.+2      	; 0x1e96 <_ZN6SdFile5writeEPKvj+0x44>
    1e94:	66 c1       	rjmp	.+716    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    1e96:	14 96       	adiw	r26, 0x04	; 4
    1e98:	8c 91       	ld	r24, X
    1e9a:	14 97       	sbiw	r26, 0x04	; 4
    1e9c:	81 ff       	sbrs	r24, 1
    1e9e:	61 c1       	rjmp	.+706    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    1ea0:	83 c1       	rjmp	.+774    	; 0x21a8 <_ZN6SdFile5writeEPKvj+0x356>
    1ea2:	f8 01       	movw	r30, r16
    1ea4:	43 89       	ldd	r20, Z+19	; 0x13
    1ea6:	54 89       	ldd	r21, Z+20	; 0x14
    1ea8:	65 89       	ldd	r22, Z+21	; 0x15
    1eaa:	76 89       	ldd	r23, Z+22	; 0x16
    1eac:	82 85       	ldd	r24, Z+10	; 0x0a
    1eae:	93 85       	ldd	r25, Z+11	; 0x0b
    1eb0:	a4 85       	ldd	r26, Z+12	; 0x0c
    1eb2:	b5 85       	ldd	r27, Z+13	; 0x0d
    1eb4:	84 17       	cp	r24, r20
    1eb6:	95 07       	cpc	r25, r21
    1eb8:	a6 07       	cpc	r26, r22
    1eba:	b7 07       	cpc	r27, r23
    1ebc:	31 f0       	breq	.+12     	; 0x1eca <_ZN6SdFile5writeEPKvj+0x78>
  }
  /**
   *  Set the files current position to end of file.  Useful to position
   *  a file for append. See seekSet().
   */
  uint8_t seekEnd(void) {return seekSet(fileSize_);}
    1ebe:	c8 01       	movw	r24, r16
    1ec0:	0e 94 0b 0c 	call	0x1816	; 0x1816 <_ZN6SdFile7seekSetEm>
    1ec4:	88 23       	and	r24, r24
    1ec6:	09 f4       	brne	.+2      	; 0x1eca <_ZN6SdFile5writeEPKvj+0x78>
    1ec8:	4c c1       	rjmp	.+664    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    1eca:	2d 80       	ldd	r2, Y+5	; 0x05
    1ecc:	3e 80       	ldd	r3, Y+6	; 0x06
    1ece:	4b 2c       	mov	r4, r11
    1ed0:	5c 2c       	mov	r5, r12
    1ed2:	17 c1       	rjmp	.+558    	; 0x2102 <_ZN6SdFile5writeEPKvj+0x2b0>
    1ed4:	f8 01       	movw	r30, r16
    1ed6:	23 8d       	ldd	r18, Z+27	; 0x1b
    1ed8:	34 8d       	ldd	r19, Z+28	; 0x1c
  uint16_t rootDirEntryCount_;  // number of entries in FAT16 root dir
  uint32_t rootDirStart_;       // root start block for FAT16, cluster for FAT32
  //----------------------------------------------------------------------------
  uint8_t allocContiguous(uint32_t count, uint32_t* curCluster);
  uint8_t blockOfCluster(uint32_t position) const {
          return (position >> 9) & (blocksPerCluster_ - 1);}
    1eda:	f9 01       	movw	r30, r18
    1edc:	b4 80       	ldd	r11, Z+4	; 0x04
    1ede:	ba 94       	dec	r11
    1ee0:	ac 01       	movw	r20, r24
    1ee2:	bd 01       	movw	r22, r26
    1ee4:	03 2e       	mov	r0, r19
    1ee6:	39 e0       	ldi	r19, 0x09	; 9
    1ee8:	76 95       	lsr	r23
    1eea:	67 95       	ror	r22
    1eec:	57 95       	ror	r21
    1eee:	47 95       	ror	r20
    1ef0:	3a 95       	dec	r19
    1ef2:	d1 f7       	brne	.-12     	; 0x1ee8 <_ZN6SdFile5writeEPKvj+0x96>
    1ef4:	30 2d       	mov	r19, r0
    1ef6:	b4 22       	and	r11, r20
    1ef8:	4f ef       	ldi	r20, 0xFF	; 255
    1efa:	64 2e       	mov	r6, r20
    1efc:	41 e0       	ldi	r20, 0x01	; 1
    1efe:	74 2e       	mov	r7, r20
    1f00:	68 22       	and	r6, r24
    1f02:	79 22       	and	r7, r25
    1f04:	bb 20       	and	r11, r11
    1f06:	09 f0       	breq	.+2      	; 0x1f0a <_ZN6SdFile5writeEPKvj+0xb8>
    1f08:	4e c0       	rjmp	.+156    	; 0x1fa6 <_ZN6SdFile5writeEPKvj+0x154>
    1f0a:	61 14       	cp	r6, r1
    1f0c:	71 04       	cpc	r7, r1
    1f0e:	09 f0       	breq	.+2      	; 0x1f12 <_ZN6SdFile5writeEPKvj+0xc0>
    1f10:	4a c0       	rjmp	.+148    	; 0x1fa6 <_ZN6SdFile5writeEPKvj+0x154>
    1f12:	d8 01       	movw	r26, r16
    1f14:	16 96       	adiw	r26, 0x06	; 6
    1f16:	4d 91       	ld	r20, X+
    1f18:	5d 91       	ld	r21, X+
    1f1a:	6d 91       	ld	r22, X+
    1f1c:	7c 91       	ld	r23, X
    1f1e:	19 97       	sbiw	r26, 0x09	; 9
    1f20:	41 15       	cp	r20, r1
    1f22:	51 05       	cpc	r21, r1
    1f24:	61 05       	cpc	r22, r1
    1f26:	71 05       	cpc	r23, r1
    1f28:	81 f4       	brne	.+32     	; 0x1f4a <_ZN6SdFile5writeEPKvj+0xf8>
    1f2a:	57 96       	adiw	r26, 0x17	; 23
    1f2c:	8d 91       	ld	r24, X+
    1f2e:	9d 91       	ld	r25, X+
    1f30:	0d 90       	ld	r0, X+
    1f32:	bc 91       	ld	r27, X
    1f34:	a0 2d       	mov	r26, r0
    1f36:	00 97       	sbiw	r24, 0x00	; 0
    1f38:	a1 05       	cpc	r26, r1
    1f3a:	b1 05       	cpc	r27, r1
    1f3c:	49 f1       	breq	.+82     	; 0x1f90 <_ZN6SdFile5writeEPKvj+0x13e>
    1f3e:	f8 01       	movw	r30, r16
    1f40:	86 83       	std	Z+6, r24	; 0x06
    1f42:	97 83       	std	Z+7, r25	; 0x07
    1f44:	a0 87       	std	Z+8, r26	; 0x08
    1f46:	b1 87       	std	Z+9, r27	; 0x09
    1f48:	2e c0       	rjmp	.+92     	; 0x1fa6 <_ZN6SdFile5writeEPKvj+0x154>
    1f4a:	c9 01       	movw	r24, r18
    1f4c:	9e 01       	movw	r18, r28
    1f4e:	2f 5f       	subi	r18, 0xFF	; 255
    1f50:	3f 4f       	sbci	r19, 0xFF	; 255
    1f52:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    1f56:	88 23       	and	r24, r24
    1f58:	09 f4       	brne	.+2      	; 0x1f5c <_ZN6SdFile5writeEPKvj+0x10a>
    1f5a:	0a c1       	rjmp	.+532    	; 0x2170 <_ZN6SdFile5writeEPKvj+0x31e>
    1f5c:	49 81       	ldd	r20, Y+1	; 0x01
    1f5e:	5a 81       	ldd	r21, Y+2	; 0x02
    1f60:	6b 81       	ldd	r22, Y+3	; 0x03
    1f62:	7c 81       	ldd	r23, Y+4	; 0x04
    1f64:	d8 01       	movw	r26, r16
    1f66:	5b 96       	adiw	r26, 0x1b	; 27
    1f68:	ed 91       	ld	r30, X+
    1f6a:	fc 91       	ld	r31, X
    1f6c:	5c 97       	sbiw	r26, 0x1c	; 28
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
  }
  uint8_t freeChain(uint32_t cluster);
  uint8_t isEOC(uint32_t cluster) const {
    return  cluster >= (fatType_ == 16 ? FAT16EOC_MIN : FAT32EOC_MIN);
    1f6e:	87 89       	ldd	r24, Z+23	; 0x17
    1f70:	80 31       	cpi	r24, 0x10	; 16
    1f72:	29 f4       	brne	.+10     	; 0x1f7e <_ZN6SdFile5writeEPKvj+0x12c>
    1f74:	88 ef       	ldi	r24, 0xF8	; 248
    1f76:	9f ef       	ldi	r25, 0xFF	; 255
    1f78:	a0 e0       	ldi	r26, 0x00	; 0
    1f7a:	b0 e0       	ldi	r27, 0x00	; 0
    1f7c:	04 c0       	rjmp	.+8      	; 0x1f86 <_ZN6SdFile5writeEPKvj+0x134>
    1f7e:	88 ef       	ldi	r24, 0xF8	; 248
    1f80:	9f ef       	ldi	r25, 0xFF	; 255
    1f82:	af ef       	ldi	r26, 0xFF	; 255
    1f84:	bf e0       	ldi	r27, 0x0F	; 15
    1f86:	48 17       	cp	r20, r24
    1f88:	59 07       	cpc	r21, r25
    1f8a:	6a 07       	cpc	r22, r26
    1f8c:	7b 07       	cpc	r23, r27
    1f8e:	30 f0       	brcs	.+12     	; 0x1f9c <_ZN6SdFile5writeEPKvj+0x14a>
    1f90:	c8 01       	movw	r24, r16
    1f92:	0e 94 44 09 	call	0x1288	; 0x1288 <_ZN6SdFile10addClusterEv>
    1f96:	88 23       	and	r24, r24
    1f98:	31 f4       	brne	.+12     	; 0x1fa6 <_ZN6SdFile5writeEPKvj+0x154>
    1f9a:	e3 c0       	rjmp	.+454    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    1f9c:	f8 01       	movw	r30, r16
    1f9e:	46 83       	std	Z+6, r20	; 0x06
    1fa0:	57 83       	std	Z+7, r21	; 0x07
    1fa2:	60 87       	std	Z+8, r22	; 0x08
    1fa4:	71 87       	std	Z+9, r23	; 0x09
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	92 e0       	ldi	r25, 0x02	; 2
    1faa:	86 19       	sub	r24, r6
    1fac:	97 09       	sbc	r25, r7
    1fae:	41 01       	movw	r8, r2
    1fb0:	82 15       	cp	r24, r2
    1fb2:	93 05       	cpc	r25, r3
    1fb4:	08 f4       	brcc	.+2      	; 0x1fb8 <_ZN6SdFile5writeEPKvj+0x166>
    1fb6:	4c 01       	movw	r8, r24
    1fb8:	d8 01       	movw	r26, r16
    1fba:	5b 96       	adiw	r26, 0x1b	; 27
    1fbc:	ed 91       	ld	r30, X+
    1fbe:	fc 91       	ld	r31, X
    1fc0:	5c 97       	sbiw	r26, 0x1c	; 28
  //----------------------------------------------------------------------------
  uint8_t allocContiguous(uint32_t count, uint32_t* curCluster);
  uint8_t blockOfCluster(uint32_t position) const {
          return (position >> 9) & (blocksPerCluster_ - 1);}
  uint32_t clusterStartBlock(uint32_t cluster) const {
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
    1fc2:	16 96       	adiw	r26, 0x06	; 6
    1fc4:	cd 90       	ld	r12, X+
    1fc6:	dd 90       	ld	r13, X+
    1fc8:	ed 90       	ld	r14, X+
    1fca:	fc 90       	ld	r15, X
    1fcc:	19 97       	sbiw	r26, 0x09	; 9
    1fce:	8e ef       	ldi	r24, 0xFE	; 254
    1fd0:	9f ef       	ldi	r25, 0xFF	; 255
    1fd2:	af ef       	ldi	r26, 0xFF	; 255
    1fd4:	bf ef       	ldi	r27, 0xFF	; 255
    1fd6:	c8 0e       	add	r12, r24
    1fd8:	d9 1e       	adc	r13, r25
    1fda:	ea 1e       	adc	r14, r26
    1fdc:	fb 1e       	adc	r15, r27
    1fde:	05 84       	ldd	r0, Z+13	; 0x0d
    1fe0:	04 c0       	rjmp	.+8      	; 0x1fea <_ZN6SdFile5writeEPKvj+0x198>
    1fe2:	cc 0c       	add	r12, r12
    1fe4:	dd 1c       	adc	r13, r13
    1fe6:	ee 1c       	adc	r14, r14
    1fe8:	ff 1c       	adc	r15, r15
    1fea:	0a 94       	dec	r0
    1fec:	d2 f7       	brpl	.-12     	; 0x1fe2 <_ZN6SdFile5writeEPKvj+0x190>
    1fee:	86 85       	ldd	r24, Z+14	; 0x0e
    1ff0:	97 85       	ldd	r25, Z+15	; 0x0f
    1ff2:	a0 89       	ldd	r26, Z+16	; 0x10
    1ff4:	b1 89       	ldd	r27, Z+17	; 0x11
    1ff6:	c8 0e       	add	r12, r24
    1ff8:	d9 1e       	adc	r13, r25
    1ffa:	ea 1e       	adc	r14, r26
    1ffc:	fb 1e       	adc	r15, r27
    1ffe:	cb 0c       	add	r12, r11
    2000:	d1 1c       	adc	r13, r1
    2002:	e1 1c       	adc	r14, r1
    2004:	f1 1c       	adc	r15, r1
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	89 16       	cp	r8, r25
    200a:	92 e0       	ldi	r25, 0x02	; 2
    200c:	99 06       	cpc	r9, r25
    200e:	49 f5       	brne	.+82     	; 0x2062 <_ZN6SdFile5writeEPKvj+0x210>
    2010:	80 91 cb 01 	lds	r24, 0x01CB
    2014:	90 91 cc 01 	lds	r25, 0x01CC
    2018:	a0 91 cd 01 	lds	r26, 0x01CD
    201c:	b0 91 ce 01 	lds	r27, 0x01CE
    2020:	8c 15       	cp	r24, r12
    2022:	9d 05       	cpc	r25, r13
    2024:	ae 05       	cpc	r26, r14
    2026:	bf 05       	cpc	r27, r15
    2028:	59 f4       	brne	.+22     	; 0x2040 <_ZN6SdFile5writeEPKvj+0x1ee>
    202a:	8f ef       	ldi	r24, 0xFF	; 255
    202c:	9f ef       	ldi	r25, 0xFF	; 255
    202e:	dc 01       	movw	r26, r24
    2030:	80 93 cb 01 	sts	0x01CB, r24
    2034:	90 93 cc 01 	sts	0x01CC, r25
    2038:	a0 93 cd 01 	sts	0x01CD, r26
    203c:	b0 93 ce 01 	sts	0x01CE, r27
  uint8_t readData(uint32_t block, uint16_t offset,
    uint16_t count, uint8_t* dst) {
      return sdCard_->readData(block, offset, count, dst);
  }
  uint8_t writeBlock(uint32_t block, const uint8_t* dst) {
    return sdCard_->writeBlock(block, dst);
    2040:	80 91 63 04 	lds	r24, 0x0463
    2044:	90 91 64 04 	lds	r25, 0x0464
    2048:	b7 01       	movw	r22, r14
    204a:	a6 01       	movw	r20, r12
    204c:	92 01       	movw	r18, r4
    204e:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <_ZN7Sd2Card10writeBlockEmPKh>
    2052:	88 23       	and	r24, r24
    2054:	09 f4       	brne	.+2      	; 0x2058 <_ZN6SdFile5writeEPKvj+0x206>
    2056:	85 c0       	rjmp	.+266    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    2058:	a0 e0       	ldi	r26, 0x00	; 0
    205a:	b2 e0       	ldi	r27, 0x02	; 2
    205c:	4a 0e       	add	r4, r26
    205e:	5b 1e       	adc	r5, r27
    2060:	3e c0       	rjmp	.+124    	; 0x20de <_ZN6SdFile5writeEPKvj+0x28c>
    2062:	61 14       	cp	r6, r1
    2064:	71 04       	cpc	r7, r1
    2066:	09 f5       	brne	.+66     	; 0x20aa <_ZN6SdFile5writeEPKvj+0x258>
    2068:	f8 01       	movw	r30, r16
    206a:	82 85       	ldd	r24, Z+10	; 0x0a
    206c:	93 85       	ldd	r25, Z+11	; 0x0b
    206e:	a4 85       	ldd	r26, Z+12	; 0x0c
    2070:	b5 85       	ldd	r27, Z+13	; 0x0d
    2072:	43 89       	ldd	r20, Z+19	; 0x13
    2074:	54 89       	ldd	r21, Z+20	; 0x14
    2076:	65 89       	ldd	r22, Z+21	; 0x15
    2078:	76 89       	ldd	r23, Z+22	; 0x16
    207a:	84 17       	cp	r24, r20
    207c:	95 07       	cpc	r25, r21
    207e:	a6 07       	cpc	r26, r22
    2080:	b7 07       	cpc	r27, r23
    2082:	98 f0       	brcs	.+38     	; 0x20aa <_ZN6SdFile5writeEPKvj+0x258>
    2084:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <_ZN8SdVolume10cacheFlushEv>
    2088:	88 23       	and	r24, r24
    208a:	09 f4       	brne	.+2      	; 0x208e <_ZN6SdFile5writeEPKvj+0x23c>
    208c:	6a c0       	rjmp	.+212    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    208e:	c0 92 cb 01 	sts	0x01CB, r12
    2092:	d0 92 cc 01 	sts	0x01CC, r13
    2096:	e0 92 cd 01 	sts	0x01CD, r14
    209a:	f0 92 ce 01 	sts	0x01CE, r15
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {
           return clusterStartBlock(cluster) + blockOfCluster(position);}
  static uint8_t cacheFlush(void);
  static uint8_t cacheRawBlock(uint32_t blockNumber, uint8_t action);
  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}
    209e:	80 91 62 04 	lds	r24, 0x0462
    20a2:	81 60       	ori	r24, 0x01	; 1
    20a4:	80 93 62 04 	sts	0x0462, r24
    20a8:	08 c0       	rjmp	.+16     	; 0x20ba <_ZN6SdFile5writeEPKvj+0x268>
    20aa:	c7 01       	movw	r24, r14
    20ac:	b6 01       	movw	r22, r12
    20ae:	41 e0       	ldi	r20, 0x01	; 1
    20b0:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    20b4:	88 23       	and	r24, r24
    20b6:	09 f4       	brne	.+2      	; 0x20ba <_ZN6SdFile5writeEPKvj+0x268>
    20b8:	54 c0       	rjmp	.+168    	; 0x2162 <_ZN6SdFile5writeEPKvj+0x310>
    20ba:	93 01       	movw	r18, r6
    20bc:	2b 59       	subi	r18, 0x9B	; 155
    20be:	3b 4f       	sbci	r19, 0xFB	; 251
    20c0:	c9 01       	movw	r24, r18
    20c2:	88 0d       	add	r24, r8
    20c4:	99 1d       	adc	r25, r9
    20c6:	d2 01       	movw	r26, r4
    20c8:	f9 01       	movw	r30, r18
    20ca:	02 c0       	rjmp	.+4      	; 0x20d0 <_ZN6SdFile5writeEPKvj+0x27e>
    20cc:	4d 91       	ld	r20, X+
    20ce:	41 93       	st	Z+, r20
    20d0:	e8 17       	cp	r30, r24
    20d2:	f9 07       	cpc	r31, r25
    20d4:	d9 f7       	brne	.-10     	; 0x20cc <_ZN6SdFile5writeEPKvj+0x27a>
    20d6:	e2 1b       	sub	r30, r18
    20d8:	f3 0b       	sbc	r31, r19
    20da:	4e 0e       	add	r4, r30
    20dc:	5f 1e       	adc	r5, r31
    20de:	28 18       	sub	r2, r8
    20e0:	39 08       	sbc	r3, r9
    20e2:	a4 01       	movw	r20, r8
    20e4:	60 e0       	ldi	r22, 0x00	; 0
    20e6:	70 e0       	ldi	r23, 0x00	; 0
    20e8:	f8 01       	movw	r30, r16
    20ea:	82 85       	ldd	r24, Z+10	; 0x0a
    20ec:	93 85       	ldd	r25, Z+11	; 0x0b
    20ee:	a4 85       	ldd	r26, Z+12	; 0x0c
    20f0:	b5 85       	ldd	r27, Z+13	; 0x0d
    20f2:	84 0f       	add	r24, r20
    20f4:	95 1f       	adc	r25, r21
    20f6:	a6 1f       	adc	r26, r22
    20f8:	b7 1f       	adc	r27, r23
    20fa:	82 87       	std	Z+10, r24	; 0x0a
    20fc:	93 87       	std	Z+11, r25	; 0x0b
    20fe:	a4 87       	std	Z+12, r26	; 0x0c
    2100:	b5 87       	std	Z+13, r27	; 0x0d
    2102:	f8 01       	movw	r30, r16
    2104:	82 85       	ldd	r24, Z+10	; 0x0a
    2106:	93 85       	ldd	r25, Z+11	; 0x0b
    2108:	a4 85       	ldd	r26, Z+12	; 0x0c
    210a:	b5 85       	ldd	r27, Z+13	; 0x0d
    210c:	21 14       	cp	r2, r1
    210e:	31 04       	cpc	r3, r1
    2110:	09 f0       	breq	.+2      	; 0x2114 <_ZN6SdFile5writeEPKvj+0x2c2>
    2112:	e0 ce       	rjmp	.-576    	; 0x1ed4 <_ZN6SdFile5writeEPKvj+0x82>
    2114:	43 89       	ldd	r20, Z+19	; 0x13
    2116:	54 89       	ldd	r21, Z+20	; 0x14
    2118:	65 89       	ldd	r22, Z+21	; 0x15
    211a:	76 89       	ldd	r23, Z+22	; 0x16
    211c:	48 17       	cp	r20, r24
    211e:	59 07       	cpc	r21, r25
    2120:	6a 07       	cpc	r22, r26
    2122:	7b 07       	cpc	r23, r27
    2124:	40 f4       	brcc	.+16     	; 0x2136 <_ZN6SdFile5writeEPKvj+0x2e4>
    2126:	83 8b       	std	Z+19, r24	; 0x13
    2128:	94 8b       	std	Z+20, r25	; 0x14
    212a:	a5 8b       	std	Z+21, r26	; 0x15
    212c:	b6 8b       	std	Z+22, r27	; 0x16
    212e:	84 81       	ldd	r24, Z+4	; 0x04
    2130:	80 68       	ori	r24, 0x80	; 128
    2132:	84 83       	std	Z+4, r24	; 0x04
    2134:	0d c0       	rjmp	.+26     	; 0x2150 <_ZN6SdFile5writeEPKvj+0x2fe>
    2136:	80 91 5c 04 	lds	r24, 0x045C
    213a:	90 91 5d 04 	lds	r25, 0x045D
    213e:	00 97       	sbiw	r24, 0x00	; 0
    2140:	39 f0       	breq	.+14     	; 0x2150 <_ZN6SdFile5writeEPKvj+0x2fe>
    2142:	8d 81       	ldd	r24, Y+5	; 0x05
    2144:	9e 81       	ldd	r25, Y+6	; 0x06
    2146:	00 97       	sbiw	r24, 0x00	; 0
    2148:	19 f0       	breq	.+6      	; 0x2150 <_ZN6SdFile5writeEPKvj+0x2fe>
    214a:	84 81       	ldd	r24, Z+4	; 0x04
    214c:	80 68       	ori	r24, 0x80	; 128
    214e:	84 83       	std	Z+4, r24	; 0x04
    2150:	f8 01       	movw	r30, r16
    2152:	84 81       	ldd	r24, Z+4	; 0x04
    2154:	83 ff       	sbrs	r24, 3
    2156:	0e c0       	rjmp	.+28     	; 0x2174 <_ZN6SdFile5writeEPKvj+0x322>
    2158:	c8 01       	movw	r24, r16
    215a:	0e 94 a5 0c 	call	0x194a	; 0x194a <_ZN6SdFile4syncEv>
    215e:	88 23       	and	r24, r24
    2160:	49 f4       	brne	.+18     	; 0x2174 <_ZN6SdFile5writeEPKvj+0x322>
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
    2162:	81 e0       	ldi	r24, 0x01	; 1
    2164:	90 e0       	ldi	r25, 0x00	; 0
    2166:	d8 01       	movw	r26, r16
    2168:	13 96       	adiw	r26, 0x03	; 3
    216a:	9c 93       	st	X, r25
    216c:	8e 93       	st	-X, r24
    216e:	12 97       	sbiw	r26, 0x02	; 2
    2170:	1e 82       	std	Y+6, r1	; 0x06
    2172:	1d 82       	std	Y+5, r1	; 0x05
    2174:	8d 81       	ldd	r24, Y+5	; 0x05
    2176:	9e 81       	ldd	r25, Y+6	; 0x06
    2178:	26 96       	adiw	r28, 0x06	; 6
    217a:	0f b6       	in	r0, 0x3f	; 63
    217c:	f8 94       	cli
    217e:	de bf       	out	0x3e, r29	; 62
    2180:	0f be       	out	0x3f, r0	; 63
    2182:	cd bf       	out	0x3d, r28	; 61
    2184:	df 91       	pop	r29
    2186:	cf 91       	pop	r28
    2188:	1f 91       	pop	r17
    218a:	0f 91       	pop	r16
    218c:	ff 90       	pop	r15
    218e:	ef 90       	pop	r14
    2190:	df 90       	pop	r13
    2192:	cf 90       	pop	r12
    2194:	bf 90       	pop	r11
    2196:	9f 90       	pop	r9
    2198:	8f 90       	pop	r8
    219a:	7f 90       	pop	r7
    219c:	6f 90       	pop	r6
    219e:	5f 90       	pop	r5
    21a0:	4f 90       	pop	r4
    21a2:	3f 90       	pop	r3
    21a4:	2f 90       	pop	r2
    21a6:	08 95       	ret
    21a8:	82 fd       	sbrc	r24, 2
    21aa:	7b ce       	rjmp	.-778    	; 0x1ea2 <_ZN6SdFile5writeEPKvj+0x50>
    21ac:	8e ce       	rjmp	.-740    	; 0x1eca <_ZN6SdFile5writeEPKvj+0x78>

000021ae <_ZN6SdFile5writeEh>:
    21ae:	cf 93       	push	r28
    21b0:	df 93       	push	r29
    21b2:	0f 92       	push	r0
    21b4:	cd b7       	in	r28, 0x3d	; 61
    21b6:	de b7       	in	r29, 0x3e	; 62
    21b8:	69 83       	std	Y+1, r22	; 0x01
    21ba:	be 01       	movw	r22, r28
    21bc:	6f 5f       	subi	r22, 0xFF	; 255
    21be:	7f 4f       	sbci	r23, 0xFF	; 255
    21c0:	41 e0       	ldi	r20, 0x01	; 1
    21c2:	50 e0       	ldi	r21, 0x00	; 0
    21c4:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <_ZN6SdFile5writeEPKvj>
    21c8:	0f 90       	pop	r0
    21ca:	df 91       	pop	r29
    21cc:	cf 91       	pop	r28
    21ce:	08 95       	ret

000021d0 <_ZN8SdVolume10cacheFlushEv>:
    21d0:	80 91 62 04 	lds	r24, 0x0462
    21d4:	88 23       	and	r24, r24
    21d6:	b1 f1       	breq	.+108    	; 0x2244 <_ZN8SdVolume10cacheFlushEv+0x74>
    21d8:	40 91 cb 01 	lds	r20, 0x01CB
    21dc:	50 91 cc 01 	lds	r21, 0x01CC
    21e0:	60 91 cd 01 	lds	r22, 0x01CD
    21e4:	70 91 ce 01 	lds	r23, 0x01CE
    21e8:	80 91 63 04 	lds	r24, 0x0463
    21ec:	90 91 64 04 	lds	r25, 0x0464
    21f0:	25 e6       	ldi	r18, 0x65	; 101
    21f2:	34 e0       	ldi	r19, 0x04	; 4
    21f4:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <_ZN7Sd2Card10writeBlockEmPKh>
    21f8:	88 23       	and	r24, r24
    21fa:	31 f1       	breq	.+76     	; 0x2248 <_ZN8SdVolume10cacheFlushEv+0x78>
    21fc:	40 91 5e 04 	lds	r20, 0x045E
    2200:	50 91 5f 04 	lds	r21, 0x045F
    2204:	60 91 60 04 	lds	r22, 0x0460
    2208:	70 91 61 04 	lds	r23, 0x0461
    220c:	41 15       	cp	r20, r1
    220e:	51 05       	cpc	r21, r1
    2210:	61 05       	cpc	r22, r1
    2212:	71 05       	cpc	r23, r1
    2214:	91 f0       	breq	.+36     	; 0x223a <_ZN8SdVolume10cacheFlushEv+0x6a>
    2216:	80 91 63 04 	lds	r24, 0x0463
    221a:	90 91 64 04 	lds	r25, 0x0464
    221e:	25 e6       	ldi	r18, 0x65	; 101
    2220:	34 e0       	ldi	r19, 0x04	; 4
    2222:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <_ZN7Sd2Card10writeBlockEmPKh>
    2226:	88 23       	and	r24, r24
    2228:	59 f0       	breq	.+22     	; 0x2240 <_ZN8SdVolume10cacheFlushEv+0x70>
    222a:	10 92 5e 04 	sts	0x045E, r1
    222e:	10 92 5f 04 	sts	0x045F, r1
    2232:	10 92 60 04 	sts	0x0460, r1
    2236:	10 92 61 04 	sts	0x0461, r1
    223a:	10 92 62 04 	sts	0x0462, r1
    223e:	02 c0       	rjmp	.+4      	; 0x2244 <_ZN8SdVolume10cacheFlushEv+0x74>
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	08 95       	ret
    2244:	81 e0       	ldi	r24, 0x01	; 1
    2246:	08 95       	ret
    2248:	80 e0       	ldi	r24, 0x00	; 0
    224a:	08 95       	ret

0000224c <_ZN8SdVolume13cacheRawBlockEmh>:
    224c:	cf 92       	push	r12
    224e:	df 92       	push	r13
    2250:	ef 92       	push	r14
    2252:	ff 92       	push	r15
    2254:	cf 93       	push	r28
    2256:	6b 01       	movw	r12, r22
    2258:	7c 01       	movw	r14, r24
    225a:	c4 2f       	mov	r28, r20
    225c:	80 91 cb 01 	lds	r24, 0x01CB
    2260:	90 91 cc 01 	lds	r25, 0x01CC
    2264:	a0 91 cd 01 	lds	r26, 0x01CD
    2268:	b0 91 ce 01 	lds	r27, 0x01CE
    226c:	8c 15       	cp	r24, r12
    226e:	9d 05       	cpc	r25, r13
    2270:	ae 05       	cpc	r26, r14
    2272:	bf 05       	cpc	r27, r15
    2274:	c1 f0       	breq	.+48     	; 0x22a6 <_ZN8SdVolume13cacheRawBlockEmh+0x5a>
    2276:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <_ZN8SdVolume10cacheFlushEv>
    227a:	88 23       	and	r24, r24
    227c:	d9 f0       	breq	.+54     	; 0x22b4 <_ZN8SdVolume13cacheRawBlockEmh+0x68>
    227e:	80 91 63 04 	lds	r24, 0x0463
    2282:	90 91 64 04 	lds	r25, 0x0464
    2286:	b7 01       	movw	r22, r14
    2288:	a6 01       	movw	r20, r12
    228a:	25 e6       	ldi	r18, 0x65	; 101
    228c:	34 e0       	ldi	r19, 0x04	; 4
    228e:	0e 94 ab 08 	call	0x1156	; 0x1156 <_ZN7Sd2Card9readBlockEmPh>
    2292:	88 23       	and	r24, r24
    2294:	79 f0       	breq	.+30     	; 0x22b4 <_ZN8SdVolume13cacheRawBlockEmh+0x68>
    2296:	c0 92 cb 01 	sts	0x01CB, r12
    229a:	d0 92 cc 01 	sts	0x01CC, r13
    229e:	e0 92 cd 01 	sts	0x01CD, r14
    22a2:	f0 92 ce 01 	sts	0x01CE, r15
    22a6:	80 91 62 04 	lds	r24, 0x0462
    22aa:	8c 2b       	or	r24, r28
    22ac:	80 93 62 04 	sts	0x0462, r24
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	01 c0       	rjmp	.+2      	; 0x22b6 <_ZN8SdVolume13cacheRawBlockEmh+0x6a>
    22b4:	80 e0       	ldi	r24, 0x00	; 0
    22b6:	cf 91       	pop	r28
    22b8:	ff 90       	pop	r15
    22ba:	ef 90       	pop	r14
    22bc:	df 90       	pop	r13
    22be:	cf 90       	pop	r12
    22c0:	08 95       	ret

000022c2 <_ZN8SdVolume14cacheZeroBlockEm>:
    22c2:	cf 92       	push	r12
    22c4:	df 92       	push	r13
    22c6:	ef 92       	push	r14
    22c8:	ff 92       	push	r15
    22ca:	6b 01       	movw	r12, r22
    22cc:	7c 01       	movw	r14, r24
    22ce:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <_ZN8SdVolume10cacheFlushEv>
    22d2:	88 23       	and	r24, r24
    22d4:	c9 f0       	breq	.+50     	; 0x2308 <_ZN8SdVolume14cacheZeroBlockEm+0x46>
    22d6:	e5 e6       	ldi	r30, 0x65	; 101
    22d8:	f4 e0       	ldi	r31, 0x04	; 4
    22da:	80 e0       	ldi	r24, 0x00	; 0
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	11 92       	st	Z+, r1
    22e0:	01 96       	adiw	r24, 0x01	; 1
    22e2:	22 e0       	ldi	r18, 0x02	; 2
    22e4:	80 30       	cpi	r24, 0x00	; 0
    22e6:	92 07       	cpc	r25, r18
    22e8:	d1 f7       	brne	.-12     	; 0x22de <_ZN8SdVolume14cacheZeroBlockEm+0x1c>
    22ea:	c0 92 cb 01 	sts	0x01CB, r12
    22ee:	d0 92 cc 01 	sts	0x01CC, r13
    22f2:	e0 92 cd 01 	sts	0x01CD, r14
    22f6:	f0 92 ce 01 	sts	0x01CE, r15
    22fa:	80 91 62 04 	lds	r24, 0x0462
    22fe:	81 60       	ori	r24, 0x01	; 1
    2300:	80 93 62 04 	sts	0x0462, r24
    2304:	81 e0       	ldi	r24, 0x01	; 1
    2306:	01 c0       	rjmp	.+2      	; 0x230a <_ZN8SdVolume14cacheZeroBlockEm+0x48>
    2308:	80 e0       	ldi	r24, 0x00	; 0
    230a:	ff 90       	pop	r15
    230c:	ef 90       	pop	r14
    230e:	df 90       	pop	r13
    2310:	cf 90       	pop	r12
    2312:	08 95       	ret

00002314 <_ZNK8SdVolume6fatGetEmPm>:
    2314:	af 92       	push	r10
    2316:	bf 92       	push	r11
    2318:	cf 92       	push	r12
    231a:	df 92       	push	r13
    231c:	ef 92       	push	r14
    231e:	ff 92       	push	r15
    2320:	0f 93       	push	r16
    2322:	1f 93       	push	r17
    2324:	cf 93       	push	r28
    2326:	df 93       	push	r29
    2328:	ec 01       	movw	r28, r24
    232a:	6a 01       	movw	r12, r20
    232c:	7b 01       	movw	r14, r22
    232e:	59 01       	movw	r10, r18
    2330:	89 85       	ldd	r24, Y+9	; 0x09
    2332:	9a 85       	ldd	r25, Y+10	; 0x0a
    2334:	ab 85       	ldd	r26, Y+11	; 0x0b
    2336:	bc 85       	ldd	r27, Y+12	; 0x0c
    2338:	01 96       	adiw	r24, 0x01	; 1
    233a:	a1 1d       	adc	r26, r1
    233c:	b1 1d       	adc	r27, r1
    233e:	84 17       	cp	r24, r20
    2340:	95 07       	cpc	r25, r21
    2342:	a6 07       	cpc	r26, r22
    2344:	b7 07       	cpc	r27, r23
    2346:	08 f4       	brcc	.+2      	; 0x234a <_ZNK8SdVolume6fatGetEmPm+0x36>
    2348:	5f c0       	rjmp	.+190    	; 0x2408 <_ZNK8SdVolume6fatGetEmPm+0xf4>
    234a:	4b 89       	ldd	r20, Y+19	; 0x13
    234c:	5c 89       	ldd	r21, Y+20	; 0x14
    234e:	6d 89       	ldd	r22, Y+21	; 0x15
    2350:	7e 89       	ldd	r23, Y+22	; 0x16
    2352:	8f 89       	ldd	r24, Y+23	; 0x17
    2354:	80 31       	cpi	r24, 0x10	; 16
    2356:	29 f4       	brne	.+10     	; 0x2362 <_ZNK8SdVolume6fatGetEmPm+0x4e>
    2358:	bb 27       	eor	r27, r27
    235a:	af 2d       	mov	r26, r15
    235c:	9e 2d       	mov	r25, r14
    235e:	8d 2d       	mov	r24, r13
    2360:	09 c0       	rjmp	.+18     	; 0x2374 <_ZNK8SdVolume6fatGetEmPm+0x60>
    2362:	d7 01       	movw	r26, r14
    2364:	c6 01       	movw	r24, r12
    2366:	37 e0       	ldi	r19, 0x07	; 7
    2368:	b6 95       	lsr	r27
    236a:	a7 95       	ror	r26
    236c:	97 95       	ror	r25
    236e:	87 95       	ror	r24
    2370:	3a 95       	dec	r19
    2372:	d1 f7       	brne	.-12     	; 0x2368 <_ZNK8SdVolume6fatGetEmPm+0x54>
    2374:	8c 01       	movw	r16, r24
    2376:	9d 01       	movw	r18, r26
    2378:	04 0f       	add	r16, r20
    237a:	15 1f       	adc	r17, r21
    237c:	26 1f       	adc	r18, r22
    237e:	37 1f       	adc	r19, r23
    2380:	c9 01       	movw	r24, r18
    2382:	b8 01       	movw	r22, r16
    2384:	00 91 cb 01 	lds	r16, 0x01CB
    2388:	10 91 cc 01 	lds	r17, 0x01CC
    238c:	20 91 cd 01 	lds	r18, 0x01CD
    2390:	30 91 ce 01 	lds	r19, 0x01CE
    2394:	60 17       	cp	r22, r16
    2396:	71 07       	cpc	r23, r17
    2398:	82 07       	cpc	r24, r18
    239a:	93 07       	cpc	r25, r19
    239c:	29 f0       	breq	.+10     	; 0x23a8 <_ZNK8SdVolume6fatGetEmPm+0x94>
    239e:	40 e0       	ldi	r20, 0x00	; 0
    23a0:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    23a4:	88 23       	and	r24, r24
    23a6:	81 f1       	breq	.+96     	; 0x2408 <_ZNK8SdVolume6fatGetEmPm+0xf4>
    23a8:	8f 89       	ldd	r24, Y+23	; 0x17
    23aa:	80 31       	cpi	r24, 0x10	; 16
    23ac:	91 f4       	brne	.+36     	; 0x23d2 <_ZNK8SdVolume6fatGetEmPm+0xbe>
    23ae:	8f ef       	ldi	r24, 0xFF	; 255
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	a0 e0       	ldi	r26, 0x00	; 0
    23b4:	b0 e0       	ldi	r27, 0x00	; 0
    23b6:	c8 22       	and	r12, r24
    23b8:	d9 22       	and	r13, r25
    23ba:	ea 22       	and	r14, r26
    23bc:	fb 22       	and	r15, r27
    23be:	f6 01       	movw	r30, r12
    23c0:	ee 0f       	add	r30, r30
    23c2:	ff 1f       	adc	r31, r31
    23c4:	eb 59       	subi	r30, 0x9B	; 155
    23c6:	fb 4f       	sbci	r31, 0xFB	; 251
    23c8:	80 81       	ld	r24, Z
    23ca:	91 81       	ldd	r25, Z+1	; 0x01
    23cc:	a0 e0       	ldi	r26, 0x00	; 0
    23ce:	b0 e0       	ldi	r27, 0x00	; 0
    23d0:	14 c0       	rjmp	.+40     	; 0x23fa <_ZNK8SdVolume6fatGetEmPm+0xe6>
    23d2:	0f e7       	ldi	r16, 0x7F	; 127
    23d4:	10 e0       	ldi	r17, 0x00	; 0
    23d6:	20 e0       	ldi	r18, 0x00	; 0
    23d8:	30 e0       	ldi	r19, 0x00	; 0
    23da:	c0 22       	and	r12, r16
    23dc:	d1 22       	and	r13, r17
    23de:	e2 22       	and	r14, r18
    23e0:	f3 22       	and	r15, r19
    23e2:	f6 01       	movw	r30, r12
    23e4:	ee 0f       	add	r30, r30
    23e6:	ff 1f       	adc	r31, r31
    23e8:	ee 0f       	add	r30, r30
    23ea:	ff 1f       	adc	r31, r31
    23ec:	eb 59       	subi	r30, 0x9B	; 155
    23ee:	fb 4f       	sbci	r31, 0xFB	; 251
    23f0:	80 81       	ld	r24, Z
    23f2:	91 81       	ldd	r25, Z+1	; 0x01
    23f4:	a2 81       	ldd	r26, Z+2	; 0x02
    23f6:	b3 81       	ldd	r27, Z+3	; 0x03
    23f8:	bf 70       	andi	r27, 0x0F	; 15
    23fa:	f5 01       	movw	r30, r10
    23fc:	80 83       	st	Z, r24
    23fe:	91 83       	std	Z+1, r25	; 0x01
    2400:	a2 83       	std	Z+2, r26	; 0x02
    2402:	b3 83       	std	Z+3, r27	; 0x03
    2404:	81 e0       	ldi	r24, 0x01	; 1
    2406:	01 c0       	rjmp	.+2      	; 0x240a <_ZNK8SdVolume6fatGetEmPm+0xf6>
    2408:	80 e0       	ldi	r24, 0x00	; 0
    240a:	df 91       	pop	r29
    240c:	cf 91       	pop	r28
    240e:	1f 91       	pop	r17
    2410:	0f 91       	pop	r16
    2412:	ff 90       	pop	r15
    2414:	ef 90       	pop	r14
    2416:	df 90       	pop	r13
    2418:	cf 90       	pop	r12
    241a:	bf 90       	pop	r11
    241c:	af 90       	pop	r10
    241e:	08 95       	ret

00002420 <_ZNK8SdVolume9chainSizeEmPm>:
    2420:	6f 92       	push	r6
    2422:	7f 92       	push	r7
    2424:	8f 92       	push	r8
    2426:	9f 92       	push	r9
    2428:	af 92       	push	r10
    242a:	bf 92       	push	r11
    242c:	cf 92       	push	r12
    242e:	df 92       	push	r13
    2430:	ef 92       	push	r14
    2432:	ff 92       	push	r15
    2434:	0f 93       	push	r16
    2436:	1f 93       	push	r17
    2438:	cf 93       	push	r28
    243a:	df 93       	push	r29
    243c:	00 d0       	rcall	.+0      	; 0x243e <_ZNK8SdVolume9chainSizeEmPm+0x1e>
    243e:	00 d0       	rcall	.+0      	; 0x2440 <_ZNK8SdVolume9chainSizeEmPm+0x20>
    2440:	cd b7       	in	r28, 0x3d	; 61
    2442:	de b7       	in	r29, 0x3e	; 62
    2444:	8c 01       	movw	r16, r24
    2446:	49 83       	std	Y+1, r20	; 0x01
    2448:	5a 83       	std	Y+2, r21	; 0x02
    244a:	6b 83       	std	Y+3, r22	; 0x03
    244c:	7c 83       	std	Y+4, r23	; 0x04
    244e:	39 01       	movw	r6, r18
    2450:	cc 24       	eor	r12, r12
    2452:	dd 24       	eor	r13, r13
    2454:	76 01       	movw	r14, r12
    2456:	81 2c       	mov	r8, r1
    2458:	f2 e0       	ldi	r31, 0x02	; 2
    245a:	9f 2e       	mov	r9, r31
    245c:	a1 2c       	mov	r10, r1
    245e:	b1 2c       	mov	r11, r1
    2460:	49 81       	ldd	r20, Y+1	; 0x01
    2462:	5a 81       	ldd	r21, Y+2	; 0x02
    2464:	6b 81       	ldd	r22, Y+3	; 0x03
    2466:	7c 81       	ldd	r23, Y+4	; 0x04
    2468:	c8 01       	movw	r24, r16
    246a:	9e 01       	movw	r18, r28
    246c:	2f 5f       	subi	r18, 0xFF	; 255
    246e:	3f 4f       	sbci	r19, 0xFF	; 255
    2470:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    2474:	88 23       	and	r24, r24
    2476:	59 f1       	breq	.+86     	; 0x24ce <_ZNK8SdVolume9chainSizeEmPm+0xae>
    2478:	d5 01       	movw	r26, r10
    247a:	c4 01       	movw	r24, r8
    247c:	f8 01       	movw	r30, r16
    247e:	05 84       	ldd	r0, Z+13	; 0x0d
    2480:	04 c0       	rjmp	.+8      	; 0x248a <_ZNK8SdVolume9chainSizeEmPm+0x6a>
    2482:	88 0f       	add	r24, r24
    2484:	99 1f       	adc	r25, r25
    2486:	aa 1f       	adc	r26, r26
    2488:	bb 1f       	adc	r27, r27
    248a:	0a 94       	dec	r0
    248c:	d2 f7       	brpl	.-12     	; 0x2482 <_ZNK8SdVolume9chainSizeEmPm+0x62>
    248e:	c8 0e       	add	r12, r24
    2490:	d9 1e       	adc	r13, r25
    2492:	ea 1e       	adc	r14, r26
    2494:	fb 1e       	adc	r15, r27
    2496:	49 81       	ldd	r20, Y+1	; 0x01
    2498:	5a 81       	ldd	r21, Y+2	; 0x02
    249a:	6b 81       	ldd	r22, Y+3	; 0x03
    249c:	7c 81       	ldd	r23, Y+4	; 0x04
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
  }
  uint8_t freeChain(uint32_t cluster);
  uint8_t isEOC(uint32_t cluster) const {
    return  cluster >= (fatType_ == 16 ? FAT16EOC_MIN : FAT32EOC_MIN);
    249e:	87 89       	ldd	r24, Z+23	; 0x17
    24a0:	80 31       	cpi	r24, 0x10	; 16
    24a2:	29 f4       	brne	.+10     	; 0x24ae <_ZNK8SdVolume9chainSizeEmPm+0x8e>
    24a4:	88 ef       	ldi	r24, 0xF8	; 248
    24a6:	9f ef       	ldi	r25, 0xFF	; 255
    24a8:	a0 e0       	ldi	r26, 0x00	; 0
    24aa:	b0 e0       	ldi	r27, 0x00	; 0
    24ac:	04 c0       	rjmp	.+8      	; 0x24b6 <_ZNK8SdVolume9chainSizeEmPm+0x96>
    24ae:	88 ef       	ldi	r24, 0xF8	; 248
    24b0:	9f ef       	ldi	r25, 0xFF	; 255
    24b2:	af ef       	ldi	r26, 0xFF	; 255
    24b4:	bf e0       	ldi	r27, 0x0F	; 15
    24b6:	48 17       	cp	r20, r24
    24b8:	59 07       	cpc	r21, r25
    24ba:	6a 07       	cpc	r22, r26
    24bc:	7b 07       	cpc	r23, r27
    24be:	80 f2       	brcs	.-96     	; 0x2460 <_ZNK8SdVolume9chainSizeEmPm+0x40>
    24c0:	f3 01       	movw	r30, r6
    24c2:	c0 82       	st	Z, r12
    24c4:	d1 82       	std	Z+1, r13	; 0x01
    24c6:	e2 82       	std	Z+2, r14	; 0x02
    24c8:	f3 82       	std	Z+3, r15	; 0x03
    24ca:	81 e0       	ldi	r24, 0x01	; 1
    24cc:	01 c0       	rjmp	.+2      	; 0x24d0 <_ZNK8SdVolume9chainSizeEmPm+0xb0>
    24ce:	80 e0       	ldi	r24, 0x00	; 0
    24d0:	0f 90       	pop	r0
    24d2:	0f 90       	pop	r0
    24d4:	0f 90       	pop	r0
    24d6:	0f 90       	pop	r0
    24d8:	df 91       	pop	r29
    24da:	cf 91       	pop	r28
    24dc:	1f 91       	pop	r17
    24de:	0f 91       	pop	r16
    24e0:	ff 90       	pop	r15
    24e2:	ef 90       	pop	r14
    24e4:	df 90       	pop	r13
    24e6:	cf 90       	pop	r12
    24e8:	bf 90       	pop	r11
    24ea:	af 90       	pop	r10
    24ec:	9f 90       	pop	r9
    24ee:	8f 90       	pop	r8
    24f0:	7f 90       	pop	r7
    24f2:	6f 90       	pop	r6
    24f4:	08 95       	ret

000024f6 <_ZN8SdVolume6fatPutEmm>:
    24f6:	4f 92       	push	r4
    24f8:	5f 92       	push	r5
    24fa:	6f 92       	push	r6
    24fc:	7f 92       	push	r7
    24fe:	8f 92       	push	r8
    2500:	9f 92       	push	r9
    2502:	af 92       	push	r10
    2504:	bf 92       	push	r11
    2506:	cf 92       	push	r12
    2508:	df 92       	push	r13
    250a:	ef 92       	push	r14
    250c:	ff 92       	push	r15
    250e:	0f 93       	push	r16
    2510:	1f 93       	push	r17
    2512:	cf 93       	push	r28
    2514:	df 93       	push	r29
    2516:	ec 01       	movw	r28, r24
    2518:	6a 01       	movw	r12, r20
    251a:	7b 01       	movw	r14, r22
    251c:	28 01       	movw	r4, r16
    251e:	39 01       	movw	r6, r18
    2520:	42 30       	cpi	r20, 0x02	; 2
    2522:	51 05       	cpc	r21, r1
    2524:	61 05       	cpc	r22, r1
    2526:	71 05       	cpc	r23, r1
    2528:	08 f4       	brcc	.+2      	; 0x252c <_ZN8SdVolume6fatPutEmm+0x36>
    252a:	7d c0       	rjmp	.+250    	; 0x2626 <_ZN8SdVolume6fatPutEmm+0x130>
    252c:	89 85       	ldd	r24, Y+9	; 0x09
    252e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2530:	ab 85       	ldd	r26, Y+11	; 0x0b
    2532:	bc 85       	ldd	r27, Y+12	; 0x0c
    2534:	01 96       	adiw	r24, 0x01	; 1
    2536:	a1 1d       	adc	r26, r1
    2538:	b1 1d       	adc	r27, r1
    253a:	84 17       	cp	r24, r20
    253c:	95 07       	cpc	r25, r21
    253e:	a6 07       	cpc	r26, r22
    2540:	b7 07       	cpc	r27, r23
    2542:	08 f4       	brcc	.+2      	; 0x2546 <_ZN8SdVolume6fatPutEmm+0x50>
    2544:	70 c0       	rjmp	.+224    	; 0x2626 <_ZN8SdVolume6fatPutEmm+0x130>
    2546:	4b 89       	ldd	r20, Y+19	; 0x13
    2548:	5c 89       	ldd	r21, Y+20	; 0x14
    254a:	6d 89       	ldd	r22, Y+21	; 0x15
    254c:	7e 89       	ldd	r23, Y+22	; 0x16
    254e:	8f 89       	ldd	r24, Y+23	; 0x17
    2550:	80 31       	cpi	r24, 0x10	; 16
    2552:	29 f4       	brne	.+10     	; 0x255e <_ZN8SdVolume6fatPutEmm+0x68>
    2554:	bb 27       	eor	r27, r27
    2556:	af 2d       	mov	r26, r15
    2558:	9e 2d       	mov	r25, r14
    255a:	8d 2d       	mov	r24, r13
    255c:	09 c0       	rjmp	.+18     	; 0x2570 <_ZN8SdVolume6fatPutEmm+0x7a>
    255e:	d7 01       	movw	r26, r14
    2560:	c6 01       	movw	r24, r12
    2562:	27 e0       	ldi	r18, 0x07	; 7
    2564:	b6 95       	lsr	r27
    2566:	a7 95       	ror	r26
    2568:	97 95       	ror	r25
    256a:	87 95       	ror	r24
    256c:	2a 95       	dec	r18
    256e:	d1 f7       	brne	.-12     	; 0x2564 <_ZN8SdVolume6fatPutEmm+0x6e>
    2570:	4c 01       	movw	r8, r24
    2572:	5d 01       	movw	r10, r26
    2574:	84 0e       	add	r8, r20
    2576:	95 1e       	adc	r9, r21
    2578:	a6 1e       	adc	r10, r22
    257a:	b7 1e       	adc	r11, r23
    257c:	80 91 cb 01 	lds	r24, 0x01CB
    2580:	90 91 cc 01 	lds	r25, 0x01CC
    2584:	a0 91 cd 01 	lds	r26, 0x01CD
    2588:	b0 91 ce 01 	lds	r27, 0x01CE
    258c:	88 16       	cp	r8, r24
    258e:	99 06       	cpc	r9, r25
    2590:	aa 06       	cpc	r10, r26
    2592:	bb 06       	cpc	r11, r27
    2594:	41 f0       	breq	.+16     	; 0x25a6 <_ZN8SdVolume6fatPutEmm+0xb0>
    2596:	c5 01       	movw	r24, r10
    2598:	b4 01       	movw	r22, r8
    259a:	40 e0       	ldi	r20, 0x00	; 0
    259c:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    25a0:	88 23       	and	r24, r24
    25a2:	09 f4       	brne	.+2      	; 0x25a6 <_ZN8SdVolume6fatPutEmm+0xb0>
    25a4:	40 c0       	rjmp	.+128    	; 0x2626 <_ZN8SdVolume6fatPutEmm+0x130>
    25a6:	8f 89       	ldd	r24, Y+23	; 0x17
    25a8:	80 31       	cpi	r24, 0x10	; 16
    25aa:	81 f4       	brne	.+32     	; 0x25cc <_ZN8SdVolume6fatPutEmm+0xd6>
    25ac:	8f ef       	ldi	r24, 0xFF	; 255
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	a0 e0       	ldi	r26, 0x00	; 0
    25b2:	b0 e0       	ldi	r27, 0x00	; 0
    25b4:	c8 22       	and	r12, r24
    25b6:	d9 22       	and	r13, r25
    25b8:	ea 22       	and	r14, r26
    25ba:	fb 22       	and	r15, r27
    25bc:	f6 01       	movw	r30, r12
    25be:	ee 0f       	add	r30, r30
    25c0:	ff 1f       	adc	r31, r31
    25c2:	eb 59       	subi	r30, 0x9B	; 155
    25c4:	fb 4f       	sbci	r31, 0xFB	; 251
    25c6:	51 82       	std	Z+1, r5	; 0x01
    25c8:	40 82       	st	Z, r4
    25ca:	13 c0       	rjmp	.+38     	; 0x25f2 <_ZN8SdVolume6fatPutEmm+0xfc>
    25cc:	8f e7       	ldi	r24, 0x7F	; 127
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	a0 e0       	ldi	r26, 0x00	; 0
    25d2:	b0 e0       	ldi	r27, 0x00	; 0
    25d4:	c8 22       	and	r12, r24
    25d6:	d9 22       	and	r13, r25
    25d8:	ea 22       	and	r14, r26
    25da:	fb 22       	and	r15, r27
    25dc:	f6 01       	movw	r30, r12
    25de:	ee 0f       	add	r30, r30
    25e0:	ff 1f       	adc	r31, r31
    25e2:	ee 0f       	add	r30, r30
    25e4:	ff 1f       	adc	r31, r31
    25e6:	eb 59       	subi	r30, 0x9B	; 155
    25e8:	fb 4f       	sbci	r31, 0xFB	; 251
    25ea:	40 82       	st	Z, r4
    25ec:	51 82       	std	Z+1, r5	; 0x01
    25ee:	62 82       	std	Z+2, r6	; 0x02
    25f0:	73 82       	std	Z+3, r7	; 0x03
           return dataStartBlock_ + ((cluster - 2) << clusterSizeShift_);}
  uint32_t blockNumber(uint32_t cluster, uint32_t position) const {
           return clusterStartBlock(cluster) + blockOfCluster(position);}
  static uint8_t cacheFlush(void);
  static uint8_t cacheRawBlock(uint32_t blockNumber, uint8_t action);
  static void cacheSetDirty(void) {cacheDirty_ |= CACHE_FOR_WRITE;}
    25f2:	80 91 62 04 	lds	r24, 0x0462
    25f6:	81 60       	ori	r24, 0x01	; 1
    25f8:	80 93 62 04 	sts	0x0462, r24
    25fc:	8a 89       	ldd	r24, Y+18	; 0x12
    25fe:	82 30       	cpi	r24, 0x02	; 2
    2600:	80 f0       	brcs	.+32     	; 0x2622 <_ZN8SdVolume6fatPutEmm+0x12c>
    2602:	8d 81       	ldd	r24, Y+5	; 0x05
    2604:	9e 81       	ldd	r25, Y+6	; 0x06
    2606:	af 81       	ldd	r26, Y+7	; 0x07
    2608:	b8 85       	ldd	r27, Y+8	; 0x08
    260a:	88 0d       	add	r24, r8
    260c:	99 1d       	adc	r25, r9
    260e:	aa 1d       	adc	r26, r10
    2610:	bb 1d       	adc	r27, r11
    2612:	80 93 5e 04 	sts	0x045E, r24
    2616:	90 93 5f 04 	sts	0x045F, r25
    261a:	a0 93 60 04 	sts	0x0460, r26
    261e:	b0 93 61 04 	sts	0x0461, r27
    2622:	81 e0       	ldi	r24, 0x01	; 1
    2624:	01 c0       	rjmp	.+2      	; 0x2628 <_ZN8SdVolume6fatPutEmm+0x132>
    2626:	80 e0       	ldi	r24, 0x00	; 0
    2628:	df 91       	pop	r29
    262a:	cf 91       	pop	r28
    262c:	1f 91       	pop	r17
    262e:	0f 91       	pop	r16
    2630:	ff 90       	pop	r15
    2632:	ef 90       	pop	r14
    2634:	df 90       	pop	r13
    2636:	cf 90       	pop	r12
    2638:	bf 90       	pop	r11
    263a:	af 90       	pop	r10
    263c:	9f 90       	pop	r9
    263e:	8f 90       	pop	r8
    2640:	7f 90       	pop	r7
    2642:	6f 90       	pop	r6
    2644:	5f 90       	pop	r5
    2646:	4f 90       	pop	r4
    2648:	08 95       	ret

0000264a <_ZN8SdVolume15allocContiguousEmPm>:
    264a:	2f 92       	push	r2
    264c:	3f 92       	push	r3
    264e:	4f 92       	push	r4
    2650:	5f 92       	push	r5
    2652:	6f 92       	push	r6
    2654:	7f 92       	push	r7
    2656:	8f 92       	push	r8
    2658:	9f 92       	push	r9
    265a:	af 92       	push	r10
    265c:	bf 92       	push	r11
    265e:	cf 92       	push	r12
    2660:	df 92       	push	r13
    2662:	ef 92       	push	r14
    2664:	ff 92       	push	r15
    2666:	0f 93       	push	r16
    2668:	1f 93       	push	r17
    266a:	cf 93       	push	r28
    266c:	df 93       	push	r29
    266e:	cd b7       	in	r28, 0x3d	; 61
    2670:	de b7       	in	r29, 0x3e	; 62
    2672:	2f 97       	sbiw	r28, 0x0f	; 15
    2674:	0f b6       	in	r0, 0x3f	; 63
    2676:	f8 94       	cli
    2678:	de bf       	out	0x3e, r29	; 62
    267a:	0f be       	out	0x3f, r0	; 63
    267c:	cd bf       	out	0x3d, r28	; 61
    267e:	1c 01       	movw	r2, r24
    2680:	4c 87       	std	Y+12, r20	; 0x0c
    2682:	5d 87       	std	Y+13, r21	; 0x0d
    2684:	6e 87       	std	Y+14, r22	; 0x0e
    2686:	7f 87       	std	Y+15, r23	; 0x0f
    2688:	3b 87       	std	Y+11, r19	; 0x0b
    268a:	2a 87       	std	Y+10, r18	; 0x0a
    268c:	d9 01       	movw	r26, r18
    268e:	4d 90       	ld	r4, X+
    2690:	5d 90       	ld	r5, X+
    2692:	6d 90       	ld	r6, X+
    2694:	7c 90       	ld	r7, X
    2696:	13 97       	sbiw	r26, 0x03	; 3
    2698:	41 14       	cp	r4, r1
    269a:	51 04       	cpc	r5, r1
    269c:	61 04       	cpc	r6, r1
    269e:	71 04       	cpc	r7, r1
    26a0:	31 f0       	breq	.+12     	; 0x26ae <_ZN8SdVolume15allocContiguousEmPm+0x64>
    26a2:	08 94       	sec
    26a4:	41 1c       	adc	r4, r1
    26a6:	51 1c       	adc	r5, r1
    26a8:	61 1c       	adc	r6, r1
    26aa:	71 1c       	adc	r7, r1
    26ac:	10 c0       	rjmp	.+32     	; 0x26ce <_ZN8SdVolume15allocContiguousEmPm+0x84>
    26ae:	fc 01       	movw	r30, r24
    26b0:	40 80       	ld	r4, Z
    26b2:	51 80       	ldd	r5, Z+1	; 0x01
    26b4:	62 80       	ldd	r6, Z+2	; 0x02
    26b6:	73 80       	ldd	r7, Z+3	; 0x03
    26b8:	f1 e0       	ldi	r31, 0x01	; 1
    26ba:	fd 83       	std	Y+5, r31	; 0x05
    26bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    26be:	3d 85       	ldd	r19, Y+13	; 0x0d
    26c0:	4e 85       	ldd	r20, Y+14	; 0x0e
    26c2:	5f 85       	ldd	r21, Y+15	; 0x0f
    26c4:	21 30       	cpi	r18, 0x01	; 1
    26c6:	31 05       	cpc	r19, r1
    26c8:	41 05       	cpc	r20, r1
    26ca:	51 05       	cpc	r21, r1
    26cc:	09 f0       	breq	.+2      	; 0x26d0 <_ZN8SdVolume15allocContiguousEmPm+0x86>
    26ce:	1d 82       	std	Y+5, r1	; 0x05
    26d0:	d1 01       	movw	r26, r2
    26d2:	19 96       	adiw	r26, 0x09	; 9
    26d4:	cd 90       	ld	r12, X+
    26d6:	dd 90       	ld	r13, X+
    26d8:	ed 90       	ld	r14, X+
    26da:	fc 90       	ld	r15, X
    26dc:	1c 97       	sbiw	r26, 0x0c	; 12
    26de:	08 94       	sec
    26e0:	c1 1c       	adc	r12, r1
    26e2:	d1 1c       	adc	r13, r1
    26e4:	e1 1c       	adc	r14, r1
    26e6:	f1 1c       	adc	r15, r1
    26e8:	53 01       	movw	r10, r6
    26ea:	42 01       	movw	r8, r4
    26ec:	1e 82       	std	Y+6, r1	; 0x06
    26ee:	1f 82       	std	Y+7, r1	; 0x07
    26f0:	18 86       	std	Y+8, r1	; 0x08
    26f2:	19 86       	std	Y+9, r1	; 0x09
    26f4:	f1 01       	movw	r30, r2
    26f6:	81 85       	ldd	r24, Z+9	; 0x09
    26f8:	92 85       	ldd	r25, Z+10	; 0x0a
    26fa:	a3 85       	ldd	r26, Z+11	; 0x0b
    26fc:	b4 85       	ldd	r27, Z+12	; 0x0c
    26fe:	2e 81       	ldd	r18, Y+6	; 0x06
    2700:	3f 81       	ldd	r19, Y+7	; 0x07
    2702:	48 85       	ldd	r20, Y+8	; 0x08
    2704:	59 85       	ldd	r21, Y+9	; 0x09
    2706:	28 17       	cp	r18, r24
    2708:	39 07       	cpc	r19, r25
    270a:	4a 07       	cpc	r20, r26
    270c:	5b 07       	cpc	r21, r27
    270e:	08 f0       	brcs	.+2      	; 0x2712 <_ZN8SdVolume15allocContiguousEmPm+0xc8>
    2710:	95 c0       	rjmp	.+298    	; 0x283c <_ZN8SdVolume15allocContiguousEmPm+0x1f2>
    2712:	c8 14       	cp	r12, r8
    2714:	d9 04       	cpc	r13, r9
    2716:	ea 04       	cpc	r14, r10
    2718:	fb 04       	cpc	r15, r11
    271a:	50 f4       	brcc	.+20     	; 0x2730 <_ZN8SdVolume15allocContiguousEmPm+0xe6>
    271c:	42 e0       	ldi	r20, 0x02	; 2
    271e:	84 2e       	mov	r8, r20
    2720:	91 2c       	mov	r9, r1
    2722:	a1 2c       	mov	r10, r1
    2724:	b1 2c       	mov	r11, r1
    2726:	52 e0       	ldi	r21, 0x02	; 2
    2728:	45 2e       	mov	r4, r21
    272a:	51 2c       	mov	r5, r1
    272c:	61 2c       	mov	r6, r1
    272e:	71 2c       	mov	r7, r1
    2730:	c1 01       	movw	r24, r2
    2732:	b5 01       	movw	r22, r10
    2734:	a4 01       	movw	r20, r8
    2736:	9e 01       	movw	r18, r28
    2738:	2f 5f       	subi	r18, 0xFF	; 255
    273a:	3f 4f       	sbci	r19, 0xFF	; 255
    273c:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    2740:	88 23       	and	r24, r24
    2742:	09 f4       	brne	.+2      	; 0x2746 <_ZN8SdVolume15allocContiguousEmPm+0xfc>
    2744:	7b c0       	rjmp	.+246    	; 0x283c <_ZN8SdVolume15allocContiguousEmPm+0x1f2>
    2746:	49 81       	ldd	r20, Y+1	; 0x01
    2748:	5a 81       	ldd	r21, Y+2	; 0x02
    274a:	6b 81       	ldd	r22, Y+3	; 0x03
    274c:	7c 81       	ldd	r23, Y+4	; 0x04
    274e:	d5 01       	movw	r26, r10
    2750:	c4 01       	movw	r24, r8
    2752:	01 96       	adiw	r24, 0x01	; 1
    2754:	a1 1d       	adc	r26, r1
    2756:	b1 1d       	adc	r27, r1
    2758:	41 15       	cp	r20, r1
    275a:	51 05       	cpc	r21, r1
    275c:	61 05       	cpc	r22, r1
    275e:	71 05       	cpc	r23, r1
    2760:	19 f0       	breq	.+6      	; 0x2768 <_ZN8SdVolume15allocContiguousEmPm+0x11e>
    2762:	2c 01       	movw	r4, r24
    2764:	3d 01       	movw	r6, r26
    2766:	0d c0       	rjmp	.+26     	; 0x2782 <_ZN8SdVolume15allocContiguousEmPm+0x138>
    2768:	84 19       	sub	r24, r4
    276a:	95 09       	sbc	r25, r5
    276c:	a6 09       	sbc	r26, r6
    276e:	b7 09       	sbc	r27, r7
    2770:	2c 85       	ldd	r18, Y+12	; 0x0c
    2772:	3d 85       	ldd	r19, Y+13	; 0x0d
    2774:	4e 85       	ldd	r20, Y+14	; 0x0e
    2776:	5f 85       	ldd	r21, Y+15	; 0x0f
    2778:	82 17       	cp	r24, r18
    277a:	93 07       	cpc	r25, r19
    277c:	a4 07       	cpc	r26, r20
    277e:	b5 07       	cpc	r27, r21
    2780:	89 f0       	breq	.+34     	; 0x27a4 <_ZN8SdVolume15allocContiguousEmPm+0x15a>
    2782:	8e 81       	ldd	r24, Y+6	; 0x06
    2784:	9f 81       	ldd	r25, Y+7	; 0x07
    2786:	a8 85       	ldd	r26, Y+8	; 0x08
    2788:	b9 85       	ldd	r27, Y+9	; 0x09
    278a:	01 96       	adiw	r24, 0x01	; 1
    278c:	a1 1d       	adc	r26, r1
    278e:	b1 1d       	adc	r27, r1
    2790:	8e 83       	std	Y+6, r24	; 0x06
    2792:	9f 83       	std	Y+7, r25	; 0x07
    2794:	a8 87       	std	Y+8, r26	; 0x08
    2796:	b9 87       	std	Y+9, r27	; 0x09
    2798:	08 94       	sec
    279a:	81 1c       	adc	r8, r1
    279c:	91 1c       	adc	r9, r1
    279e:	a1 1c       	adc	r10, r1
    27a0:	b1 1c       	adc	r11, r1
    27a2:	a8 cf       	rjmp	.-176    	; 0x26f4 <_ZN8SdVolume15allocContiguousEmPm+0xaa>
  static uint8_t cacheZeroBlock(uint32_t blockNumber);
  uint8_t chainSize(uint32_t beginCluster, uint32_t* size) const;
  uint8_t fatGet(uint32_t cluster, uint32_t* value) const;
  uint8_t fatPut(uint32_t cluster, uint32_t value);
  uint8_t fatPutEOC(uint32_t cluster) {
    return fatPut(cluster, 0x0FFFFFFF);
    27a4:	c1 01       	movw	r24, r2
    27a6:	a4 01       	movw	r20, r8
    27a8:	b5 01       	movw	r22, r10
    27aa:	0f ef       	ldi	r16, 0xFF	; 255
    27ac:	1f ef       	ldi	r17, 0xFF	; 255
    27ae:	2f ef       	ldi	r18, 0xFF	; 255
    27b0:	3f e0       	ldi	r19, 0x0F	; 15
    27b2:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_ZN8SdVolume6fatPutEmm>
    27b6:	88 23       	and	r24, r24
    27b8:	91 f4       	brne	.+36     	; 0x27de <_ZN8SdVolume15allocContiguousEmPm+0x194>
    27ba:	40 c0       	rjmp	.+128    	; 0x283c <_ZN8SdVolume15allocContiguousEmPm+0x1f2>
    27bc:	68 01       	movw	r12, r16
    27be:	79 01       	movw	r14, r18
    27c0:	08 94       	sec
    27c2:	c1 08       	sbc	r12, r1
    27c4:	d1 08       	sbc	r13, r1
    27c6:	e1 08       	sbc	r14, r1
    27c8:	f1 08       	sbc	r15, r1
    27ca:	c1 01       	movw	r24, r2
    27cc:	b7 01       	movw	r22, r14
    27ce:	a6 01       	movw	r20, r12
    27d0:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_ZN8SdVolume6fatPutEmm>
    27d4:	88 23       	and	r24, r24
    27d6:	91 f1       	breq	.+100    	; 0x283c <_ZN8SdVolume15allocContiguousEmPm+0x1f2>
    27d8:	97 01       	movw	r18, r14
    27da:	86 01       	movw	r16, r12
    27dc:	02 c0       	rjmp	.+4      	; 0x27e2 <_ZN8SdVolume15allocContiguousEmPm+0x198>
    27de:	95 01       	movw	r18, r10
    27e0:	84 01       	movw	r16, r8
    27e2:	40 16       	cp	r4, r16
    27e4:	51 06       	cpc	r5, r17
    27e6:	62 06       	cpc	r6, r18
    27e8:	73 06       	cpc	r7, r19
    27ea:	40 f3       	brcs	.-48     	; 0x27bc <_ZN8SdVolume15allocContiguousEmPm+0x172>
    27ec:	aa 85       	ldd	r26, Y+10	; 0x0a
    27ee:	bb 85       	ldd	r27, Y+11	; 0x0b
    27f0:	4d 91       	ld	r20, X+
    27f2:	5d 91       	ld	r21, X+
    27f4:	6d 91       	ld	r22, X+
    27f6:	7c 91       	ld	r23, X
    27f8:	13 97       	sbiw	r26, 0x03	; 3
    27fa:	41 15       	cp	r20, r1
    27fc:	51 05       	cpc	r21, r1
    27fe:	61 05       	cpc	r22, r1
    2800:	71 05       	cpc	r23, r1
    2802:	39 f0       	breq	.+14     	; 0x2812 <_ZN8SdVolume15allocContiguousEmPm+0x1c8>
    2804:	c1 01       	movw	r24, r2
    2806:	93 01       	movw	r18, r6
    2808:	82 01       	movw	r16, r4
    280a:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_ZN8SdVolume6fatPutEmm>
    280e:	88 23       	and	r24, r24
    2810:	a9 f0       	breq	.+42     	; 0x283c <_ZN8SdVolume15allocContiguousEmPm+0x1f2>
    2812:	ea 85       	ldd	r30, Y+10	; 0x0a
    2814:	fb 85       	ldd	r31, Y+11	; 0x0b
    2816:	40 82       	st	Z, r4
    2818:	51 82       	std	Z+1, r5	; 0x01
    281a:	62 82       	std	Z+2, r6	; 0x02
    281c:	73 82       	std	Z+3, r7	; 0x03
    281e:	fd 81       	ldd	r31, Y+5	; 0x05
    2820:	ff 23       	and	r31, r31
    2822:	71 f0       	breq	.+28     	; 0x2840 <_ZN8SdVolume15allocContiguousEmPm+0x1f6>
    2824:	08 94       	sec
    2826:	41 1c       	adc	r4, r1
    2828:	51 1c       	adc	r5, r1
    282a:	61 1c       	adc	r6, r1
    282c:	71 1c       	adc	r7, r1
    282e:	d1 01       	movw	r26, r2
    2830:	4d 92       	st	X+, r4
    2832:	5d 92       	st	X+, r5
    2834:	6d 92       	st	X+, r6
    2836:	7c 92       	st	X, r7
    2838:	13 97       	sbiw	r26, 0x03	; 3
    283a:	02 c0       	rjmp	.+4      	; 0x2840 <_ZN8SdVolume15allocContiguousEmPm+0x1f6>
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	01 c0       	rjmp	.+2      	; 0x2842 <_ZN8SdVolume15allocContiguousEmPm+0x1f8>
    2840:	81 e0       	ldi	r24, 0x01	; 1
    2842:	2f 96       	adiw	r28, 0x0f	; 15
    2844:	0f b6       	in	r0, 0x3f	; 63
    2846:	f8 94       	cli
    2848:	de bf       	out	0x3e, r29	; 62
    284a:	0f be       	out	0x3f, r0	; 63
    284c:	cd bf       	out	0x3d, r28	; 61
    284e:	df 91       	pop	r29
    2850:	cf 91       	pop	r28
    2852:	1f 91       	pop	r17
    2854:	0f 91       	pop	r16
    2856:	ff 90       	pop	r15
    2858:	ef 90       	pop	r14
    285a:	df 90       	pop	r13
    285c:	cf 90       	pop	r12
    285e:	bf 90       	pop	r11
    2860:	af 90       	pop	r10
    2862:	9f 90       	pop	r9
    2864:	8f 90       	pop	r8
    2866:	7f 90       	pop	r7
    2868:	6f 90       	pop	r6
    286a:	5f 90       	pop	r5
    286c:	4f 90       	pop	r4
    286e:	3f 90       	pop	r3
    2870:	2f 90       	pop	r2
    2872:	08 95       	ret

00002874 <_ZN8SdVolume9freeChainEm>:
    2874:	af 92       	push	r10
    2876:	bf 92       	push	r11
    2878:	cf 92       	push	r12
    287a:	df 92       	push	r13
    287c:	ef 92       	push	r14
    287e:	ff 92       	push	r15
    2880:	0f 93       	push	r16
    2882:	1f 93       	push	r17
    2884:	cf 93       	push	r28
    2886:	df 93       	push	r29
    2888:	00 d0       	rcall	.+0      	; 0x288a <_ZN8SdVolume9freeChainEm+0x16>
    288a:	00 d0       	rcall	.+0      	; 0x288c <_ZN8SdVolume9freeChainEm+0x18>
    288c:	cd b7       	in	r28, 0x3d	; 61
    288e:	de b7       	in	r29, 0x3e	; 62
    2890:	5c 01       	movw	r10, r24
    2892:	6a 01       	movw	r12, r20
    2894:	7b 01       	movw	r14, r22
    2896:	82 e0       	ldi	r24, 0x02	; 2
    2898:	90 e0       	ldi	r25, 0x00	; 0
    289a:	a0 e0       	ldi	r26, 0x00	; 0
    289c:	b0 e0       	ldi	r27, 0x00	; 0
    289e:	f5 01       	movw	r30, r10
    28a0:	80 83       	st	Z, r24
    28a2:	91 83       	std	Z+1, r25	; 0x01
    28a4:	a2 83       	std	Z+2, r26	; 0x02
    28a6:	b3 83       	std	Z+3, r27	; 0x03
    28a8:	c5 01       	movw	r24, r10
    28aa:	b7 01       	movw	r22, r14
    28ac:	a6 01       	movw	r20, r12
    28ae:	9e 01       	movw	r18, r28
    28b0:	2f 5f       	subi	r18, 0xFF	; 255
    28b2:	3f 4f       	sbci	r19, 0xFF	; 255
    28b4:	0e 94 8a 11 	call	0x2314	; 0x2314 <_ZNK8SdVolume6fatGetEmPm>
    28b8:	88 23       	and	r24, r24
    28ba:	11 f1       	breq	.+68     	; 0x2900 <_ZN8SdVolume9freeChainEm+0x8c>
    28bc:	c5 01       	movw	r24, r10
    28be:	b7 01       	movw	r22, r14
    28c0:	a6 01       	movw	r20, r12
    28c2:	00 e0       	ldi	r16, 0x00	; 0
    28c4:	10 e0       	ldi	r17, 0x00	; 0
    28c6:	98 01       	movw	r18, r16
    28c8:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_ZN8SdVolume6fatPutEmm>
    28cc:	88 23       	and	r24, r24
    28ce:	c1 f0       	breq	.+48     	; 0x2900 <_ZN8SdVolume9freeChainEm+0x8c>
    28d0:	c9 80       	ldd	r12, Y+1	; 0x01
    28d2:	da 80       	ldd	r13, Y+2	; 0x02
    28d4:	eb 80       	ldd	r14, Y+3	; 0x03
    28d6:	fc 80       	ldd	r15, Y+4	; 0x04
  }
  uint8_t freeChain(uint32_t cluster);
  uint8_t isEOC(uint32_t cluster) const {
    return  cluster >= (fatType_ == 16 ? FAT16EOC_MIN : FAT32EOC_MIN);
    28d8:	f5 01       	movw	r30, r10
    28da:	87 89       	ldd	r24, Z+23	; 0x17
    28dc:	80 31       	cpi	r24, 0x10	; 16
    28de:	29 f4       	brne	.+10     	; 0x28ea <_ZN8SdVolume9freeChainEm+0x76>
    28e0:	88 ef       	ldi	r24, 0xF8	; 248
    28e2:	9f ef       	ldi	r25, 0xFF	; 255
    28e4:	a0 e0       	ldi	r26, 0x00	; 0
    28e6:	b0 e0       	ldi	r27, 0x00	; 0
    28e8:	04 c0       	rjmp	.+8      	; 0x28f2 <_ZN8SdVolume9freeChainEm+0x7e>
    28ea:	88 ef       	ldi	r24, 0xF8	; 248
    28ec:	9f ef       	ldi	r25, 0xFF	; 255
    28ee:	af ef       	ldi	r26, 0xFF	; 255
    28f0:	bf e0       	ldi	r27, 0x0F	; 15
    28f2:	c8 16       	cp	r12, r24
    28f4:	d9 06       	cpc	r13, r25
    28f6:	ea 06       	cpc	r14, r26
    28f8:	fb 06       	cpc	r15, r27
    28fa:	b0 f2       	brcs	.-84     	; 0x28a8 <_ZN8SdVolume9freeChainEm+0x34>
    28fc:	81 e0       	ldi	r24, 0x01	; 1
    28fe:	01 c0       	rjmp	.+2      	; 0x2902 <_ZN8SdVolume9freeChainEm+0x8e>
    2900:	80 e0       	ldi	r24, 0x00	; 0
    2902:	0f 90       	pop	r0
    2904:	0f 90       	pop	r0
    2906:	0f 90       	pop	r0
    2908:	0f 90       	pop	r0
    290a:	df 91       	pop	r29
    290c:	cf 91       	pop	r28
    290e:	1f 91       	pop	r17
    2910:	0f 91       	pop	r16
    2912:	ff 90       	pop	r15
    2914:	ef 90       	pop	r14
    2916:	df 90       	pop	r13
    2918:	cf 90       	pop	r12
    291a:	bf 90       	pop	r11
    291c:	af 90       	pop	r10
    291e:	08 95       	ret

00002920 <_ZN8SdVolume4initEP7Sd2Cardh>:
    2920:	6f 92       	push	r6
    2922:	7f 92       	push	r7
    2924:	8f 92       	push	r8
    2926:	9f 92       	push	r9
    2928:	af 92       	push	r10
    292a:	bf 92       	push	r11
    292c:	cf 92       	push	r12
    292e:	df 92       	push	r13
    2930:	ef 92       	push	r14
    2932:	ff 92       	push	r15
    2934:	1f 93       	push	r17
    2936:	cf 93       	push	r28
    2938:	df 93       	push	r29
    293a:	ec 01       	movw	r28, r24
    293c:	14 2f       	mov	r17, r20
    293e:	70 93 64 04 	sts	0x0464, r23
    2942:	60 93 63 04 	sts	0x0463, r22
    2946:	44 23       	and	r20, r20
    2948:	81 f1       	breq	.+96     	; 0x29aa <_ZN8SdVolume4initEP7Sd2Cardh+0x8a>
    294a:	45 30       	cpi	r20, 0x05	; 5
    294c:	08 f0       	brcs	.+2      	; 0x2950 <_ZN8SdVolume4initEP7Sd2Cardh+0x30>
    294e:	05 c1       	rjmp	.+522    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    2950:	60 e0       	ldi	r22, 0x00	; 0
    2952:	70 e0       	ldi	r23, 0x00	; 0
    2954:	cb 01       	movw	r24, r22
    2956:	40 e0       	ldi	r20, 0x00	; 0
    2958:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    295c:	88 23       	and	r24, r24
    295e:	09 f4       	brne	.+2      	; 0x2962 <_ZN8SdVolume4initEP7Sd2Cardh+0x42>
    2960:	fc c0       	rjmp	.+504    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    2962:	e1 2f       	mov	r30, r17
    2964:	f0 e0       	ldi	r31, 0x00	; 0
    2966:	a4 e0       	ldi	r26, 0x04	; 4
    2968:	ee 0f       	add	r30, r30
    296a:	ff 1f       	adc	r31, r31
    296c:	aa 95       	dec	r26
    296e:	e1 f7       	brne	.-8      	; 0x2968 <_ZN8SdVolume4initEP7Sd2Cardh+0x48>
    2970:	ed 5e       	subi	r30, 0xED	; 237
    2972:	f9 4f       	sbci	r31, 0xF9	; 249
    2974:	80 81       	ld	r24, Z
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	8f 77       	andi	r24, 0x7F	; 127
    297a:	90 70       	andi	r25, 0x00	; 0
    297c:	00 97       	sbiw	r24, 0x00	; 0
    297e:	09 f0       	breq	.+2      	; 0x2982 <_ZN8SdVolume4initEP7Sd2Cardh+0x62>
    2980:	ec c0       	rjmp	.+472    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    2982:	84 85       	ldd	r24, Z+12	; 0x0c
    2984:	95 85       	ldd	r25, Z+13	; 0x0d
    2986:	a6 85       	ldd	r26, Z+14	; 0x0e
    2988:	b7 85       	ldd	r27, Z+15	; 0x0f
    298a:	84 36       	cpi	r24, 0x64	; 100
    298c:	91 05       	cpc	r25, r1
    298e:	a1 05       	cpc	r26, r1
    2990:	b1 05       	cpc	r27, r1
    2992:	08 f4       	brcc	.+2      	; 0x2996 <_ZN8SdVolume4initEP7Sd2Cardh+0x76>
    2994:	e2 c0       	rjmp	.+452    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    2996:	80 84       	ldd	r8, Z+8	; 0x08
    2998:	91 84       	ldd	r9, Z+9	; 0x09
    299a:	a2 84       	ldd	r10, Z+10	; 0x0a
    299c:	b3 84       	ldd	r11, Z+11	; 0x0b
    299e:	81 14       	cp	r8, r1
    29a0:	91 04       	cpc	r9, r1
    29a2:	a1 04       	cpc	r10, r1
    29a4:	b1 04       	cpc	r11, r1
    29a6:	21 f4       	brne	.+8      	; 0x29b0 <_ZN8SdVolume4initEP7Sd2Cardh+0x90>
    29a8:	d8 c0       	rjmp	.+432    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29aa:	88 24       	eor	r8, r8
    29ac:	99 24       	eor	r9, r9
    29ae:	54 01       	movw	r10, r8
    29b0:	c5 01       	movw	r24, r10
    29b2:	b4 01       	movw	r22, r8
    29b4:	40 e0       	ldi	r20, 0x00	; 0
    29b6:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN8SdVolume13cacheRawBlockEmh>
    29ba:	88 23       	and	r24, r24
    29bc:	09 f4       	brne	.+2      	; 0x29c0 <_ZN8SdVolume4initEP7Sd2Cardh+0xa0>
    29be:	cd c0       	rjmp	.+410    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29c0:	80 91 70 04 	lds	r24, 0x0470
    29c4:	90 91 71 04 	lds	r25, 0x0471
    29c8:	22 e0       	ldi	r18, 0x02	; 2
    29ca:	80 30       	cpi	r24, 0x00	; 0
    29cc:	92 07       	cpc	r25, r18
    29ce:	09 f0       	breq	.+2      	; 0x29d2 <_ZN8SdVolume4initEP7Sd2Cardh+0xb2>
    29d0:	c4 c0       	rjmp	.+392    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29d2:	30 91 75 04 	lds	r19, 0x0475
    29d6:	33 23       	and	r19, r19
    29d8:	09 f4       	brne	.+2      	; 0x29dc <_ZN8SdVolume4initEP7Sd2Cardh+0xbc>
    29da:	bf c0       	rjmp	.+382    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29dc:	80 91 73 04 	lds	r24, 0x0473
    29e0:	90 91 74 04 	lds	r25, 0x0474
    29e4:	00 97       	sbiw	r24, 0x00	; 0
    29e6:	09 f4       	brne	.+2      	; 0x29ea <_ZN8SdVolume4initEP7Sd2Cardh+0xca>
    29e8:	b8 c0       	rjmp	.+368    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29ea:	20 91 72 04 	lds	r18, 0x0472
    29ee:	22 23       	and	r18, r18
    29f0:	09 f4       	brne	.+2      	; 0x29f4 <_ZN8SdVolume4initEP7Sd2Cardh+0xd4>
    29f2:	b3 c0       	rjmp	.+358    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    29f4:	3a 8b       	std	Y+18, r19	; 0x12
    29f6:	2c 83       	std	Y+4, r18	; 0x04
    29f8:	1d 86       	std	Y+13, r1	; 0x0d
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	41 e0       	ldi	r20, 0x01	; 1
    29fe:	50 e0       	ldi	r21, 0x00	; 0
    2a00:	06 c0       	rjmp	.+12     	; 0x2a0e <_ZN8SdVolume4initEP7Sd2Cardh+0xee>
    2a02:	81 2f       	mov	r24, r17
    2a04:	8f 5f       	subi	r24, 0xFF	; 255
    2a06:	8d 87       	std	Y+13, r24	; 0x0d
    2a08:	18 30       	cpi	r17, 0x08	; 8
    2a0a:	08 f0       	brcs	.+2      	; 0x2a0e <_ZN8SdVolume4initEP7Sd2Cardh+0xee>
    2a0c:	a6 c0       	rjmp	.+332    	; 0x2b5a <_ZN8SdVolume4initEP7Sd2Cardh+0x23a>
    2a0e:	1d 85       	ldd	r17, Y+13	; 0x0d
    2a10:	ca 01       	movw	r24, r20
    2a12:	01 2e       	mov	r0, r17
    2a14:	02 c0       	rjmp	.+4      	; 0x2a1a <_ZN8SdVolume4initEP7Sd2Cardh+0xfa>
    2a16:	88 0f       	add	r24, r24
    2a18:	99 1f       	adc	r25, r25
    2a1a:	0a 94       	dec	r0
    2a1c:	e2 f7       	brpl	.-8      	; 0x2a16 <_ZN8SdVolume4initEP7Sd2Cardh+0xf6>
    2a1e:	28 17       	cp	r18, r24
    2a20:	39 07       	cpc	r19, r25
    2a22:	79 f7       	brne	.-34     	; 0x2a02 <_ZN8SdVolume4initEP7Sd2Cardh+0xe2>
    2a24:	80 91 7b 04 	lds	r24, 0x047B
    2a28:	90 91 7c 04 	lds	r25, 0x047C
    2a2c:	00 97       	sbiw	r24, 0x00	; 0
    2a2e:	19 f0       	breq	.+6      	; 0x2a36 <_ZN8SdVolume4initEP7Sd2Cardh+0x116>
    2a30:	a0 e0       	ldi	r26, 0x00	; 0
    2a32:	b0 e0       	ldi	r27, 0x00	; 0
    2a34:	08 c0       	rjmp	.+16     	; 0x2a46 <_ZN8SdVolume4initEP7Sd2Cardh+0x126>
    2a36:	80 91 89 04 	lds	r24, 0x0489
    2a3a:	90 91 8a 04 	lds	r25, 0x048A
    2a3e:	a0 91 8b 04 	lds	r26, 0x048B
    2a42:	b0 91 8c 04 	lds	r27, 0x048C
    2a46:	8d 83       	std	Y+5, r24	; 0x05
    2a48:	9e 83       	std	Y+6, r25	; 0x06
    2a4a:	af 83       	std	Y+7, r26	; 0x07
    2a4c:	b8 87       	std	Y+8, r27	; 0x08
    2a4e:	c0 90 73 04 	lds	r12, 0x0473
    2a52:	d0 90 74 04 	lds	r13, 0x0474
    2a56:	ee 24       	eor	r14, r14
    2a58:	ff 24       	eor	r15, r15
    2a5a:	c8 0c       	add	r12, r8
    2a5c:	d9 1c       	adc	r13, r9
    2a5e:	ea 1c       	adc	r14, r10
    2a60:	fb 1c       	adc	r15, r11
    2a62:	cb 8a       	std	Y+19, r12	; 0x13
    2a64:	dc 8a       	std	Y+20, r13	; 0x14
    2a66:	ed 8a       	std	Y+21, r14	; 0x15
    2a68:	fe 8a       	std	Y+22, r15	; 0x16
    2a6a:	60 90 76 04 	lds	r6, 0x0476
    2a6e:	70 90 77 04 	lds	r7, 0x0477
    2a72:	79 8e       	std	Y+25, r7	; 0x19
    2a74:	68 8e       	std	Y+24, r6	; 0x18
    2a76:	20 91 75 04 	lds	r18, 0x0475
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	40 e0       	ldi	r20, 0x00	; 0
    2a7e:	50 e0       	ldi	r21, 0x00	; 0
    2a80:	bc 01       	movw	r22, r24
    2a82:	cd 01       	movw	r24, r26
    2a84:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__mulsi3>
    2a88:	dc 01       	movw	r26, r24
    2a8a:	cb 01       	movw	r24, r22
    2a8c:	8c 0d       	add	r24, r12
    2a8e:	9d 1d       	adc	r25, r13
    2a90:	ae 1d       	adc	r26, r14
    2a92:	bf 1d       	adc	r27, r15
    2a94:	8a 8f       	std	Y+26, r24	; 0x1a
    2a96:	9b 8f       	std	Y+27, r25	; 0x1b
    2a98:	ac 8f       	std	Y+28, r26	; 0x1c
    2a9a:	bd 8f       	std	Y+29, r27	; 0x1d
    2a9c:	a3 01       	movw	r20, r6
    2a9e:	e5 e0       	ldi	r30, 0x05	; 5
    2aa0:	44 0f       	add	r20, r20
    2aa2:	55 1f       	adc	r21, r21
    2aa4:	ea 95       	dec	r30
    2aa6:	e1 f7       	brne	.-8      	; 0x2aa0 <_ZN8SdVolume4initEP7Sd2Cardh+0x180>
    2aa8:	41 50       	subi	r20, 0x01	; 1
    2aaa:	5e 4f       	sbci	r21, 0xFE	; 254
    2aac:	45 2f       	mov	r20, r21
    2aae:	55 27       	eor	r21, r21
    2ab0:	46 95       	lsr	r20
    2ab2:	60 e0       	ldi	r22, 0x00	; 0
    2ab4:	70 e0       	ldi	r23, 0x00	; 0
    2ab6:	48 0f       	add	r20, r24
    2ab8:	59 1f       	adc	r21, r25
    2aba:	6a 1f       	adc	r22, r26
    2abc:	7b 1f       	adc	r23, r27
    2abe:	4e 87       	std	Y+14, r20	; 0x0e
    2ac0:	5f 87       	std	Y+15, r21	; 0x0f
    2ac2:	68 8b       	std	Y+16, r22	; 0x10
    2ac4:	79 8b       	std	Y+17, r23	; 0x11
    2ac6:	80 91 78 04 	lds	r24, 0x0478
    2aca:	90 91 79 04 	lds	r25, 0x0479
    2ace:	00 97       	sbiw	r24, 0x00	; 0
    2ad0:	19 f0       	breq	.+6      	; 0x2ad8 <_ZN8SdVolume4initEP7Sd2Cardh+0x1b8>
    2ad2:	a0 e0       	ldi	r26, 0x00	; 0
    2ad4:	b0 e0       	ldi	r27, 0x00	; 0
    2ad6:	08 c0       	rjmp	.+16     	; 0x2ae8 <_ZN8SdVolume4initEP7Sd2Cardh+0x1c8>
    2ad8:	80 91 85 04 	lds	r24, 0x0485
    2adc:	90 91 86 04 	lds	r25, 0x0486
    2ae0:	a0 91 87 04 	lds	r26, 0x0487
    2ae4:	b0 91 88 04 	lds	r27, 0x0488
    2ae8:	84 1a       	sub	r8, r20
    2aea:	95 0a       	sbc	r9, r21
    2aec:	a6 0a       	sbc	r10, r22
    2aee:	b7 0a       	sbc	r11, r23
    2af0:	88 0e       	add	r8, r24
    2af2:	99 1e       	adc	r9, r25
    2af4:	aa 1e       	adc	r10, r26
    2af6:	bb 1e       	adc	r11, r27
    2af8:	04 c0       	rjmp	.+8      	; 0x2b02 <_ZN8SdVolume4initEP7Sd2Cardh+0x1e2>
    2afa:	b6 94       	lsr	r11
    2afc:	a7 94       	ror	r10
    2afe:	97 94       	ror	r9
    2b00:	87 94       	ror	r8
    2b02:	1a 95       	dec	r17
    2b04:	d2 f7       	brpl	.-12     	; 0x2afa <_ZN8SdVolume4initEP7Sd2Cardh+0x1da>
    2b06:	89 86       	std	Y+9, r8	; 0x09
    2b08:	9a 86       	std	Y+10, r9	; 0x0a
    2b0a:	ab 86       	std	Y+11, r10	; 0x0b
    2b0c:	bc 86       	std	Y+12, r11	; 0x0c
    2b0e:	85 ef       	ldi	r24, 0xF5	; 245
    2b10:	88 16       	cp	r8, r24
    2b12:	8f e0       	ldi	r24, 0x0F	; 15
    2b14:	98 06       	cpc	r9, r24
    2b16:	80 e0       	ldi	r24, 0x00	; 0
    2b18:	a8 06       	cpc	r10, r24
    2b1a:	80 e0       	ldi	r24, 0x00	; 0
    2b1c:	b8 06       	cpc	r11, r24
    2b1e:	10 f4       	brcc	.+4      	; 0x2b24 <_ZN8SdVolume4initEP7Sd2Cardh+0x204>
    2b20:	8c e0       	ldi	r24, 0x0C	; 12
    2b22:	18 c0       	rjmp	.+48     	; 0x2b54 <_ZN8SdVolume4initEP7Sd2Cardh+0x234>
    2b24:	25 ef       	ldi	r18, 0xF5	; 245
    2b26:	82 16       	cp	r8, r18
    2b28:	2f ef       	ldi	r18, 0xFF	; 255
    2b2a:	92 06       	cpc	r9, r18
    2b2c:	20 e0       	ldi	r18, 0x00	; 0
    2b2e:	a2 06       	cpc	r10, r18
    2b30:	20 e0       	ldi	r18, 0x00	; 0
    2b32:	b2 06       	cpc	r11, r18
    2b34:	10 f4       	brcc	.+4      	; 0x2b3a <_ZN8SdVolume4initEP7Sd2Cardh+0x21a>
    2b36:	80 e1       	ldi	r24, 0x10	; 16
    2b38:	0d c0       	rjmp	.+26     	; 0x2b54 <_ZN8SdVolume4initEP7Sd2Cardh+0x234>
    2b3a:	80 91 91 04 	lds	r24, 0x0491
    2b3e:	90 91 92 04 	lds	r25, 0x0492
    2b42:	a0 91 93 04 	lds	r26, 0x0493
    2b46:	b0 91 94 04 	lds	r27, 0x0494
    2b4a:	8a 8f       	std	Y+26, r24	; 0x1a
    2b4c:	9b 8f       	std	Y+27, r25	; 0x1b
    2b4e:	ac 8f       	std	Y+28, r26	; 0x1c
    2b50:	bd 8f       	std	Y+29, r27	; 0x1d
    2b52:	80 e2       	ldi	r24, 0x20	; 32
    2b54:	8f 8b       	std	Y+23, r24	; 0x17
    2b56:	81 e0       	ldi	r24, 0x01	; 1
    2b58:	01 c0       	rjmp	.+2      	; 0x2b5c <_ZN8SdVolume4initEP7Sd2Cardh+0x23c>
    2b5a:	80 e0       	ldi	r24, 0x00	; 0
    2b5c:	df 91       	pop	r29
    2b5e:	cf 91       	pop	r28
    2b60:	1f 91       	pop	r17
    2b62:	ff 90       	pop	r15
    2b64:	ef 90       	pop	r14
    2b66:	df 90       	pop	r13
    2b68:	cf 90       	pop	r12
    2b6a:	bf 90       	pop	r11
    2b6c:	af 90       	pop	r10
    2b6e:	9f 90       	pop	r9
    2b70:	8f 90       	pop	r8
    2b72:	7f 90       	pop	r7
    2b74:	6f 90       	pop	r6
    2b76:	08 95       	ret

00002b78 <_ZN11TimeBsdCode5pulseElil>:
    2b78:	7f 92       	push	r7
    2b7a:	8f 92       	push	r8
    2b7c:	9f 92       	push	r9
    2b7e:	af 92       	push	r10
    2b80:	bf 92       	push	r11
    2b82:	cf 92       	push	r12
    2b84:	df 92       	push	r13
    2b86:	ef 92       	push	r14
    2b88:	ff 92       	push	r15
    2b8a:	0f 93       	push	r16
    2b8c:	1f 93       	push	r17
    2b8e:	cf 93       	push	r28
    2b90:	df 93       	push	r29
    2b92:	4a 01       	movw	r8, r20
    2b94:	5b 01       	movw	r10, r22
    2b96:	72 2e       	mov	r7, r18
    2b98:	a8 01       	movw	r20, r16
    2b9a:	97 01       	movw	r18, r14
    2b9c:	60 e4       	ldi	r22, 0x40	; 64
    2b9e:	72 e4       	ldi	r23, 0x42	; 66
    2ba0:	8f e0       	ldi	r24, 0x0F	; 15
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	0e 94 73 1d 	call	0x3ae6	; 0x3ae6 <__divmodsi4>
    2ba8:	c9 01       	movw	r24, r18
    2baa:	06 97       	sbiw	r24, 0x06	; 6
    2bac:	62 e0       	ldi	r22, 0x02	; 2
    2bae:	70 e0       	ldi	r23, 0x00	; 0
    2bb0:	0e 94 3e 1d 	call	0x3a7c	; 0x3a7c <__divmodhi4>
    2bb4:	eb 01       	movw	r28, r22
    2bb6:	cb 01       	movw	r24, r22
    2bb8:	03 96       	adiw	r24, 0x03	; 3
    2bba:	88 0f       	add	r24, r24
    2bbc:	99 1f       	adc	r25, r25
    2bbe:	6c 01       	movw	r12, r24
    2bc0:	ee 24       	eor	r14, r14
    2bc2:	d7 fc       	sbrc	r13, 7
    2bc4:	e0 94       	com	r14
    2bc6:	fe 2c       	mov	r15, r14
    2bc8:	f0 94       	com	r15
    2bca:	e0 94       	com	r14
    2bcc:	d0 94       	com	r13
    2bce:	c0 94       	com	r12
    2bd0:	c1 1c       	adc	r12, r1
    2bd2:	d1 1c       	adc	r13, r1
    2bd4:	e1 1c       	adc	r14, r1
    2bd6:	f1 1c       	adc	r15, r1
    2bd8:	12 c0       	rjmp	.+36     	; 0x2bfe <_ZN11TimeBsdCode5pulseElil+0x86>
    2bda:	87 2d       	mov	r24, r7
    2bdc:	61 e0       	ldi	r22, 0x01	; 1
    2bde:	0e 94 45 19 	call	0x328a	; 0x328a <digitalWrite>
    2be2:	ce 01       	movw	r24, r28
    2be4:	0e 94 c1 18 	call	0x3182	; 0x3182 <delayMicroseconds>
    2be8:	87 2d       	mov	r24, r7
    2bea:	60 e0       	ldi	r22, 0x00	; 0
    2bec:	0e 94 45 19 	call	0x328a	; 0x328a <digitalWrite>
    2bf0:	ce 01       	movw	r24, r28
    2bf2:	0e 94 c1 18 	call	0x3182	; 0x3182 <delayMicroseconds>
    2bf6:	8c 0c       	add	r8, r12
    2bf8:	9d 1c       	adc	r9, r13
    2bfa:	ae 1c       	adc	r10, r14
    2bfc:	bf 1c       	adc	r11, r15
    2bfe:	18 14       	cp	r1, r8
    2c00:	19 04       	cpc	r1, r9
    2c02:	1a 04       	cpc	r1, r10
    2c04:	1b 04       	cpc	r1, r11
    2c06:	4c f3       	brlt	.-46     	; 0x2bda <_ZN11TimeBsdCode5pulseElil+0x62>
    2c08:	df 91       	pop	r29
    2c0a:	cf 91       	pop	r28
    2c0c:	1f 91       	pop	r17
    2c0e:	0f 91       	pop	r16
    2c10:	ff 90       	pop	r15
    2c12:	ef 90       	pop	r14
    2c14:	df 90       	pop	r13
    2c16:	cf 90       	pop	r12
    2c18:	bf 90       	pop	r11
    2c1a:	af 90       	pop	r10
    2c1c:	9f 90       	pop	r9
    2c1e:	8f 90       	pop	r8
    2c20:	7f 90       	pop	r7
    2c22:	08 95       	ret

00002c24 <_ZN11TimeBsdCode4playEi>:
    2c24:	8f 92       	push	r8
    2c26:	9f 92       	push	r9
    2c28:	af 92       	push	r10
    2c2a:	bf 92       	push	r11
    2c2c:	cf 92       	push	r12
    2c2e:	df 92       	push	r13
    2c30:	ef 92       	push	r14
    2c32:	ff 92       	push	r15
    2c34:	0f 93       	push	r16
    2c36:	1f 93       	push	r17
    2c38:	cf 93       	push	r28
    2c3a:	df 93       	push	r29
    2c3c:	ec 01       	movw	r28, r24
    2c3e:	4b 01       	movw	r8, r22
    2c40:	8a 81       	ldd	r24, Y+2	; 0x02
    2c42:	88 23       	and	r24, r24
    2c44:	09 f5       	brne	.+66     	; 0x2c88 <_ZN11TimeBsdCode4playEi+0x64>
    2c46:	2e c0       	rjmp	.+92     	; 0x2ca4 <_ZN11TimeBsdCode4playEi+0x80>
    2c48:	e9 85       	ldd	r30, Y+9	; 0x09
    2c4a:	fa 85       	ldd	r31, Y+10	; 0x0a
    2c4c:	ec 0d       	add	r30, r12
    2c4e:	fd 1d       	adc	r31, r13
    2c50:	40 81       	ld	r20, Z
    2c52:	51 81       	ldd	r21, Z+1	; 0x01
    2c54:	60 e0       	ldi	r22, 0x00	; 0
    2c56:	70 e0       	ldi	r23, 0x00	; 0
    2c58:	eb 80       	ldd	r14, Y+3	; 0x03
    2c5a:	fc 80       	ldd	r15, Y+4	; 0x04
    2c5c:	0d 81       	ldd	r16, Y+5	; 0x05
    2c5e:	1e 81       	ldd	r17, Y+6	; 0x06
    2c60:	ce 01       	movw	r24, r28
    2c62:	94 01       	movw	r18, r8
    2c64:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <_ZN11TimeBsdCode5pulseElil>
    2c68:	e9 85       	ldd	r30, Y+9	; 0x09
    2c6a:	fa 85       	ldd	r31, Y+10	; 0x0a
    2c6c:	ec 0d       	add	r30, r12
    2c6e:	fd 1d       	adc	r31, r13
    2c70:	82 81       	ldd	r24, Z+2	; 0x02
    2c72:	93 81       	ldd	r25, Z+3	; 0x03
    2c74:	0e 94 c1 18 	call	0x3182	; 0x3182 <delayMicroseconds>
    2c78:	08 94       	sec
    2c7a:	a1 1c       	adc	r10, r1
    2c7c:	b1 1c       	adc	r11, r1
    2c7e:	84 e0       	ldi	r24, 0x04	; 4
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	c8 0e       	add	r12, r24
    2c84:	d9 1e       	adc	r13, r25
    2c86:	04 c0       	rjmp	.+8      	; 0x2c90 <_ZN11TimeBsdCode4playEi+0x6c>
    2c88:	cc 24       	eor	r12, r12
    2c8a:	dd 24       	eor	r13, r13
    2c8c:	aa 24       	eor	r10, r10
    2c8e:	bb 24       	eor	r11, r11
    2c90:	8f 81       	ldd	r24, Y+7	; 0x07
    2c92:	98 85       	ldd	r25, Y+8	; 0x08
    2c94:	a8 16       	cp	r10, r24
    2c96:	b9 06       	cpc	r11, r25
    2c98:	bc f2       	brlt	.-82     	; 0x2c48 <_ZN11TimeBsdCode4playEi+0x24>
    2c9a:	86 ef       	ldi	r24, 0xF6	; 246
    2c9c:	96 e0       	ldi	r25, 0x06	; 6
    2c9e:	6c ef       	ldi	r22, 0xFC	; 252
    2ca0:	71 e0       	ldi	r23, 0x01	; 1
    2ca2:	04 c0       	rjmp	.+8      	; 0x2cac <_ZN11TimeBsdCode4playEi+0x88>
    2ca4:	86 ef       	ldi	r24, 0xF6	; 246
    2ca6:	96 e0       	ldi	r25, 0x06	; 6
    2ca8:	66 e1       	ldi	r22, 0x16	; 22
    2caa:	72 e0       	ldi	r23, 0x02	; 2
    2cac:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
    2cb0:	df 91       	pop	r29
    2cb2:	cf 91       	pop	r28
    2cb4:	1f 91       	pop	r17
    2cb6:	0f 91       	pop	r16
    2cb8:	ff 90       	pop	r15
    2cba:	ef 90       	pop	r14
    2cbc:	df 90       	pop	r13
    2cbe:	cf 90       	pop	r12
    2cc0:	bf 90       	pop	r11
    2cc2:	af 90       	pop	r10
    2cc4:	9f 90       	pop	r9
    2cc6:	8f 90       	pop	r8
    2cc8:	08 95       	ret

00002cca <_ZN11TimeBsdCode7captureEibi>:
    2cca:	3f 92       	push	r3
    2ccc:	4f 92       	push	r4
    2cce:	5f 92       	push	r5
    2cd0:	6f 92       	push	r6
    2cd2:	7f 92       	push	r7
    2cd4:	8f 92       	push	r8
    2cd6:	9f 92       	push	r9
    2cd8:	af 92       	push	r10
    2cda:	bf 92       	push	r11
    2cdc:	cf 92       	push	r12
    2cde:	df 92       	push	r13
    2ce0:	ef 92       	push	r14
    2ce2:	ff 92       	push	r15
    2ce4:	0f 93       	push	r16
    2ce6:	1f 93       	push	r17
    2ce8:	cf 93       	push	r28
    2cea:	df 93       	push	r29
    2cec:	00 d0       	rcall	.+0      	; 0x2cee <_ZN11TimeBsdCode7captureEibi+0x24>
    2cee:	00 d0       	rcall	.+0      	; 0x2cf0 <_ZN11TimeBsdCode7captureEibi+0x26>
    2cf0:	00 d0       	rcall	.+0      	; 0x2cf2 <_ZN11TimeBsdCode7captureEibi+0x28>
    2cf2:	cd b7       	in	r28, 0x3d	; 61
    2cf4:	de b7       	in	r29, 0x3e	; 62
    2cf6:	5c 01       	movw	r10, r24
    2cf8:	2b 01       	movw	r4, r22
    2cfa:	3e 83       	std	Y+6, r19	; 0x06
    2cfc:	2d 83       	std	Y+5, r18	; 0x05
    2cfe:	fc 01       	movw	r30, r24
    2d00:	d3 84       	ldd	r13, Z+11	; 0x0b
    2d02:	33 24       	eor	r3, r3
    2d04:	33 94       	inc	r3
    2d06:	3d 24       	eor	r3, r13
    2d08:	12 82       	std	Z+2, r1	; 0x02
    2d0a:	10 86       	std	Z+8, r1	; 0x08
    2d0c:	17 82       	std	Z+7, r1	; 0x07
    2d0e:	8d 2d       	mov	r24, r13
    2d10:	44 23       	and	r20, r20
    2d12:	a9 f0       	breq	.+42     	; 0x2d3e <_ZN11TimeBsdCode7captureEibi+0x74>
    2d14:	28 e8       	ldi	r18, 0x88	; 136
    2d16:	33 e1       	ldi	r19, 0x13	; 19
    2d18:	40 e0       	ldi	r20, 0x00	; 0
    2d1a:	50 e0       	ldi	r21, 0x00	; 0
    2d1c:	8e 01       	movw	r16, r28
    2d1e:	0f 5f       	subi	r16, 0xFF	; 255
    2d20:	1f 4f       	sbci	r17, 0xFF	; 255
    2d22:	fe e1       	ldi	r31, 0x1E	; 30
    2d24:	ef 2e       	mov	r14, r31
    2d26:	f1 2c       	mov	r15, r1
    2d28:	cc 24       	eor	r12, r12
    2d2a:	c3 94       	inc	r12
    2d2c:	0e 94 be 02 	call	0x57c	; 0x57c <_Z10whileInputbimRmib>
    2d30:	88 23       	and	r24, r24
    2d32:	91 f4       	brne	.+36     	; 0x2d58 <_ZN11TimeBsdCode7captureEibi+0x8e>
    2d34:	86 ef       	ldi	r24, 0xF6	; 246
    2d36:	96 e0       	ldi	r25, 0x06	; 6
    2d38:	6d ee       	ldi	r22, 0xED	; 237
    2d3a:	72 e0       	ldi	r23, 0x02	; 2
    2d3c:	1e c0       	rjmp	.+60     	; 0x2d7a <_ZN11TimeBsdCode7captureEibi+0xb0>
    2d3e:	28 e8       	ldi	r18, 0x88	; 136
    2d40:	33 e1       	ldi	r19, 0x13	; 19
    2d42:	40 e0       	ldi	r20, 0x00	; 0
    2d44:	50 e0       	ldi	r21, 0x00	; 0
    2d46:	8e 01       	movw	r16, r28
    2d48:	0f 5f       	subi	r16, 0xFF	; 255
    2d4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2d4c:	ee e1       	ldi	r30, 0x1E	; 30
    2d4e:	ee 2e       	mov	r14, r30
    2d50:	f1 2c       	mov	r15, r1
    2d52:	cc 24       	eor	r12, r12
    2d54:	0e 94 be 02 	call	0x57c	; 0x57c <_Z10whileInputbimRmib>
    2d58:	66 24       	eor	r6, r6
    2d5a:	77 24       	eor	r7, r7
    2d5c:	88 24       	eor	r8, r8
    2d5e:	99 24       	eor	r9, r9
    2d60:	2d 81       	ldd	r18, Y+5	; 0x05
    2d62:	3e 81       	ldd	r19, Y+6	; 0x06
    2d64:	f5 01       	movw	r30, r10
    2d66:	82 16       	cp	r8, r18
    2d68:	93 06       	cpc	r9, r19
    2d6a:	5c f0       	brlt	.+22     	; 0x2d82 <_ZN11TimeBsdCode7captureEibi+0xb8>
    2d6c:	12 82       	std	Z+2, r1	; 0x02
    2d6e:	10 86       	std	Z+8, r1	; 0x08
    2d70:	17 82       	std	Z+7, r1	; 0x07
    2d72:	86 ef       	ldi	r24, 0xF6	; 246
    2d74:	96 e0       	ldi	r25, 0x06	; 6
    2d76:	62 e0       	ldi	r22, 0x02	; 2
    2d78:	73 e0       	ldi	r23, 0x03	; 3
    2d7a:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
    2d7e:	80 e0       	ldi	r24, 0x00	; 0
    2d80:	38 c0       	rjmp	.+112    	; 0x2df2 <_ZN11TimeBsdCode7captureEibi+0x128>
    2d82:	21 85       	ldd	r18, Z+9	; 0x09
    2d84:	32 85       	ldd	r19, Z+10	; 0x0a
    2d86:	26 0d       	add	r18, r6
    2d88:	37 1d       	adc	r19, r7
    2d8a:	83 2d       	mov	r24, r3
    2d8c:	b2 01       	movw	r22, r4
    2d8e:	48 ee       	ldi	r20, 0xE8	; 232
    2d90:	5d ef       	ldi	r21, 0xFD	; 253
    2d92:	0e e1       	ldi	r16, 0x1E	; 30
    2d94:	10 e0       	ldi	r17, 0x00	; 0
    2d96:	ee 24       	eor	r14, r14
    2d98:	e3 94       	inc	r14
    2d9a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z10whileInputbiiRjib>
    2d9e:	88 23       	and	r24, r24
    2da0:	31 f4       	brne	.+12     	; 0x2dae <_ZN11TimeBsdCode7captureEibi+0xe4>
    2da2:	81 e0       	ldi	r24, 0x01	; 1
    2da4:	f5 01       	movw	r30, r10
    2da6:	82 83       	std	Z+2, r24	; 0x02
    2da8:	90 86       	std	Z+8, r9	; 0x08
    2daa:	87 82       	std	Z+7, r8	; 0x07
    2dac:	22 c0       	rjmp	.+68     	; 0x2df2 <_ZN11TimeBsdCode7captureEibi+0x128>
    2dae:	f5 01       	movw	r30, r10
    2db0:	21 85       	ldd	r18, Z+9	; 0x09
    2db2:	32 85       	ldd	r19, Z+10	; 0x0a
    2db4:	26 0d       	add	r18, r6
    2db6:	37 1d       	adc	r19, r7
    2db8:	2e 5f       	subi	r18, 0xFE	; 254
    2dba:	3f 4f       	sbci	r19, 0xFF	; 255
    2dbc:	8d 2d       	mov	r24, r13
    2dbe:	b2 01       	movw	r22, r4
    2dc0:	48 ee       	ldi	r20, 0xE8	; 232
    2dc2:	5d ef       	ldi	r21, 0xFD	; 253
    2dc4:	0e e1       	ldi	r16, 0x1E	; 30
    2dc6:	10 e0       	ldi	r17, 0x00	; 0
    2dc8:	ee 24       	eor	r14, r14
    2dca:	e3 94       	inc	r14
    2dcc:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z10whileInputbiiRjib>
    2dd0:	24 e0       	ldi	r18, 0x04	; 4
    2dd2:	30 e0       	ldi	r19, 0x00	; 0
    2dd4:	62 0e       	add	r6, r18
    2dd6:	73 1e       	adc	r7, r19
    2dd8:	94 01       	movw	r18, r8
    2dda:	2f 5f       	subi	r18, 0xFF	; 255
    2ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    2dde:	88 23       	and	r24, r24
    2de0:	31 f4       	brne	.+12     	; 0x2dee <_ZN11TimeBsdCode7captureEibi+0x124>
    2de2:	81 e0       	ldi	r24, 0x01	; 1
    2de4:	f5 01       	movw	r30, r10
    2de6:	82 83       	std	Z+2, r24	; 0x02
    2de8:	30 87       	std	Z+8, r19	; 0x08
    2dea:	27 83       	std	Z+7, r18	; 0x07
    2dec:	02 c0       	rjmp	.+4      	; 0x2df2 <_ZN11TimeBsdCode7captureEibi+0x128>
    2dee:	49 01       	movw	r8, r18
    2df0:	b7 cf       	rjmp	.-146    	; 0x2d60 <_ZN11TimeBsdCode7captureEibi+0x96>
    2df2:	26 96       	adiw	r28, 0x06	; 6
    2df4:	0f b6       	in	r0, 0x3f	; 63
    2df6:	f8 94       	cli
    2df8:	de bf       	out	0x3e, r29	; 62
    2dfa:	0f be       	out	0x3f, r0	; 63
    2dfc:	cd bf       	out	0x3d, r28	; 61
    2dfe:	df 91       	pop	r29
    2e00:	cf 91       	pop	r28
    2e02:	1f 91       	pop	r17
    2e04:	0f 91       	pop	r16
    2e06:	ff 90       	pop	r15
    2e08:	ef 90       	pop	r14
    2e0a:	df 90       	pop	r13
    2e0c:	cf 90       	pop	r12
    2e0e:	bf 90       	pop	r11
    2e10:	af 90       	pop	r10
    2e12:	9f 90       	pop	r9
    2e14:	8f 90       	pop	r8
    2e16:	7f 90       	pop	r7
    2e18:	6f 90       	pop	r6
    2e1a:	5f 90       	pop	r5
    2e1c:	4f 90       	pop	r4
    2e1e:	3f 90       	pop	r3
    2e20:	08 95       	ret

00002e22 <_ZN11TimeBsdCode5teachEi>:
    2e22:	0f 93       	push	r16
    2e24:	1f 93       	push	r17
    2e26:	cf 93       	push	r28
    2e28:	df 93       	push	r29
    2e2a:	ec 01       	movw	r28, r24
    2e2c:	8b 01       	movw	r16, r22
    2e2e:	86 ef       	ldi	r24, 0xF6	; 246
    2e30:	96 e0       	ldi	r25, 0x06	; 6
    2e32:	62 e5       	ldi	r22, 0x52	; 82
    2e34:	73 e0       	ldi	r23, 0x03	; 3
    2e36:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
    2e3a:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e3c:	3d 85       	ldd	r19, Y+13	; 0x0d
    2e3e:	ce 01       	movw	r24, r28
    2e40:	b8 01       	movw	r22, r16
    2e42:	41 e0       	ldi	r20, 0x01	; 1
    2e44:	0e 94 65 16 	call	0x2cca	; 0x2cca <_ZN11TimeBsdCode7captureEibi>
    2e48:	88 23       	and	r24, r24
    2e4a:	29 f0       	breq	.+10     	; 0x2e56 <_ZN11TimeBsdCode5teachEi+0x34>
    2e4c:	86 ef       	ldi	r24, 0xF6	; 246
    2e4e:	96 e0       	ldi	r25, 0x06	; 6
    2e50:	6e e7       	ldi	r22, 0x7E	; 126
    2e52:	73 e0       	ldi	r23, 0x03	; 3
    2e54:	04 c0       	rjmp	.+8      	; 0x2e5e <_ZN11TimeBsdCode5teachEi+0x3c>
    2e56:	86 ef       	ldi	r24, 0xF6	; 246
    2e58:	96 e0       	ldi	r25, 0x06	; 6
    2e5a:	64 e9       	ldi	r22, 0x94	; 148
    2e5c:	73 e0       	ldi	r23, 0x03	; 3
    2e5e:	0e 94 0c 1d 	call	0x3a18	; 0x3a18 <_ZN5Print7printlnEPKc>
    2e62:	df 91       	pop	r29
    2e64:	cf 91       	pop	r28
    2e66:	1f 91       	pop	r17
    2e68:	0f 91       	pop	r16
    2e6a:	08 95       	ret

00002e6c <malloc>:
	 * Our minimum chunk size is the size of a pointer (plus the
	 * size of the "sz" field, but we don't need to account for
	 * this), otherwise we could not possibly fit a freelist entry
	 * into the chunk later.
	 */
	if (len < sizeof(struct __freelist) - sizeof(size_t))
    2e6c:	0f 93       	push	r16
    2e6e:	1f 93       	push	r17
    2e70:	cf 93       	push	r28
    2e72:	df 93       	push	r29
    2e74:	bc 01       	movw	r22, r24
    2e76:	82 30       	cpi	r24, 0x02	; 2
    2e78:	91 05       	cpc	r25, r1
    2e7a:	10 f4       	brcc	.+4      	; 0x2e80 <malloc+0x14>
    2e7c:	62 e0       	ldi	r22, 0x02	; 2
    2e7e:	70 e0       	ldi	r23, 0x00	; 0
	 * would match exactly.  If we found one, we are done.  While
	 * walking, note down the smallest chunk we found that would
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
    2e80:	e0 91 1a 07 	lds	r30, 0x071A
    2e84:	f0 91 1b 07 	lds	r31, 0x071B
    2e88:	40 e0       	ldi	r20, 0x00	; 0
    2e8a:	50 e0       	ldi	r21, 0x00	; 0
    2e8c:	a0 e0       	ldi	r26, 0x00	; 0
    2e8e:	b0 e0       	ldi	r27, 0x00	; 0
    2e90:	24 c0       	rjmp	.+72     	; 0x2eda <malloc+0x6e>
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
		if (fp1->sz < len)
    2e92:	80 81       	ld	r24, Z
    2e94:	91 81       	ldd	r25, Z+1	; 0x01
    2e96:	86 17       	cp	r24, r22
    2e98:	97 07       	cpc	r25, r23
    2e9a:	d0 f0       	brcs	.+52     	; 0x2ed0 <malloc+0x64>
			continue;
		if (fp1->sz == len) {
    2e9c:	86 17       	cp	r24, r22
    2e9e:	97 07       	cpc	r25, r23
    2ea0:	71 f4       	brne	.+28     	; 0x2ebe <malloc+0x52>
    2ea2:	82 81       	ldd	r24, Z+2	; 0x02
    2ea4:	93 81       	ldd	r25, Z+3	; 0x03
			/*
			 * Found it.  Disconnect the chunk from the
			 * freelist, and return it.
			 */
			if (fp2)
    2ea6:	10 97       	sbiw	r26, 0x00	; 0
    2ea8:	29 f0       	breq	.+10     	; 0x2eb4 <malloc+0x48>
				fp2->nx = fp1->nx;
    2eaa:	13 96       	adiw	r26, 0x03	; 3
    2eac:	9c 93       	st	X, r25
    2eae:	8e 93       	st	-X, r24
    2eb0:	12 97       	sbiw	r26, 0x02	; 2
    2eb2:	2c c0       	rjmp	.+88     	; 0x2f0c <malloc+0xa0>
			else
				__flp = fp1->nx;
    2eb4:	90 93 1b 07 	sts	0x071B, r25
    2eb8:	80 93 1a 07 	sts	0x071A, r24
    2ebc:	27 c0       	rjmp	.+78     	; 0x2f0c <malloc+0xa0>
			return &(fp1->nx);
		}
		else {
			if (s == 0 || fp1->sz < s) {
    2ebe:	41 15       	cp	r20, r1
    2ec0:	51 05       	cpc	r21, r1
    2ec2:	19 f0       	breq	.+6      	; 0x2eca <malloc+0x5e>
    2ec4:	84 17       	cp	r24, r20
    2ec6:	95 07       	cpc	r25, r21
    2ec8:	18 f4       	brcc	.+6      	; 0x2ed0 <malloc+0x64>
    2eca:	8d 01       	movw	r16, r26
    2ecc:	ac 01       	movw	r20, r24
    2ece:	ef 01       	movw	r28, r30
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
    2ed0:	df 01       	movw	r26, r30
    2ed2:	82 81       	ldd	r24, Z+2	; 0x02
    2ed4:	93 81       	ldd	r25, Z+3	; 0x03
    2ed6:	9c 01       	movw	r18, r24
    2ed8:	f9 01       	movw	r30, r18
	 * walking, note down the smallest chunk we found that would
	 * still fit the request -- we need it for step 2.
	 *
	 */
	for (s = 0, fp1 = __flp, fp2 = 0;
	     fp1;
    2eda:	30 97       	sbiw	r30, 0x00	; 0
    2edc:	d1 f6       	brne	.-76     	; 0x2e92 <malloc+0x26>
	 * difference between the requested size and the size of the
	 * chunk found is large enough for another freelist entry; if
	 * not, just enlarge the request size to what we have found,
	 * and use the entire chunk.
	 */
	if (s) {
    2ede:	41 15       	cp	r20, r1
    2ee0:	51 05       	cpc	r21, r1
    2ee2:	f9 f0       	breq	.+62     	; 0x2f22 <malloc+0xb6>
		if (s - len < sizeof(struct __freelist)) {
    2ee4:	ca 01       	movw	r24, r20
    2ee6:	86 1b       	sub	r24, r22
    2ee8:	97 0b       	sbc	r25, r23
    2eea:	84 30       	cpi	r24, 0x04	; 4
    2eec:	91 05       	cpc	r25, r1
    2eee:	80 f4       	brcc	.+32     	; 0x2f10 <malloc+0xa4>
    2ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ef2:	9b 81       	ldd	r25, Y+3	; 0x03
			/* Disconnect it from freelist and return it. */
			if (sfp2)
    2ef4:	01 15       	cp	r16, r1
    2ef6:	11 05       	cpc	r17, r1
    2ef8:	21 f0       	breq	.+8      	; 0x2f02 <malloc+0x96>
				sfp2->nx = sfp1->nx;
    2efa:	f8 01       	movw	r30, r16
    2efc:	93 83       	std	Z+3, r25	; 0x03
    2efe:	82 83       	std	Z+2, r24	; 0x02
    2f00:	04 c0       	rjmp	.+8      	; 0x2f0a <malloc+0x9e>
			else
				__flp = sfp1->nx;
    2f02:	90 93 1b 07 	sts	0x071B, r25
    2f06:	80 93 1a 07 	sts	0x071A, r24
			return &(sfp1->nx);
    2f0a:	fe 01       	movw	r30, r28
    2f0c:	32 96       	adiw	r30, 0x02	; 2
    2f0e:	45 c0       	rjmp	.+138    	; 0x2f9a <malloc+0x12e>
		 */
		cp = (char *)sfp1;
		s -= len;
		cp += s;
		sfp2 = (struct __freelist *)cp;
		sfp2->sz = len;
    2f10:	fe 01       	movw	r30, r28
    2f12:	e8 0f       	add	r30, r24
    2f14:	f9 1f       	adc	r31, r25
    2f16:	61 93       	st	Z+, r22
    2f18:	71 93       	st	Z+, r23
		sfp1->sz = s - sizeof(size_t);
    2f1a:	02 97       	sbiw	r24, 0x02	; 2
    2f1c:	99 83       	std	Y+1, r25	; 0x01
    2f1e:	88 83       	st	Y, r24
    2f20:	3c c0       	rjmp	.+120    	; 0x2f9a <malloc+0x12e>
	 * Under Unix, the "break value" was the end of the data
	 * segment as dynamically requested from the operating system.
	 * Since we don't have an operating system, just make sure
	 * that we don't collide with the stack.
	 */
	if (__brkval == 0)
    2f22:	80 91 18 07 	lds	r24, 0x0718
    2f26:	90 91 19 07 	lds	r25, 0x0719
    2f2a:	89 2b       	or	r24, r25
    2f2c:	41 f4       	brne	.+16     	; 0x2f3e <malloc+0xd2>
		__brkval = __malloc_heap_start;
    2f2e:	80 91 c8 03 	lds	r24, 0x03C8
    2f32:	90 91 c9 03 	lds	r25, 0x03C9
    2f36:	90 93 19 07 	sts	0x0719, r25
    2f3a:	80 93 18 07 	sts	0x0718, r24
	cp = __malloc_heap_end;
    2f3e:	40 91 ca 03 	lds	r20, 0x03CA
    2f42:	50 91 cb 03 	lds	r21, 0x03CB
	if (cp == 0)
    2f46:	41 15       	cp	r20, r1
    2f48:	51 05       	cpc	r21, r1
    2f4a:	41 f4       	brne	.+16     	; 0x2f5c <malloc+0xf0>
		cp = STACK_POINTER() - __malloc_margin;
    2f4c:	4d b7       	in	r20, 0x3d	; 61
    2f4e:	5e b7       	in	r21, 0x3e	; 62
    2f50:	80 91 c6 03 	lds	r24, 0x03C6
    2f54:	90 91 c7 03 	lds	r25, 0x03C7
    2f58:	48 1b       	sub	r20, r24
    2f5a:	59 0b       	sbc	r21, r25
	if (cp <= __brkval)
    2f5c:	20 91 18 07 	lds	r18, 0x0718
    2f60:	30 91 19 07 	lds	r19, 0x0719
    2f64:	24 17       	cp	r18, r20
    2f66:	35 07       	cpc	r19, r21
    2f68:	b0 f4       	brcc	.+44     	; 0x2f96 <malloc+0x12a>
	  /*
	   * Memory exhausted.
	   */
	  return 0;
	avail = cp - __brkval;
    2f6a:	ca 01       	movw	r24, r20
    2f6c:	82 1b       	sub	r24, r18
    2f6e:	93 0b       	sbc	r25, r19
	/*
	 * Both tests below are needed to catch the case len >= 0xfffe.
	 */
	if (avail >= len && avail >= len + sizeof(size_t)) {
    2f70:	86 17       	cp	r24, r22
    2f72:	97 07       	cpc	r25, r23
    2f74:	80 f0       	brcs	.+32     	; 0x2f96 <malloc+0x12a>
    2f76:	ab 01       	movw	r20, r22
    2f78:	4e 5f       	subi	r20, 0xFE	; 254
    2f7a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f7c:	84 17       	cp	r24, r20
    2f7e:	95 07       	cpc	r25, r21
    2f80:	50 f0       	brcs	.+20     	; 0x2f96 <malloc+0x12a>
		fp1 = (struct __freelist *)__brkval;
		__brkval += len + sizeof(size_t);
    2f82:	42 0f       	add	r20, r18
    2f84:	53 1f       	adc	r21, r19
    2f86:	50 93 19 07 	sts	0x0719, r21
    2f8a:	40 93 18 07 	sts	0x0718, r20
		fp1->sz = len;
    2f8e:	f9 01       	movw	r30, r18
    2f90:	61 93       	st	Z+, r22
    2f92:	71 93       	st	Z+, r23
    2f94:	02 c0       	rjmp	.+4      	; 0x2f9a <malloc+0x12e>
		return &(fp1->nx);
    2f96:	e0 e0       	ldi	r30, 0x00	; 0
    2f98:	f0 e0       	ldi	r31, 0x00	; 0
	}
	/*
	 * Step 4: There's no help, just fail. :-/
	 */
	return 0;
}
    2f9a:	cf 01       	movw	r24, r30
    2f9c:	df 91       	pop	r29
    2f9e:	cf 91       	pop	r28
    2fa0:	1f 91       	pop	r17
    2fa2:	0f 91       	pop	r16
    2fa4:	08 95       	ret

00002fa6 <free>:
{
	struct __freelist *fp1, *fp2, *fpnew;
	char *cp1, *cp2, *cpnew;

	/* ISO C says free(NULL) must be a no-op */
	if (p == 0)
    2fa6:	cf 93       	push	r28
    2fa8:	df 93       	push	r29
    2faa:	9c 01       	movw	r18, r24
    2fac:	00 97       	sbiw	r24, 0x00	; 0
    2fae:	09 f4       	brne	.+2      	; 0x2fb2 <free+0xc>
    2fb0:	8f c0       	rjmp	.+286    	; 0x30d0 <free+0x12a>
		return;

	cpnew = p;
	cpnew -= sizeof(size_t);
    2fb2:	ec 01       	movw	r28, r24
    2fb4:	22 97       	sbiw	r28, 0x02	; 2
	fpnew = (struct __freelist *)cpnew;
	fpnew->nx = 0;
    2fb6:	1b 82       	std	Y+3, r1	; 0x03
    2fb8:	1a 82       	std	Y+2, r1	; 0x02
	/*
	 * Trivial case first: if there's no freelist yet, our entry
	 * will be the only one on it.  If this is the last entry, we
	 * can reduce __brkval instead.
	 */
	if (__flp == 0) {
    2fba:	60 91 1a 07 	lds	r22, 0x071A
    2fbe:	70 91 1b 07 	lds	r23, 0x071B
    2fc2:	61 15       	cp	r22, r1
    2fc4:	71 05       	cpc	r23, r1
    2fc6:	81 f4       	brne	.+32     	; 0x2fe8 <free+0x42>
		if ((char *)p + fpnew->sz == __brkval)
    2fc8:	88 81       	ld	r24, Y
    2fca:	99 81       	ldd	r25, Y+1	; 0x01
    2fcc:	82 0f       	add	r24, r18
    2fce:	93 1f       	adc	r25, r19
    2fd0:	20 91 18 07 	lds	r18, 0x0718
    2fd4:	30 91 19 07 	lds	r19, 0x0719
    2fd8:	28 17       	cp	r18, r24
    2fda:	39 07       	cpc	r19, r25
    2fdc:	39 f5       	brne	.+78     	; 0x302c <free+0x86>
			__brkval = cpnew;
    2fde:	d0 93 19 07 	sts	0x0719, r29
    2fe2:	c0 93 18 07 	sts	0x0718, r28
    2fe6:	74 c0       	rjmp	.+232    	; 0x30d0 <free+0x12a>
		else
			__flp = fpnew;
    2fe8:	db 01       	movw	r26, r22
    2fea:	40 e0       	ldi	r20, 0x00	; 0
    2fec:	50 e0       	ldi	r21, 0x00	; 0
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
		if (fp1 < fpnew)
    2fee:	ac 17       	cp	r26, r28
    2ff0:	bd 07       	cpc	r27, r29
    2ff2:	08 f1       	brcs	.+66     	; 0x3036 <free+0x90>
			continue;
		cp1 = (char *)fp1;
		fpnew->nx = fp1;
    2ff4:	bb 83       	std	Y+3, r27	; 0x03
    2ff6:	aa 83       	std	Y+2, r26	; 0x02
		if ((char *)&(fpnew->nx) + fpnew->sz == cp1) {
    2ff8:	fe 01       	movw	r30, r28
    2ffa:	21 91       	ld	r18, Z+
    2ffc:	31 91       	ld	r19, Z+
    2ffe:	e2 0f       	add	r30, r18
    3000:	f3 1f       	adc	r31, r19
    3002:	ae 17       	cp	r26, r30
    3004:	bf 07       	cpc	r27, r31
    3006:	79 f4       	brne	.+30     	; 0x3026 <free+0x80>
			/* upper chunk adjacent, assimilate it */
			fpnew->sz += fp1->sz + sizeof(size_t);
    3008:	8d 91       	ld	r24, X+
    300a:	9c 91       	ld	r25, X
    300c:	11 97       	sbiw	r26, 0x01	; 1
    300e:	28 0f       	add	r18, r24
    3010:	39 1f       	adc	r19, r25
    3012:	2e 5f       	subi	r18, 0xFE	; 254
    3014:	3f 4f       	sbci	r19, 0xFF	; 255
    3016:	39 83       	std	Y+1, r19	; 0x01
    3018:	28 83       	st	Y, r18
			fpnew->nx = fp1->nx;
    301a:	12 96       	adiw	r26, 0x02	; 2
    301c:	8d 91       	ld	r24, X+
    301e:	9c 91       	ld	r25, X
    3020:	13 97       	sbiw	r26, 0x03	; 3
    3022:	9b 83       	std	Y+3, r25	; 0x03
    3024:	8a 83       	std	Y+2, r24	; 0x02
		}
		if (fp2 == 0) {
    3026:	41 15       	cp	r20, r1
    3028:	51 05       	cpc	r21, r1
    302a:	71 f4       	brne	.+28     	; 0x3048 <free+0xa2>
			/* new head of freelist */
			__flp = fpnew;
    302c:	d0 93 1b 07 	sts	0x071B, r29
    3030:	c0 93 1a 07 	sts	0x071A, r28
    3034:	4d c0       	rjmp	.+154    	; 0x30d0 <free+0x12a>
	 * freelist.  Try to aggregate the chunk with adjacent chunks
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
	     fp2 = fp1, fp1 = fp1->nx) {
    3036:	12 96       	adiw	r26, 0x02	; 2
    3038:	8d 91       	ld	r24, X+
    303a:	9c 91       	ld	r25, X
    303c:	13 97       	sbiw	r26, 0x03	; 3
    303e:	ad 01       	movw	r20, r26
	 * Now, find the position where our new entry belongs onto the
	 * freelist.  Try to aggregate the chunk with adjacent chunks
	 * if possible.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1;
    3040:	00 97       	sbiw	r24, 0x00	; 0
    3042:	11 f0       	breq	.+4      	; 0x3048 <free+0xa2>
    3044:	dc 01       	movw	r26, r24
    3046:	d3 cf       	rjmp	.-90     	; 0x2fee <free+0x48>
	 * Note that we get here either if we hit the "break" above,
	 * or if we fell off the end of the loop.  The latter means
	 * we've got a new topmost chunk.  Either way, try aggregating
	 * with the lower chunk if possible.
	 */
	fp2->nx = fpnew;
    3048:	da 01       	movw	r26, r20
    304a:	13 96       	adiw	r26, 0x03	; 3
    304c:	dc 93       	st	X, r29
    304e:	ce 93       	st	-X, r28
    3050:	12 97       	sbiw	r26, 0x02	; 2
	cp2 = (char *)&(fp2->nx);
	if (cp2 + fp2->sz == cpnew) {
    3052:	fa 01       	movw	r30, r20
    3054:	21 91       	ld	r18, Z+
    3056:	31 91       	ld	r19, Z+
    3058:	e2 0f       	add	r30, r18
    305a:	f3 1f       	adc	r31, r19
    305c:	ce 17       	cp	r28, r30
    305e:	df 07       	cpc	r29, r31
    3060:	69 f4       	brne	.+26     	; 0x307c <free+0xd6>
		/* lower junk adjacent, merge */
		fp2->sz += fpnew->sz + sizeof(size_t);
    3062:	88 81       	ld	r24, Y
    3064:	99 81       	ldd	r25, Y+1	; 0x01
    3066:	28 0f       	add	r18, r24
    3068:	39 1f       	adc	r19, r25
    306a:	2e 5f       	subi	r18, 0xFE	; 254
    306c:	3f 4f       	sbci	r19, 0xFF	; 255
    306e:	fa 01       	movw	r30, r20
    3070:	31 83       	std	Z+1, r19	; 0x01
    3072:	20 83       	st	Z, r18
		fp2->nx = fpnew->nx;
    3074:	8a 81       	ldd	r24, Y+2	; 0x02
    3076:	9b 81       	ldd	r25, Y+3	; 0x03
    3078:	93 83       	std	Z+3, r25	; 0x03
    307a:	82 83       	std	Z+2, r24	; 0x02
    307c:	e0 e0       	ldi	r30, 0x00	; 0
    307e:	f0 e0       	ldi	r31, 0x00	; 0
	}
	/*
	 * If there's a new topmost chunk, lower __brkval instead.
	 */
	for (fp1 = __flp, fp2 = 0;
	     fp1->nx != 0;
    3080:	db 01       	movw	r26, r22
    3082:	12 96       	adiw	r26, 0x02	; 2
    3084:	8d 91       	ld	r24, X+
    3086:	9c 91       	ld	r25, X
    3088:	13 97       	sbiw	r26, 0x03	; 3
    308a:	00 97       	sbiw	r24, 0x00	; 0
    308c:	19 f0       	breq	.+6      	; 0x3094 <free+0xee>
    308e:	bc 01       	movw	r22, r24
    3090:	fd 01       	movw	r30, r26
    3092:	f6 cf       	rjmp	.-20     	; 0x3080 <free+0xda>
	     fp2 = fp1, fp1 = fp1->nx)
		/* advance to entry just before end of list */;
	cp2 = (char *)&(fp1->nx);
    3094:	ab 01       	movw	r20, r22
    3096:	4e 5f       	subi	r20, 0xFE	; 254
    3098:	5f 4f       	sbci	r21, 0xFF	; 255
	if (cp2 + fp1->sz == __brkval) {
    309a:	db 01       	movw	r26, r22
    309c:	8d 91       	ld	r24, X+
    309e:	9c 91       	ld	r25, X
    30a0:	84 0f       	add	r24, r20
    30a2:	95 1f       	adc	r25, r21
    30a4:	20 91 18 07 	lds	r18, 0x0718
    30a8:	30 91 19 07 	lds	r19, 0x0719
    30ac:	28 17       	cp	r18, r24
    30ae:	39 07       	cpc	r19, r25
    30b0:	79 f4       	brne	.+30     	; 0x30d0 <free+0x12a>
		if (fp2 == NULL)
    30b2:	30 97       	sbiw	r30, 0x00	; 0
    30b4:	29 f4       	brne	.+10     	; 0x30c0 <free+0x11a>
			/* Freelist is empty now. */
			__flp = NULL;
    30b6:	10 92 1b 07 	sts	0x071B, r1
    30ba:	10 92 1a 07 	sts	0x071A, r1
    30be:	02 c0       	rjmp	.+4      	; 0x30c4 <free+0x11e>
		else
			fp2->nx = NULL;
    30c0:	13 82       	std	Z+3, r1	; 0x03
    30c2:	12 82       	std	Z+2, r1	; 0x02
		__brkval = cp2 - sizeof(size_t);
    30c4:	42 50       	subi	r20, 0x02	; 2
    30c6:	50 40       	sbci	r21, 0x00	; 0
    30c8:	50 93 19 07 	sts	0x0719, r21
    30cc:	40 93 18 07 	sts	0x0718, r20
	}
}
    30d0:	df 91       	pop	r29
    30d2:	cf 91       	pop	r28
    30d4:	08 95       	ret

000030d6 <__vector_16>:
		if (((uint16_t)micros() - start) >= 1000) {
			ms--;
			start += 1000;
		}
	}
}
    30d6:	1f 92       	push	r1
    30d8:	0f 92       	push	r0
    30da:	0f b6       	in	r0, 0x3f	; 63
    30dc:	0f 92       	push	r0
    30de:	11 24       	eor	r1, r1
    30e0:	2f 93       	push	r18
    30e2:	3f 93       	push	r19
    30e4:	8f 93       	push	r24
    30e6:	9f 93       	push	r25
    30e8:	af 93       	push	r26
    30ea:	bf 93       	push	r27
    30ec:	80 91 69 06 	lds	r24, 0x0669
    30f0:	90 91 6a 06 	lds	r25, 0x066A
    30f4:	a0 91 6b 06 	lds	r26, 0x066B
    30f8:	b0 91 6c 06 	lds	r27, 0x066C
    30fc:	30 91 6d 06 	lds	r19, 0x066D
    3100:	01 96       	adiw	r24, 0x01	; 1
    3102:	a1 1d       	adc	r26, r1
    3104:	b1 1d       	adc	r27, r1
    3106:	23 2f       	mov	r18, r19
    3108:	2d 5f       	subi	r18, 0xFD	; 253
    310a:	2d 37       	cpi	r18, 0x7D	; 125
    310c:	20 f0       	brcs	.+8      	; 0x3116 <__vector_16+0x40>
    310e:	2d 57       	subi	r18, 0x7D	; 125
    3110:	01 96       	adiw	r24, 0x01	; 1
    3112:	a1 1d       	adc	r26, r1
    3114:	b1 1d       	adc	r27, r1
    3116:	20 93 6d 06 	sts	0x066D, r18
    311a:	80 93 69 06 	sts	0x0669, r24
    311e:	90 93 6a 06 	sts	0x066A, r25
    3122:	a0 93 6b 06 	sts	0x066B, r26
    3126:	b0 93 6c 06 	sts	0x066C, r27
    312a:	80 91 65 06 	lds	r24, 0x0665
    312e:	90 91 66 06 	lds	r25, 0x0666
    3132:	a0 91 67 06 	lds	r26, 0x0667
    3136:	b0 91 68 06 	lds	r27, 0x0668
    313a:	01 96       	adiw	r24, 0x01	; 1
    313c:	a1 1d       	adc	r26, r1
    313e:	b1 1d       	adc	r27, r1
    3140:	80 93 65 06 	sts	0x0665, r24
    3144:	90 93 66 06 	sts	0x0666, r25
    3148:	a0 93 67 06 	sts	0x0667, r26
    314c:	b0 93 68 06 	sts	0x0668, r27
    3150:	bf 91       	pop	r27
    3152:	af 91       	pop	r26
    3154:	9f 91       	pop	r25
    3156:	8f 91       	pop	r24
    3158:	3f 91       	pop	r19
    315a:	2f 91       	pop	r18
    315c:	0f 90       	pop	r0
    315e:	0f be       	out	0x3f, r0	; 63
    3160:	0f 90       	pop	r0
    3162:	1f 90       	pop	r1
    3164:	18 95       	reti

00003166 <millis>:
    3166:	8f b7       	in	r24, 0x3f	; 63
    3168:	f8 94       	cli
    316a:	20 91 69 06 	lds	r18, 0x0669
    316e:	30 91 6a 06 	lds	r19, 0x066A
    3172:	40 91 6b 06 	lds	r20, 0x066B
    3176:	50 91 6c 06 	lds	r21, 0x066C
    317a:	8f bf       	out	0x3f, r24	; 63
    317c:	b9 01       	movw	r22, r18
    317e:	ca 01       	movw	r24, r20
    3180:	08 95       	ret

00003182 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call yields a delay of approximately 1 1/8 us.
	if (--us == 0)
    3182:	01 97       	sbiw	r24, 0x01	; 1
    3184:	39 f0       	breq	.+14     	; 0x3194 <delayMicroseconds+0x12>
		return;

	// the following loop takes a quarter of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2;
    3186:	88 0f       	add	r24, r24
    3188:	99 1f       	adc	r25, r25
    318a:	88 0f       	add	r24, r24
    318c:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	us -= 2;
    318e:	02 97       	sbiw	r24, 0x02	; 2
	// we can't subtract any more than this or we'd overflow w/ small delays.
	us--;
#endif

	// busy wait
	__asm__ __volatile__ (
    3190:	01 97       	sbiw	r24, 0x01	; 1
    3192:	f1 f7       	brne	.-4      	; 0x3190 <delayMicroseconds+0xe>
    3194:	08 95       	ret

00003196 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    3196:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    3198:	84 b5       	in	r24, 0x24	; 36
    319a:	82 60       	ori	r24, 0x02	; 2
    319c:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    319e:	84 b5       	in	r24, 0x24	; 36
    31a0:	81 60       	ori	r24, 0x01	; 1
    31a2:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    31a4:	85 b5       	in	r24, 0x25	; 37
    31a6:	82 60       	ori	r24, 0x02	; 2
    31a8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    31aa:	85 b5       	in	r24, 0x25	; 37
    31ac:	81 60       	ori	r24, 0x01	; 1
    31ae:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    31b0:	ee e6       	ldi	r30, 0x6E	; 110
    31b2:	f0 e0       	ldi	r31, 0x00	; 0
    31b4:	80 81       	ld	r24, Z
    31b6:	81 60       	ori	r24, 0x01	; 1
    31b8:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    31ba:	e1 e8       	ldi	r30, 0x81	; 129
    31bc:	f0 e0       	ldi	r31, 0x00	; 0
    31be:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    31c0:	80 81       	ld	r24, Z
    31c2:	82 60       	ori	r24, 0x02	; 2
    31c4:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    31c6:	80 81       	ld	r24, Z
    31c8:	81 60       	ori	r24, 0x01	; 1
    31ca:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    31cc:	e0 e8       	ldi	r30, 0x80	; 128
    31ce:	f0 e0       	ldi	r31, 0x00	; 0
    31d0:	80 81       	ld	r24, Z
    31d2:	81 60       	ori	r24, 0x01	; 1
    31d4:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    31d6:	e1 eb       	ldi	r30, 0xB1	; 177
    31d8:	f0 e0       	ldi	r31, 0x00	; 0
    31da:	80 81       	ld	r24, Z
    31dc:	84 60       	ori	r24, 0x04	; 4
    31de:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    31e0:	e0 eb       	ldi	r30, 0xB0	; 176
    31e2:	f0 e0       	ldi	r31, 0x00	; 0
    31e4:	80 81       	ld	r24, Z
    31e6:	81 60       	ori	r24, 0x01	; 1
    31e8:	80 83       	st	Z, r24
#if defined(ADCSRA)
	// set a2d prescale factor to 128
	// 16 MHz / 128 = 125 KHz, inside the desired 50-200 KHz range.
	// XXX: this will not work properly for other clock speeds, and
	// this code should use F_CPU to determine the prescale factor.
	sbi(ADCSRA, ADPS2);
    31ea:	ea e7       	ldi	r30, 0x7A	; 122
    31ec:	f0 e0       	ldi	r31, 0x00	; 0
    31ee:	80 81       	ld	r24, Z
    31f0:	84 60       	ori	r24, 0x04	; 4
    31f2:	80 83       	st	Z, r24
	sbi(ADCSRA, ADPS1);
    31f4:	80 81       	ld	r24, Z
    31f6:	82 60       	ori	r24, 0x02	; 2
    31f8:	80 83       	st	Z, r24
	sbi(ADCSRA, ADPS0);
    31fa:	80 81       	ld	r24, Z
    31fc:	81 60       	ori	r24, 0x01	; 1
    31fe:	80 83       	st	Z, r24

	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3200:	80 81       	ld	r24, Z
    3202:	80 68       	ori	r24, 0x80	; 128
    3204:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3206:	10 92 c1 00 	sts	0x00C1, r1
#endif
}
    320a:	08 95       	ret

0000320c <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    320c:	cf 93       	push	r28
    320e:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    3210:	48 2f       	mov	r20, r24
    3212:	50 e0       	ldi	r21, 0x00	; 0
    3214:	ca 01       	movw	r24, r20
    3216:	86 55       	subi	r24, 0x56	; 86
    3218:	9f 4f       	sbci	r25, 0xFF	; 255
    321a:	fc 01       	movw	r30, r24
    321c:	34 91       	lpm	r19, Z
	uint8_t port = digitalPinToPort(pin);
    321e:	4a 56       	subi	r20, 0x6A	; 106
    3220:	5f 4f       	sbci	r21, 0xFF	; 255
    3222:	fa 01       	movw	r30, r20
    3224:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    3226:	88 23       	and	r24, r24
    3228:	69 f1       	breq	.+90     	; 0x3284 <pinMode+0x78>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	88 0f       	add	r24, r24
    322e:	99 1f       	adc	r25, r25
    3230:	fc 01       	movw	r30, r24
    3232:	e8 58       	subi	r30, 0x88	; 136
    3234:	ff 4f       	sbci	r31, 0xFF	; 255
    3236:	a5 91       	lpm	r26, Z+
    3238:	b4 91       	lpm	r27, Z
	out = portOutputRegister(port);
    323a:	fc 01       	movw	r30, r24
    323c:	ee 57       	subi	r30, 0x7E	; 126
    323e:	ff 4f       	sbci	r31, 0xFF	; 255
    3240:	c5 91       	lpm	r28, Z+
    3242:	d4 91       	lpm	r29, Z

	if (mode == INPUT) { 
    3244:	66 23       	and	r22, r22
    3246:	51 f4       	brne	.+20     	; 0x325c <pinMode+0x50>
		uint8_t oldSREG = SREG;
    3248:	2f b7       	in	r18, 0x3f	; 63
                cli();
    324a:	f8 94       	cli
		*reg &= ~bit;
    324c:	8c 91       	ld	r24, X
    324e:	93 2f       	mov	r25, r19
    3250:	90 95       	com	r25
    3252:	89 23       	and	r24, r25
    3254:	8c 93       	st	X, r24
		*out &= ~bit;
    3256:	88 81       	ld	r24, Y
    3258:	89 23       	and	r24, r25
    325a:	0b c0       	rjmp	.+22     	; 0x3272 <pinMode+0x66>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    325c:	62 30       	cpi	r22, 0x02	; 2
    325e:	61 f4       	brne	.+24     	; 0x3278 <pinMode+0x6c>
		uint8_t oldSREG = SREG;
    3260:	2f b7       	in	r18, 0x3f	; 63
                cli();
    3262:	f8 94       	cli
		*reg &= ~bit;
    3264:	8c 91       	ld	r24, X
    3266:	93 2f       	mov	r25, r19
    3268:	90 95       	com	r25
    326a:	89 23       	and	r24, r25
    326c:	8c 93       	st	X, r24
		*out |= bit;
    326e:	88 81       	ld	r24, Y
    3270:	83 2b       	or	r24, r19
    3272:	88 83       	st	Y, r24
		SREG = oldSREG;
    3274:	2f bf       	out	0x3f, r18	; 63
    3276:	06 c0       	rjmp	.+12     	; 0x3284 <pinMode+0x78>
	} else {
		uint8_t oldSREG = SREG;
    3278:	9f b7       	in	r25, 0x3f	; 63
                cli();
    327a:	f8 94       	cli
		*reg |= bit;
    327c:	8c 91       	ld	r24, X
    327e:	83 2b       	or	r24, r19
    3280:	8c 93       	st	X, r24
		SREG = oldSREG;
    3282:	9f bf       	out	0x3f, r25	; 63
	}
}
    3284:	df 91       	pop	r29
    3286:	cf 91       	pop	r28
    3288:	08 95       	ret

0000328a <digitalWrite>:
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
	uint8_t timer = digitalPinToTimer(pin);
    328a:	48 2f       	mov	r20, r24
    328c:	50 e0       	ldi	r21, 0x00	; 0
    328e:	ca 01       	movw	r24, r20
    3290:	82 54       	subi	r24, 0x42	; 66
    3292:	9f 4f       	sbci	r25, 0xFF	; 255
    3294:	fc 01       	movw	r30, r24
    3296:	24 91       	lpm	r18, Z
	uint8_t bit = digitalPinToBitMask(pin);
    3298:	ca 01       	movw	r24, r20
    329a:	86 55       	subi	r24, 0x56	; 86
    329c:	9f 4f       	sbci	r25, 0xFF	; 255
    329e:	fc 01       	movw	r30, r24
    32a0:	94 91       	lpm	r25, Z
	uint8_t port = digitalPinToPort(pin);
    32a2:	4a 56       	subi	r20, 0x6A	; 106
    32a4:	5f 4f       	sbci	r21, 0xFF	; 255
    32a6:	fa 01       	movw	r30, r20
    32a8:	34 91       	lpm	r19, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    32aa:	33 23       	and	r19, r19
    32ac:	09 f4       	brne	.+2      	; 0x32b0 <digitalWrite+0x26>
    32ae:	40 c0       	rjmp	.+128    	; 0x3330 <digitalWrite+0xa6>

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    32b0:	22 23       	and	r18, r18
    32b2:	51 f1       	breq	.+84     	; 0x3308 <digitalWrite+0x7e>
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    32b4:	23 30       	cpi	r18, 0x03	; 3
    32b6:	71 f0       	breq	.+28     	; 0x32d4 <digitalWrite+0x4a>
    32b8:	24 30       	cpi	r18, 0x04	; 4
    32ba:	28 f4       	brcc	.+10     	; 0x32c6 <digitalWrite+0x3c>
    32bc:	21 30       	cpi	r18, 0x01	; 1
    32be:	a1 f0       	breq	.+40     	; 0x32e8 <digitalWrite+0x5e>
    32c0:	22 30       	cpi	r18, 0x02	; 2
    32c2:	11 f5       	brne	.+68     	; 0x3308 <digitalWrite+0x7e>
    32c4:	14 c0       	rjmp	.+40     	; 0x32ee <digitalWrite+0x64>
    32c6:	26 30       	cpi	r18, 0x06	; 6
    32c8:	b1 f0       	breq	.+44     	; 0x32f6 <digitalWrite+0x6c>
    32ca:	27 30       	cpi	r18, 0x07	; 7
    32cc:	c1 f0       	breq	.+48     	; 0x32fe <digitalWrite+0x74>
    32ce:	24 30       	cpi	r18, 0x04	; 4
    32d0:	d9 f4       	brne	.+54     	; 0x3308 <digitalWrite+0x7e>
    32d2:	04 c0       	rjmp	.+8      	; 0x32dc <digitalWrite+0x52>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    32d4:	80 91 80 00 	lds	r24, 0x0080
    32d8:	8f 77       	andi	r24, 0x7F	; 127
    32da:	03 c0       	rjmp	.+6      	; 0x32e2 <digitalWrite+0x58>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    32dc:	80 91 80 00 	lds	r24, 0x0080
    32e0:	8f 7d       	andi	r24, 0xDF	; 223
    32e2:	80 93 80 00 	sts	0x0080, r24
    32e6:	10 c0       	rjmp	.+32     	; 0x3308 <digitalWrite+0x7e>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    32e8:	84 b5       	in	r24, 0x24	; 36
    32ea:	8f 77       	andi	r24, 0x7F	; 127
    32ec:	02 c0       	rjmp	.+4      	; 0x32f2 <digitalWrite+0x68>
		#endif
		
		#if defined(TIMER0B) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    32ee:	84 b5       	in	r24, 0x24	; 36
    32f0:	8f 7d       	andi	r24, 0xDF	; 223
    32f2:	84 bd       	out	0x24, r24	; 36
    32f4:	09 c0       	rjmp	.+18     	; 0x3308 <digitalWrite+0x7e>
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    32f6:	80 91 b0 00 	lds	r24, 0x00B0
    32fa:	8f 77       	andi	r24, 0x7F	; 127
    32fc:	03 c0       	rjmp	.+6      	; 0x3304 <digitalWrite+0x7a>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    32fe:	80 91 b0 00 	lds	r24, 0x00B0
    3302:	8f 7d       	andi	r24, 0xDF	; 223
    3304:	80 93 b0 00 	sts	0x00B0, r24

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	out = portOutputRegister(port);
    3308:	e3 2f       	mov	r30, r19
    330a:	f0 e0       	ldi	r31, 0x00	; 0
    330c:	ee 0f       	add	r30, r30
    330e:	ff 1f       	adc	r31, r31
    3310:	ee 57       	subi	r30, 0x7E	; 126
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	a5 91       	lpm	r26, Z+
    3316:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    3318:	2f b7       	in	r18, 0x3f	; 63
	cli();
    331a:	f8 94       	cli

	if (val == LOW) {
    331c:	66 23       	and	r22, r22
    331e:	21 f4       	brne	.+8      	; 0x3328 <digitalWrite+0x9e>
		*out &= ~bit;
    3320:	8c 91       	ld	r24, X
    3322:	90 95       	com	r25
    3324:	89 23       	and	r24, r25
    3326:	02 c0       	rjmp	.+4      	; 0x332c <digitalWrite+0xa2>
	} else {
		*out |= bit;
    3328:	8c 91       	ld	r24, X
    332a:	89 2b       	or	r24, r25
    332c:	8c 93       	st	X, r24
	}

	SREG = oldSREG;
    332e:	2f bf       	out	0x3f, r18	; 63
    3330:	08 95       	ret

00003332 <_Z11serialEventv>:
  return 1;
}

HardwareSerial::operator bool() {
	return true;
}
    3332:	08 95       	ret

00003334 <__vector_18>:
    3334:	1f 92       	push	r1
    3336:	0f 92       	push	r0
    3338:	0f b6       	in	r0, 0x3f	; 63
    333a:	0f 92       	push	r0
    333c:	11 24       	eor	r1, r1
    333e:	2f 93       	push	r18
    3340:	3f 93       	push	r19
    3342:	4f 93       	push	r20
    3344:	8f 93       	push	r24
    3346:	9f 93       	push	r25
    3348:	ef 93       	push	r30
    334a:	ff 93       	push	r31
    334c:	80 91 c0 00 	lds	r24, 0x00C0
    3350:	82 fd       	sbrc	r24, 2
    3352:	1d c0       	rjmp	.+58     	; 0x338e <__vector_18+0x5a>
    3354:	40 91 c6 00 	lds	r20, 0x00C6
    3358:	20 91 ae 06 	lds	r18, 0x06AE
    335c:	30 91 af 06 	lds	r19, 0x06AF
    3360:	2f 5f       	subi	r18, 0xFF	; 255
    3362:	3f 4f       	sbci	r19, 0xFF	; 255
    3364:	2f 73       	andi	r18, 0x3F	; 63
    3366:	30 70       	andi	r19, 0x00	; 0
    3368:	80 91 b0 06 	lds	r24, 0x06B0
    336c:	90 91 b1 06 	lds	r25, 0x06B1
    3370:	28 17       	cp	r18, r24
    3372:	39 07       	cpc	r19, r25
    3374:	71 f0       	breq	.+28     	; 0x3392 <__vector_18+0x5e>
    3376:	e0 91 ae 06 	lds	r30, 0x06AE
    337a:	f0 91 af 06 	lds	r31, 0x06AF
    337e:	e2 59       	subi	r30, 0x92	; 146
    3380:	f9 4f       	sbci	r31, 0xF9	; 249
    3382:	40 83       	st	Z, r20
    3384:	30 93 af 06 	sts	0x06AF, r19
    3388:	20 93 ae 06 	sts	0x06AE, r18
    338c:	02 c0       	rjmp	.+4      	; 0x3392 <__vector_18+0x5e>
    338e:	80 91 c6 00 	lds	r24, 0x00C6
    3392:	ff 91       	pop	r31
    3394:	ef 91       	pop	r30
    3396:	9f 91       	pop	r25
    3398:	8f 91       	pop	r24
    339a:	4f 91       	pop	r20
    339c:	3f 91       	pop	r19
    339e:	2f 91       	pop	r18
    33a0:	0f 90       	pop	r0
    33a2:	0f be       	out	0x3f, r0	; 63
    33a4:	0f 90       	pop	r0
    33a6:	1f 90       	pop	r1
    33a8:	18 95       	reti

000033aa <_Z14serialEventRunv>:
    33aa:	e0 91 02 07 	lds	r30, 0x0702
    33ae:	f0 91 03 07 	lds	r31, 0x0703
    33b2:	e0 5c       	subi	r30, 0xC0	; 192
    33b4:	ff 4f       	sbci	r31, 0xFF	; 255
    33b6:	81 91       	ld	r24, Z+
    33b8:	91 91       	ld	r25, Z+
    33ba:	20 81       	ld	r18, Z
    33bc:	31 81       	ldd	r19, Z+1	; 0x01
    33be:	82 1b       	sub	r24, r18
    33c0:	93 0b       	sbc	r25, r19
    33c2:	8f 73       	andi	r24, 0x3F	; 63
    33c4:	90 70       	andi	r25, 0x00	; 0
    33c6:	89 2b       	or	r24, r25
    33c8:	11 f0       	breq	.+4      	; 0x33ce <_Z14serialEventRunv+0x24>
    33ca:	0e 94 99 19 	call	0x3332	; 0x3332 <_Z11serialEventv>
    33ce:	08 95       	ret

000033d0 <__vector_19>:
    33d0:	1f 92       	push	r1
    33d2:	0f 92       	push	r0
    33d4:	0f b6       	in	r0, 0x3f	; 63
    33d6:	0f 92       	push	r0
    33d8:	11 24       	eor	r1, r1
    33da:	2f 93       	push	r18
    33dc:	3f 93       	push	r19
    33de:	8f 93       	push	r24
    33e0:	9f 93       	push	r25
    33e2:	ef 93       	push	r30
    33e4:	ff 93       	push	r31
    33e6:	20 91 f2 06 	lds	r18, 0x06F2
    33ea:	30 91 f3 06 	lds	r19, 0x06F3
    33ee:	80 91 f4 06 	lds	r24, 0x06F4
    33f2:	90 91 f5 06 	lds	r25, 0x06F5
    33f6:	28 17       	cp	r18, r24
    33f8:	39 07       	cpc	r19, r25
    33fa:	31 f4       	brne	.+12     	; 0x3408 <__vector_19+0x38>
    33fc:	80 91 c1 00 	lds	r24, 0x00C1
    3400:	8f 7d       	andi	r24, 0xDF	; 223
    3402:	80 93 c1 00 	sts	0x00C1, r24
    3406:	14 c0       	rjmp	.+40     	; 0x3430 <__vector_19+0x60>
    3408:	e0 91 f4 06 	lds	r30, 0x06F4
    340c:	f0 91 f5 06 	lds	r31, 0x06F5
    3410:	ee 54       	subi	r30, 0x4E	; 78
    3412:	f9 4f       	sbci	r31, 0xF9	; 249
    3414:	20 81       	ld	r18, Z
    3416:	80 91 f4 06 	lds	r24, 0x06F4
    341a:	90 91 f5 06 	lds	r25, 0x06F5
    341e:	01 96       	adiw	r24, 0x01	; 1
    3420:	8f 73       	andi	r24, 0x3F	; 63
    3422:	90 70       	andi	r25, 0x00	; 0
    3424:	90 93 f5 06 	sts	0x06F5, r25
    3428:	80 93 f4 06 	sts	0x06F4, r24
    342c:	20 93 c6 00 	sts	0x00C6, r18
    3430:	ff 91       	pop	r31
    3432:	ef 91       	pop	r30
    3434:	9f 91       	pop	r25
    3436:	8f 91       	pop	r24
    3438:	3f 91       	pop	r19
    343a:	2f 91       	pop	r18
    343c:	0f 90       	pop	r0
    343e:	0f be       	out	0x3f, r0	; 63
    3440:	0f 90       	pop	r0
    3442:	1f 90       	pop	r1
    3444:	18 95       	reti

00003446 <_ZN14HardwareSerial5beginEm>:
    3446:	af 92       	push	r10
    3448:	bf 92       	push	r11
    344a:	df 92       	push	r13
    344c:	ef 92       	push	r14
    344e:	ff 92       	push	r15
    3450:	0f 93       	push	r16
    3452:	1f 93       	push	r17
    3454:	cf 93       	push	r28
    3456:	df 93       	push	r29
    3458:	ec 01       	movw	r28, r24
    345a:	7a 01       	movw	r14, r20
    345c:	8b 01       	movw	r16, r22
    345e:	dd 24       	eor	r13, r13
    3460:	40 30       	cpi	r20, 0x00	; 0
    3462:	81 ee       	ldi	r24, 0xE1	; 225
    3464:	58 07       	cpc	r21, r24
    3466:	80 e0       	ldi	r24, 0x00	; 0
    3468:	68 07       	cpc	r22, r24
    346a:	80 e0       	ldi	r24, 0x00	; 0
    346c:	78 07       	cpc	r23, r24
    346e:	11 f0       	breq	.+4      	; 0x3474 <_ZN14HardwareSerial5beginEm+0x2e>
    3470:	dd 24       	eor	r13, r13
    3472:	d3 94       	inc	r13
    3474:	91 e0       	ldi	r25, 0x01	; 1
    3476:	a9 2e       	mov	r10, r25
    3478:	b1 2c       	mov	r11, r1
    347a:	ec 89       	ldd	r30, Y+20	; 0x14
    347c:	fd 89       	ldd	r31, Y+21	; 0x15
    347e:	dd 20       	and	r13, r13
    3480:	69 f0       	breq	.+26     	; 0x349c <_ZN14HardwareSerial5beginEm+0x56>
    3482:	c5 01       	movw	r24, r10
    3484:	08 a0       	lds	r16, 0x88
    3486:	02 c0       	rjmp	.+4      	; 0x348c <_ZN14HardwareSerial5beginEm+0x46>
    3488:	88 0f       	add	r24, r24
    348a:	99 1f       	adc	r25, r25
    348c:	0a 94       	dec	r0
    348e:	e2 f7       	brpl	.-8      	; 0x3488 <_ZN14HardwareSerial5beginEm+0x42>
    3490:	80 83       	st	Z, r24
    3492:	60 e0       	ldi	r22, 0x00	; 0
    3494:	79 e0       	ldi	r23, 0x09	; 9
    3496:	8d e3       	ldi	r24, 0x3D	; 61
    3498:	90 e0       	ldi	r25, 0x00	; 0
    349a:	05 c0       	rjmp	.+10     	; 0x34a6 <_ZN14HardwareSerial5beginEm+0x60>
    349c:	10 82       	st	Z, r1
    349e:	60 e8       	ldi	r22, 0x80	; 128
    34a0:	74 e8       	ldi	r23, 0x84	; 132
    34a2:	8e e1       	ldi	r24, 0x1E	; 30
    34a4:	90 e0       	ldi	r25, 0x00	; 0
    34a6:	a8 01       	movw	r20, r16
    34a8:	97 01       	movw	r18, r14
    34aa:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodsi4>
    34ae:	21 50       	subi	r18, 0x01	; 1
    34b0:	30 40       	sbci	r19, 0x00	; 0
    34b2:	40 40       	sbci	r20, 0x00	; 0
    34b4:	50 40       	sbci	r21, 0x00	; 0
    34b6:	56 95       	lsr	r21
    34b8:	47 95       	ror	r20
    34ba:	37 95       	ror	r19
    34bc:	27 95       	ror	r18
    34be:	80 e1       	ldi	r24, 0x10	; 16
    34c0:	20 30       	cpi	r18, 0x00	; 0
    34c2:	38 07       	cpc	r19, r24
    34c4:	20 f0       	brcs	.+8      	; 0x34ce <_ZN14HardwareSerial5beginEm+0x88>
    34c6:	dd 20       	and	r13, r13
    34c8:	11 f0       	breq	.+4      	; 0x34ce <_ZN14HardwareSerial5beginEm+0x88>
    34ca:	dd 24       	eor	r13, r13
    34cc:	d6 cf       	rjmp	.-84     	; 0x347a <_ZN14HardwareSerial5beginEm+0x34>
    34ce:	e8 89       	ldd	r30, Y+16	; 0x10
    34d0:	f9 89       	ldd	r31, Y+17	; 0x11
    34d2:	30 83       	st	Z, r19
    34d4:	ea 89       	ldd	r30, Y+18	; 0x12
    34d6:	fb 89       	ldd	r31, Y+19	; 0x13
    34d8:	20 83       	st	Z, r18
    34da:	19 a2       	lds	r17, 0x99
    34dc:	ee 89       	ldd	r30, Y+22	; 0x16
    34de:	ff 89       	ldd	r31, Y+23	; 0x17
    34e0:	40 81       	ld	r20, Z
    34e2:	21 e0       	ldi	r18, 0x01	; 1
    34e4:	30 e0       	ldi	r19, 0x00	; 0
    34e6:	c9 01       	movw	r24, r18
    34e8:	0c 8c       	ldd	r0, Y+28	; 0x1c
    34ea:	02 c0       	rjmp	.+4      	; 0x34f0 <_ZN14HardwareSerial5beginEm+0xaa>
    34ec:	88 0f       	add	r24, r24
    34ee:	99 1f       	adc	r25, r25
    34f0:	0a 94       	dec	r0
    34f2:	e2 f7       	brpl	.-8      	; 0x34ec <_ZN14HardwareSerial5beginEm+0xa6>
    34f4:	48 2b       	or	r20, r24
    34f6:	40 83       	st	Z, r20
    34f8:	ee 89       	ldd	r30, Y+22	; 0x16
    34fa:	ff 89       	ldd	r31, Y+23	; 0x17
    34fc:	40 81       	ld	r20, Z
    34fe:	c9 01       	movw	r24, r18
    3500:	0d 8c       	ldd	r0, Y+29	; 0x1d
    3502:	02 c0       	rjmp	.+4      	; 0x3508 <_ZN14HardwareSerial5beginEm+0xc2>
    3504:	88 0f       	add	r24, r24
    3506:	99 1f       	adc	r25, r25
    3508:	0a 94       	dec	r0
    350a:	e2 f7       	brpl	.-8      	; 0x3504 <_ZN14HardwareSerial5beginEm+0xbe>
    350c:	48 2b       	or	r20, r24
    350e:	40 83       	st	Z, r20
    3510:	ee 89       	ldd	r30, Y+22	; 0x16
    3512:	ff 89       	ldd	r31, Y+23	; 0x17
    3514:	40 81       	ld	r20, Z
    3516:	c9 01       	movw	r24, r18
    3518:	0e 8c       	ldd	r0, Y+30	; 0x1e
    351a:	02 c0       	rjmp	.+4      	; 0x3520 <_ZN14HardwareSerial5beginEm+0xda>
    351c:	88 0f       	add	r24, r24
    351e:	99 1f       	adc	r25, r25
    3520:	0a 94       	dec	r0
    3522:	e2 f7       	brpl	.-8      	; 0x351c <_ZN14HardwareSerial5beginEm+0xd6>
    3524:	48 2b       	or	r20, r24
    3526:	40 83       	st	Z, r20
    3528:	ee 89       	ldd	r30, Y+22	; 0x16
    352a:	ff 89       	ldd	r31, Y+23	; 0x17
    352c:	80 81       	ld	r24, Z
    352e:	0f 8c       	ldd	r0, Y+31	; 0x1f
    3530:	02 c0       	rjmp	.+4      	; 0x3536 <_ZN14HardwareSerial5beginEm+0xf0>
    3532:	22 0f       	add	r18, r18
    3534:	33 1f       	adc	r19, r19
    3536:	0a 94       	dec	r0
    3538:	e2 f7       	brpl	.-8      	; 0x3532 <_ZN14HardwareSerial5beginEm+0xec>
    353a:	20 95       	com	r18
    353c:	28 23       	and	r18, r24
    353e:	20 83       	st	Z, r18
    3540:	df 91       	pop	r29
    3542:	cf 91       	pop	r28
    3544:	1f 91       	pop	r17
    3546:	0f 91       	pop	r16
    3548:	ff 90       	pop	r15
    354a:	ef 90       	pop	r14
    354c:	df 90       	pop	r13
    354e:	bf 90       	pop	r11
    3550:	af 90       	pop	r10
    3552:	08 95       	ret

00003554 <_ZN14HardwareSerial9availableEv>:
    3554:	dc 01       	movw	r26, r24
    3556:	1c 96       	adiw	r26, 0x0c	; 12
    3558:	ed 91       	ld	r30, X+
    355a:	fc 91       	ld	r31, X
    355c:	1d 97       	sbiw	r26, 0x0d	; 13
    355e:	e0 5c       	subi	r30, 0xC0	; 192
    3560:	ff 4f       	sbci	r31, 0xFF	; 255
    3562:	21 91       	ld	r18, Z+
    3564:	31 91       	ld	r19, Z+
    3566:	80 81       	ld	r24, Z
    3568:	91 81       	ldd	r25, Z+1	; 0x01
    356a:	28 1b       	sub	r18, r24
    356c:	39 0b       	sbc	r19, r25
    356e:	2f 73       	andi	r18, 0x3F	; 63
    3570:	30 70       	andi	r19, 0x00	; 0
    3572:	c9 01       	movw	r24, r18
    3574:	08 95       	ret

00003576 <_ZN14HardwareSerial4peekEv>:
    3576:	dc 01       	movw	r26, r24
    3578:	1c 96       	adiw	r26, 0x0c	; 12
    357a:	ed 91       	ld	r30, X+
    357c:	fc 91       	ld	r31, X
    357e:	1d 97       	sbiw	r26, 0x0d	; 13
    3580:	e0 5c       	subi	r30, 0xC0	; 192
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	20 81       	ld	r18, Z
    3586:	31 81       	ldd	r19, Z+1	; 0x01
    3588:	e0 54       	subi	r30, 0x40	; 64
    358a:	f0 40       	sbci	r31, 0x00	; 0
    358c:	df 01       	movw	r26, r30
    358e:	ae 5b       	subi	r26, 0xBE	; 190
    3590:	bf 4f       	sbci	r27, 0xFF	; 255
    3592:	8d 91       	ld	r24, X+
    3594:	9c 91       	ld	r25, X
    3596:	11 97       	sbiw	r26, 0x01	; 1
    3598:	28 17       	cp	r18, r24
    359a:	39 07       	cpc	r19, r25
    359c:	19 f4       	brne	.+6      	; 0x35a4 <_ZN14HardwareSerial4peekEv+0x2e>
    359e:	2f ef       	ldi	r18, 0xFF	; 255
    35a0:	3f ef       	ldi	r19, 0xFF	; 255
    35a2:	07 c0       	rjmp	.+14     	; 0x35b2 <_ZN14HardwareSerial4peekEv+0x3c>
    35a4:	8d 91       	ld	r24, X+
    35a6:	9c 91       	ld	r25, X
    35a8:	e8 0f       	add	r30, r24
    35aa:	f9 1f       	adc	r31, r25
    35ac:	80 81       	ld	r24, Z
    35ae:	28 2f       	mov	r18, r24
    35b0:	30 e0       	ldi	r19, 0x00	; 0
    35b2:	c9 01       	movw	r24, r18
    35b4:	08 95       	ret

000035b6 <_ZN14HardwareSerial4readEv>:
    35b6:	dc 01       	movw	r26, r24
    35b8:	1c 96       	adiw	r26, 0x0c	; 12
    35ba:	ed 91       	ld	r30, X+
    35bc:	fc 91       	ld	r31, X
    35be:	1d 97       	sbiw	r26, 0x0d	; 13
    35c0:	e0 5c       	subi	r30, 0xC0	; 192
    35c2:	ff 4f       	sbci	r31, 0xFF	; 255
    35c4:	20 81       	ld	r18, Z
    35c6:	31 81       	ldd	r19, Z+1	; 0x01
    35c8:	e0 54       	subi	r30, 0x40	; 64
    35ca:	f0 40       	sbci	r31, 0x00	; 0
    35cc:	df 01       	movw	r26, r30
    35ce:	ae 5b       	subi	r26, 0xBE	; 190
    35d0:	bf 4f       	sbci	r27, 0xFF	; 255
    35d2:	8d 91       	ld	r24, X+
    35d4:	9c 91       	ld	r25, X
    35d6:	11 97       	sbiw	r26, 0x01	; 1
    35d8:	28 17       	cp	r18, r24
    35da:	39 07       	cpc	r19, r25
    35dc:	19 f4       	brne	.+6      	; 0x35e4 <_ZN14HardwareSerial4readEv+0x2e>
    35de:	2f ef       	ldi	r18, 0xFF	; 255
    35e0:	3f ef       	ldi	r19, 0xFF	; 255
    35e2:	10 c0       	rjmp	.+32     	; 0x3604 <_ZN14HardwareSerial4readEv+0x4e>
    35e4:	8d 91       	ld	r24, X+
    35e6:	9c 91       	ld	r25, X
    35e8:	11 97       	sbiw	r26, 0x01	; 1
    35ea:	e8 0f       	add	r30, r24
    35ec:	f9 1f       	adc	r31, r25
    35ee:	20 81       	ld	r18, Z
    35f0:	8d 91       	ld	r24, X+
    35f2:	9c 91       	ld	r25, X
    35f4:	11 97       	sbiw	r26, 0x01	; 1
    35f6:	01 96       	adiw	r24, 0x01	; 1
    35f8:	8f 73       	andi	r24, 0x3F	; 63
    35fa:	90 70       	andi	r25, 0x00	; 0
    35fc:	11 96       	adiw	r26, 0x01	; 1
    35fe:	9c 93       	st	X, r25
    3600:	8e 93       	st	-X, r24
    3602:	30 e0       	ldi	r19, 0x00	; 0
    3604:	c9 01       	movw	r24, r18
    3606:	08 95       	ret

00003608 <_ZN14HardwareSerial5flushEv>:
    3608:	dc 01       	movw	r26, r24
    360a:	91 96       	adiw	r26, 0x21	; 33
    360c:	8c 91       	ld	r24, X
    360e:	91 97       	sbiw	r26, 0x21	; 33
    3610:	88 23       	and	r24, r24
    3612:	39 f0       	breq	.+14     	; 0x3622 <_ZN14HardwareSerial5flushEv+0x1a>
    3614:	54 96       	adiw	r26, 0x14	; 20
    3616:	ed 91       	ld	r30, X+
    3618:	fc 91       	ld	r31, X
    361a:	55 97       	sbiw	r26, 0x15	; 21
    361c:	80 81       	ld	r24, Z
    361e:	86 ff       	sbrs	r24, 6
    3620:	f9 cf       	rjmp	.-14     	; 0x3614 <_ZN14HardwareSerial5flushEv+0xc>
    3622:	91 96       	adiw	r26, 0x21	; 33
    3624:	1c 92       	st	X, r1
    3626:	08 95       	ret

00003628 <_ZN14HardwareSerial5writeEh>:
    3628:	cf 93       	push	r28
    362a:	df 93       	push	r29
    362c:	ec 01       	movw	r28, r24
    362e:	ee 85       	ldd	r30, Y+14	; 0x0e
    3630:	ff 85       	ldd	r31, Y+15	; 0x0f
    3632:	e0 5c       	subi	r30, 0xC0	; 192
    3634:	ff 4f       	sbci	r31, 0xFF	; 255
    3636:	20 81       	ld	r18, Z
    3638:	31 81       	ldd	r19, Z+1	; 0x01
    363a:	e0 54       	subi	r30, 0x40	; 64
    363c:	f0 40       	sbci	r31, 0x00	; 0
    363e:	2f 5f       	subi	r18, 0xFF	; 255
    3640:	3f 4f       	sbci	r19, 0xFF	; 255
    3642:	2f 73       	andi	r18, 0x3F	; 63
    3644:	30 70       	andi	r19, 0x00	; 0
    3646:	df 01       	movw	r26, r30
    3648:	ae 5b       	subi	r26, 0xBE	; 190
    364a:	bf 4f       	sbci	r27, 0xFF	; 255
    364c:	8d 91       	ld	r24, X+
    364e:	9c 91       	ld	r25, X
    3650:	11 97       	sbiw	r26, 0x01	; 1
    3652:	28 17       	cp	r18, r24
    3654:	39 07       	cpc	r19, r25
    3656:	d1 f3       	breq	.-12     	; 0x364c <_ZN14HardwareSerial5writeEh+0x24>
    3658:	e0 5c       	subi	r30, 0xC0	; 192
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	80 81       	ld	r24, Z
    365e:	91 81       	ldd	r25, Z+1	; 0x01
    3660:	e0 54       	subi	r30, 0x40	; 64
    3662:	f0 40       	sbci	r31, 0x00	; 0
    3664:	e8 0f       	add	r30, r24
    3666:	f9 1f       	adc	r31, r25
    3668:	60 83       	st	Z, r22
    366a:	ee 85       	ldd	r30, Y+14	; 0x0e
    366c:	ff 85       	ldd	r31, Y+15	; 0x0f
    366e:	e0 5c       	subi	r30, 0xC0	; 192
    3670:	ff 4f       	sbci	r31, 0xFF	; 255
    3672:	31 83       	std	Z+1, r19	; 0x01
    3674:	20 83       	st	Z, r18
    3676:	ee 89       	ldd	r30, Y+22	; 0x16
    3678:	ff 89       	ldd	r31, Y+23	; 0x17
    367a:	20 81       	ld	r18, Z
    367c:	81 e0       	ldi	r24, 0x01	; 1
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	0f 8c       	ldd	r0, Y+31	; 0x1f
    3682:	02 c0       	rjmp	.+4      	; 0x3688 <_ZN14HardwareSerial5writeEh+0x60>
    3684:	88 0f       	add	r24, r24
    3686:	99 1f       	adc	r25, r25
    3688:	0a 94       	dec	r0
    368a:	e2 f7       	brpl	.-8      	; 0x3684 <_ZN14HardwareSerial5writeEh+0x5c>
    368c:	28 2b       	or	r18, r24
    368e:	20 83       	st	Z, r18
    3690:	81 e0       	ldi	r24, 0x01	; 1
    3692:	89 a3       	lds	r24, 0x59
    3694:	ec 89       	ldd	r30, Y+20	; 0x14
    3696:	fd 89       	ldd	r31, Y+21	; 0x15
    3698:	80 81       	ld	r24, Z
    369a:	80 64       	ori	r24, 0x40	; 64
    369c:	80 83       	st	Z, r24
    369e:	81 e0       	ldi	r24, 0x01	; 1
    36a0:	90 e0       	ldi	r25, 0x00	; 0
    36a2:	df 91       	pop	r29
    36a4:	cf 91       	pop	r28
    36a6:	08 95       	ret

000036a8 <_GLOBAL__I_rx_buffer>:
    36a8:	10 92 f9 06 	sts	0x06F9, r1
    36ac:	10 92 f8 06 	sts	0x06F8, r1
    36b0:	88 ee       	ldi	r24, 0xE8	; 232
    36b2:	93 e0       	ldi	r25, 0x03	; 3
    36b4:	a0 e0       	ldi	r26, 0x00	; 0
    36b6:	b0 e0       	ldi	r27, 0x00	; 0
    36b8:	80 93 fa 06 	sts	0x06FA, r24
    36bc:	90 93 fb 06 	sts	0x06FB, r25
    36c0:	a0 93 fc 06 	sts	0x06FC, r26
    36c4:	b0 93 fd 06 	sts	0x06FD, r27

HardwareSerial::HardwareSerial(ring_buffer *rx_buffer, ring_buffer *tx_buffer,
  volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
  volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
  volatile uint8_t *ucsrc, volatile uint8_t *udr,
  uint8_t rxen, uint8_t txen, uint8_t rxcie, uint8_t udrie, uint8_t u2x)
    36c8:	80 ed       	ldi	r24, 0xD0	; 208
    36ca:	93 e0       	ldi	r25, 0x03	; 3
    36cc:	90 93 f7 06 	sts	0x06F7, r25
    36d0:	80 93 f6 06 	sts	0x06F6, r24
{
  _rx_buffer = rx_buffer;
    36d4:	8e e6       	ldi	r24, 0x6E	; 110
    36d6:	96 e0       	ldi	r25, 0x06	; 6
    36d8:	90 93 03 07 	sts	0x0703, r25
    36dc:	80 93 02 07 	sts	0x0702, r24
  _tx_buffer = tx_buffer;
    36e0:	82 eb       	ldi	r24, 0xB2	; 178
    36e2:	96 e0       	ldi	r25, 0x06	; 6
    36e4:	90 93 05 07 	sts	0x0705, r25
    36e8:	80 93 04 07 	sts	0x0704, r24
  _ubrrh = ubrrh;
    36ec:	85 ec       	ldi	r24, 0xC5	; 197
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	90 93 07 07 	sts	0x0707, r25
    36f4:	80 93 06 07 	sts	0x0706, r24
  _ubrrl = ubrrl;
    36f8:	84 ec       	ldi	r24, 0xC4	; 196
    36fa:	90 e0       	ldi	r25, 0x00	; 0
    36fc:	90 93 09 07 	sts	0x0709, r25
    3700:	80 93 08 07 	sts	0x0708, r24
  _ucsra = ucsra;
    3704:	80 ec       	ldi	r24, 0xC0	; 192
    3706:	90 e0       	ldi	r25, 0x00	; 0
    3708:	90 93 0b 07 	sts	0x070B, r25
    370c:	80 93 0a 07 	sts	0x070A, r24
  _ucsrb = ucsrb;
    3710:	81 ec       	ldi	r24, 0xC1	; 193
    3712:	90 e0       	ldi	r25, 0x00	; 0
    3714:	90 93 0d 07 	sts	0x070D, r25
    3718:	80 93 0c 07 	sts	0x070C, r24
  _ucsrc = ucsrc;
    371c:	82 ec       	ldi	r24, 0xC2	; 194
    371e:	90 e0       	ldi	r25, 0x00	; 0
    3720:	90 93 0f 07 	sts	0x070F, r25
    3724:	80 93 0e 07 	sts	0x070E, r24
  _udr = udr;
    3728:	86 ec       	ldi	r24, 0xC6	; 198
    372a:	90 e0       	ldi	r25, 0x00	; 0
    372c:	90 93 11 07 	sts	0x0711, r25
    3730:	80 93 10 07 	sts	0x0710, r24
  _rxen = rxen;
    3734:	84 e0       	ldi	r24, 0x04	; 4
    3736:	80 93 12 07 	sts	0x0712, r24
  _txen = txen;
    373a:	83 e0       	ldi	r24, 0x03	; 3
    373c:	80 93 13 07 	sts	0x0713, r24
  _rxcie = rxcie;
    3740:	87 e0       	ldi	r24, 0x07	; 7
    3742:	80 93 14 07 	sts	0x0714, r24
  _udrie = udrie;
    3746:	85 e0       	ldi	r24, 0x05	; 5
    3748:	80 93 15 07 	sts	0x0715, r24
  _u2x = u2x;
    374c:	81 e0       	ldi	r24, 0x01	; 1
    374e:	80 93 16 07 	sts	0x0716, r24
// Preinstantiate Objects //////////////////////////////////////////////////////

#if defined(UBRRH) && defined(UBRRL)
  HardwareSerial Serial(&rx_buffer, &tx_buffer, &UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR, RXEN, TXEN, RXCIE, UDRIE, U2X);
#elif defined(UBRR0H) && defined(UBRR0L)
  HardwareSerial Serial(&rx_buffer, &tx_buffer, &UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0, RXEN0, TXEN0, RXCIE0, UDRIE0, U2X0);
    3752:	08 95       	ret

00003754 <main>:
/*
  main.cpp - Main loop for Arduino sketches
  Copyright (c) 2005-2013 Arduino Team.  All right reserved.
    3754:	cf 93       	push	r28
    3756:	df 93       	push	r29

  This library is free software; you can redistribute it and/or
    3758:	0e 94 cb 18 	call	0x3196	; 0x3196 <init>
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
    375c:	0e 94 89 03 	call	0x712	; 0x712 <setup>
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
    3760:	c5 ed       	ldi	r28, 0xD5	; 213
    3762:	d9 e1       	ldi	r29, 0x19	; 25

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

    3764:	0e 94 8a 04 	call	0x914	; 0x914 <loop>
  You should have received a copy of the GNU Lesser General Public
    3768:	20 97       	sbiw	r28, 0x00	; 0
    376a:	e1 f3       	breq	.-8      	; 0x3764 <main+0x10>
    376c:	0e 94 d5 19 	call	0x33aa	; 0x33aa <_Z14serialEventRunv>
    3770:	f9 cf       	rjmp	.-14     	; 0x3764 <main+0x10>

00003772 <__cxa_pure_virtual>:
}

void operator delete[](void * ptr)
{
  free(ptr);
}
    3772:	08 95       	ret

00003774 <_ZdlPv>:
  return malloc(size);
}

void operator delete(void * ptr)
{
  free(ptr);
    3774:	0e 94 d3 17 	call	0x2fa6	; 0x2fa6 <free>
}
    3778:	08 95       	ret

0000377a <_ZN5Print5writeEPKhj>:
  return n;
}

size_t Print::println(const Printable& x)
{
  size_t n = print(x);
    377a:	cf 92       	push	r12
    377c:	df 92       	push	r13
    377e:	ef 92       	push	r14
    3780:	ff 92       	push	r15
    3782:	0f 93       	push	r16
    3784:	1f 93       	push	r17
    3786:	cf 93       	push	r28
    3788:	df 93       	push	r29
    378a:	7c 01       	movw	r14, r24
    378c:	6b 01       	movw	r12, r22
    378e:	8a 01       	movw	r16, r20
    3790:	c0 e0       	ldi	r28, 0x00	; 0
    3792:	d0 e0       	ldi	r29, 0x00	; 0
    3794:	0f c0       	rjmp	.+30     	; 0x37b4 <_ZN5Print5writeEPKhj+0x3a>
    3796:	d6 01       	movw	r26, r12
    3798:	6d 91       	ld	r22, X+
    379a:	6d 01       	movw	r12, r26
    379c:	d7 01       	movw	r26, r14
    379e:	ed 91       	ld	r30, X+
    37a0:	fc 91       	ld	r31, X
    37a2:	01 90       	ld	r0, Z+
    37a4:	f0 81       	ld	r31, Z
    37a6:	e0 2d       	mov	r30, r0
    37a8:	c7 01       	movw	r24, r14
    37aa:	09 95       	icall
    37ac:	c8 0f       	add	r28, r24
    37ae:	d9 1f       	adc	r29, r25
    37b0:	01 50       	subi	r16, 0x01	; 1
    37b2:	10 40       	sbci	r17, 0x00	; 0
    37b4:	01 15       	cp	r16, r1
    37b6:	11 05       	cpc	r17, r1
    37b8:	71 f7       	brne	.-36     	; 0x3796 <_ZN5Print5writeEPKhj+0x1c>
    37ba:	ce 01       	movw	r24, r28
    37bc:	df 91       	pop	r29
    37be:	cf 91       	pop	r28
    37c0:	1f 91       	pop	r17
    37c2:	0f 91       	pop	r16
    37c4:	ff 90       	pop	r15
    37c6:	ef 90       	pop	r14
    37c8:	df 90       	pop	r13
    37ca:	cf 90       	pop	r12
    37cc:	08 95       	ret

000037ce <_ZN5Print7printlnEv>:
    37ce:	ef 92       	push	r14
    37d0:	ff 92       	push	r15
    37d2:	0f 93       	push	r16
    37d4:	1f 93       	push	r17
    37d6:	8c 01       	movw	r16, r24
    37d8:	dc 01       	movw	r26, r24
    37da:	ed 91       	ld	r30, X+
    37dc:	fc 91       	ld	r31, X
    37de:	01 90       	ld	r0, Z+
    37e0:	f0 81       	ld	r31, Z
    37e2:	e0 2d       	mov	r30, r0
    37e4:	6d e0       	ldi	r22, 0x0D	; 13
    37e6:	09 95       	icall
    37e8:	7c 01       	movw	r14, r24
    37ea:	d8 01       	movw	r26, r16
    37ec:	ed 91       	ld	r30, X+
    37ee:	fc 91       	ld	r31, X
    37f0:	01 90       	ld	r0, Z+
    37f2:	f0 81       	ld	r31, Z
    37f4:	e0 2d       	mov	r30, r0
    37f6:	c8 01       	movw	r24, r16
    37f8:	6a e0       	ldi	r22, 0x0A	; 10
    37fa:	09 95       	icall
    37fc:	9c 01       	movw	r18, r24
    37fe:	2e 0d       	add	r18, r14
    3800:	3f 1d       	adc	r19, r15
    3802:	c9 01       	movw	r24, r18
    3804:	1f 91       	pop	r17
    3806:	0f 91       	pop	r16
    3808:	ff 90       	pop	r15
    380a:	ef 90       	pop	r14
    380c:	08 95       	ret

0000380e <_ZN5Print5writeEPKc>:
    380e:	cf 93       	push	r28
    3810:	df 93       	push	r29
    3812:	ec 01       	movw	r28, r24
    3814:	61 15       	cp	r22, r1
    3816:	71 05       	cpc	r23, r1
    3818:	19 f4       	brne	.+6      	; 0x3820 <_ZN5Print5writeEPKc+0x12>
    381a:	20 e0       	ldi	r18, 0x00	; 0
    381c:	30 e0       	ldi	r19, 0x00	; 0
    381e:	0f c0       	rjmp	.+30     	; 0x383e <_ZN5Print5writeEPKc+0x30>
    3820:	db 01       	movw	r26, r22
    3822:	0d 90       	ld	r0, X+
    3824:	00 20       	and	r0, r0
    3826:	e9 f7       	brne	.-6      	; 0x3822 <_ZN5Print5writeEPKc+0x14>
    3828:	11 97       	sbiw	r26, 0x01	; 1
    382a:	a6 1b       	sub	r26, r22
    382c:	b7 0b       	sbc	r27, r23
    382e:	e8 81       	ld	r30, Y
    3830:	f9 81       	ldd	r31, Y+1	; 0x01
    3832:	02 80       	ldd	r0, Z+2	; 0x02
    3834:	f3 81       	ldd	r31, Z+3	; 0x03
    3836:	e0 2d       	mov	r30, r0
    3838:	ad 01       	movw	r20, r26
    383a:	09 95       	icall
    383c:	9c 01       	movw	r18, r24
    383e:	c9 01       	movw	r24, r18
    3840:	df 91       	pop	r29
    3842:	cf 91       	pop	r28
    3844:	08 95       	ret

00003846 <_ZN5Print11printNumberEmh>:
    3846:	4f 92       	push	r4
    3848:	5f 92       	push	r5
    384a:	7f 92       	push	r7
    384c:	8f 92       	push	r8
    384e:	9f 92       	push	r9
    3850:	af 92       	push	r10
    3852:	bf 92       	push	r11
    3854:	cf 92       	push	r12
    3856:	df 92       	push	r13
    3858:	ef 92       	push	r14
    385a:	ff 92       	push	r15
    385c:	0f 93       	push	r16
    385e:	1f 93       	push	r17
    3860:	df 93       	push	r29
    3862:	cf 93       	push	r28
    3864:	cd b7       	in	r28, 0x3d	; 61
    3866:	de b7       	in	r29, 0x3e	; 62
    3868:	a1 97       	sbiw	r28, 0x21	; 33
    386a:	0f b6       	in	r0, 0x3f	; 63
    386c:	f8 94       	cli
    386e:	de bf       	out	0x3e, r29	; 62
    3870:	0f be       	out	0x3f, r0	; 63
    3872:	cd bf       	out	0x3d, r28	; 61
    3874:	2c 01       	movw	r4, r24
    3876:	74 2e       	mov	r7, r20
    3878:	cb 01       	movw	r24, r22
    387a:	22 30       	cpi	r18, 0x02	; 2
    387c:	08 f4       	brcc	.+2      	; 0x3880 <_ZN5Print11printNumberEmh+0x3a>
    387e:	2a e0       	ldi	r18, 0x0A	; 10
    3880:	19 a2       	lds	r17, 0x99
    3882:	31 e2       	ldi	r19, 0x21	; 33
    3884:	c3 2e       	mov	r12, r19
    3886:	d1 2c       	mov	r13, r1
    3888:	cc 0e       	add	r12, r28
    388a:	dd 1e       	adc	r13, r29
    388c:	82 2e       	mov	r8, r18
    388e:	99 24       	eor	r9, r9
    3890:	aa 24       	eor	r10, r10
    3892:	bb 24       	eor	r11, r11
    3894:	67 2d       	mov	r22, r7
    3896:	75 2f       	mov	r23, r21
    3898:	a5 01       	movw	r20, r10
    389a:	94 01       	movw	r18, r8
    389c:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodsi4>
    38a0:	79 01       	movw	r14, r18
    38a2:	8a 01       	movw	r16, r20
    38a4:	c8 01       	movw	r24, r16
    38a6:	b7 01       	movw	r22, r14
    38a8:	a5 01       	movw	r20, r10
    38aa:	94 01       	movw	r18, r8
    38ac:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__mulsi3>
    38b0:	47 2d       	mov	r20, r7
    38b2:	46 1b       	sub	r20, r22
    38b4:	08 94       	sec
    38b6:	c1 08       	sbc	r12, r1
    38b8:	d1 08       	sbc	r13, r1
    38ba:	4a 30       	cpi	r20, 0x0A	; 10
    38bc:	14 f4       	brge	.+4      	; 0x38c2 <_ZN5Print11printNumberEmh+0x7c>
    38be:	40 5d       	subi	r20, 0xD0	; 208
    38c0:	01 c0       	rjmp	.+2      	; 0x38c4 <_ZN5Print11printNumberEmh+0x7e>
    38c2:	49 5c       	subi	r20, 0xC9	; 201
    38c4:	f6 01       	movw	r30, r12
    38c6:	40 83       	st	Z, r20
    38c8:	e1 14       	cp	r14, r1
    38ca:	f1 04       	cpc	r15, r1
    38cc:	01 05       	cpc	r16, r1
    38ce:	11 05       	cpc	r17, r1
    38d0:	21 f0       	breq	.+8      	; 0x38da <_ZN5Print11printNumberEmh+0x94>
    38d2:	7e 2c       	mov	r7, r14
    38d4:	5f 2d       	mov	r21, r15
    38d6:	c8 01       	movw	r24, r16
    38d8:	dd cf       	rjmp	.-70     	; 0x3894 <_ZN5Print11printNumberEmh+0x4e>
    38da:	c2 01       	movw	r24, r4
    38dc:	b6 01       	movw	r22, r12
    38de:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN5Print5writeEPKc>
    38e2:	a1 96       	adiw	r28, 0x21	; 33
    38e4:	0f b6       	in	r0, 0x3f	; 63
    38e6:	f8 94       	cli
    38e8:	de bf       	out	0x3e, r29	; 62
    38ea:	0f be       	out	0x3f, r0	; 63
    38ec:	cd bf       	out	0x3d, r28	; 61
    38ee:	cf 91       	pop	r28
    38f0:	df 91       	pop	r29
    38f2:	1f 91       	pop	r17
    38f4:	0f 91       	pop	r16
    38f6:	ff 90       	pop	r15
    38f8:	ef 90       	pop	r14
    38fa:	df 90       	pop	r13
    38fc:	cf 90       	pop	r12
    38fe:	bf 90       	pop	r11
    3900:	af 90       	pop	r10
    3902:	9f 90       	pop	r9
    3904:	8f 90       	pop	r8
    3906:	7f 90       	pop	r7
    3908:	5f 90       	pop	r5
    390a:	4f 90       	pop	r4
    390c:	08 95       	ret

0000390e <_ZN5Print5printEmi>:
    390e:	dc 01       	movw	r26, r24
    3910:	21 15       	cp	r18, r1
    3912:	31 05       	cpc	r19, r1
    3914:	41 f4       	brne	.+16     	; 0x3926 <_ZN5Print5printEmi+0x18>
    3916:	ed 91       	ld	r30, X+
    3918:	fc 91       	ld	r31, X
    391a:	01 90       	ld	r0, Z+
    391c:	f0 81       	ld	r31, Z
    391e:	e0 2d       	mov	r30, r0
    3920:	64 2f       	mov	r22, r20
    3922:	09 95       	icall
    3924:	08 95       	ret
    3926:	0e 94 23 1c 	call	0x3846	; 0x3846 <_ZN5Print11printNumberEmh>
    392a:	08 95       	ret

0000392c <_ZN5Print7printlnEmi>:
    392c:	ef 92       	push	r14
    392e:	ff 92       	push	r15
    3930:	0f 93       	push	r16
    3932:	1f 93       	push	r17
    3934:	7c 01       	movw	r14, r24
    3936:	0e 94 87 1c 	call	0x390e	; 0x390e <_ZN5Print5printEmi>
    393a:	8c 01       	movw	r16, r24
    393c:	c7 01       	movw	r24, r14
    393e:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN5Print7printlnEv>
    3942:	9c 01       	movw	r18, r24
    3944:	20 0f       	add	r18, r16
    3946:	31 1f       	adc	r19, r17
    3948:	c9 01       	movw	r24, r18
    394a:	1f 91       	pop	r17
    394c:	0f 91       	pop	r16
    394e:	ff 90       	pop	r15
    3950:	ef 90       	pop	r14
    3952:	08 95       	ret

00003954 <_ZN5Print5printEli>:
    3954:	cf 92       	push	r12
    3956:	df 92       	push	r13
    3958:	ef 92       	push	r14
    395a:	ff 92       	push	r15
    395c:	0f 93       	push	r16
    395e:	1f 93       	push	r17
    3960:	cf 93       	push	r28
    3962:	df 93       	push	r29
    3964:	ec 01       	movw	r28, r24
    3966:	6a 01       	movw	r12, r20
    3968:	7b 01       	movw	r14, r22
    396a:	21 15       	cp	r18, r1
    396c:	31 05       	cpc	r19, r1
    396e:	41 f4       	brne	.+16     	; 0x3980 <_ZN5Print5printEli+0x2c>
    3970:	e8 81       	ld	r30, Y
    3972:	f9 81       	ldd	r31, Y+1	; 0x01
    3974:	01 90       	ld	r0, Z+
    3976:	f0 81       	ld	r31, Z
    3978:	e0 2d       	mov	r30, r0
    397a:	64 2f       	mov	r22, r20
    397c:	09 95       	icall
    397e:	1f c0       	rjmp	.+62     	; 0x39be <_ZN5Print5printEli+0x6a>
    3980:	2a 30       	cpi	r18, 0x0A	; 10
    3982:	31 05       	cpc	r19, r1
    3984:	d1 f4       	brne	.+52     	; 0x39ba <_ZN5Print5printEli+0x66>
    3986:	77 ff       	sbrs	r23, 7
    3988:	17 c0       	rjmp	.+46     	; 0x39b8 <_ZN5Print5printEli+0x64>
    398a:	e8 81       	ld	r30, Y
    398c:	f9 81       	ldd	r31, Y+1	; 0x01
    398e:	01 90       	ld	r0, Z+
    3990:	f0 81       	ld	r31, Z
    3992:	e0 2d       	mov	r30, r0
    3994:	6d e2       	ldi	r22, 0x2D	; 45
    3996:	09 95       	icall
    3998:	8c 01       	movw	r16, r24
    399a:	44 27       	eor	r20, r20
    399c:	55 27       	eor	r21, r21
    399e:	ba 01       	movw	r22, r20
    39a0:	4c 19       	sub	r20, r12
    39a2:	5d 09       	sbc	r21, r13
    39a4:	6e 09       	sbc	r22, r14
    39a6:	7f 09       	sbc	r23, r15
    39a8:	ce 01       	movw	r24, r28
    39aa:	2a e0       	ldi	r18, 0x0A	; 10
    39ac:	0e 94 23 1c 	call	0x3846	; 0x3846 <_ZN5Print11printNumberEmh>
    39b0:	98 01       	movw	r18, r16
    39b2:	28 0f       	add	r18, r24
    39b4:	39 1f       	adc	r19, r25
    39b6:	04 c0       	rjmp	.+8      	; 0x39c0 <_ZN5Print5printEli+0x6c>
    39b8:	2a e0       	ldi	r18, 0x0A	; 10
    39ba:	0e 94 23 1c 	call	0x3846	; 0x3846 <_ZN5Print11printNumberEmh>
    39be:	9c 01       	movw	r18, r24
    39c0:	c9 01       	movw	r24, r18
    39c2:	df 91       	pop	r29
    39c4:	cf 91       	pop	r28
    39c6:	1f 91       	pop	r17
    39c8:	0f 91       	pop	r16
    39ca:	ff 90       	pop	r15
    39cc:	ef 90       	pop	r14
    39ce:	df 90       	pop	r13
    39d0:	cf 90       	pop	r12
    39d2:	08 95       	ret

000039d4 <_ZN5Print7printlnEii>:
    39d4:	cf 92       	push	r12
    39d6:	df 92       	push	r13
    39d8:	ef 92       	push	r14
    39da:	ff 92       	push	r15
    39dc:	0f 93       	push	r16
    39de:	1f 93       	push	r17
    39e0:	6c 01       	movw	r12, r24
    39e2:	7b 01       	movw	r14, r22
    39e4:	9a 01       	movw	r18, r20
    39e6:	00 27       	eor	r16, r16
    39e8:	f7 fc       	sbrc	r15, 7
    39ea:	00 95       	com	r16
    39ec:	10 2f       	mov	r17, r16
    39ee:	b8 01       	movw	r22, r16
    39f0:	a7 01       	movw	r20, r14
    39f2:	0e 94 aa 1c 	call	0x3954	; 0x3954 <_ZN5Print5printEli>
    39f6:	8c 01       	movw	r16, r24
    39f8:	c6 01       	movw	r24, r12
    39fa:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN5Print7printlnEv>
    39fe:	08 0f       	add	r16, r24
    3a00:	19 1f       	adc	r17, r25
    3a02:	c8 01       	movw	r24, r16
    3a04:	1f 91       	pop	r17
    3a06:	0f 91       	pop	r16
    3a08:	ff 90       	pop	r15
    3a0a:	ef 90       	pop	r14
    3a0c:	df 90       	pop	r13
    3a0e:	cf 90       	pop	r12
    3a10:	08 95       	ret

00003a12 <_ZN5Print5printEPKc>:
    3a12:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN5Print5writeEPKc>
    3a16:	08 95       	ret

00003a18 <_ZN5Print7printlnEPKc>:

size_t Print::println(const char c[])
{
  size_t n = print(c);
  n += println();
  return n;
    3a18:	ef 92       	push	r14
    3a1a:	ff 92       	push	r15
    3a1c:	0f 93       	push	r16
    3a1e:	1f 93       	push	r17
    3a20:	7c 01       	movw	r14, r24
{
  return write(str);
}

size_t Print::print(char c)
{
    3a22:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN5Print5writeEPKc>
    3a26:	8c 01       	movw	r16, r24
  size_t n = print(c);
  n += println();
  return n;
}

size_t Print::println(char c)
    3a28:	c7 01       	movw	r24, r14
    3a2a:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN5Print7printlnEv>
    3a2e:	08 0f       	add	r16, r24
    3a30:	19 1f       	adc	r17, r25
{
  size_t n = print(c);
    3a32:	c8 01       	movw	r24, r16
    3a34:	1f 91       	pop	r17
    3a36:	0f 91       	pop	r16
    3a38:	ff 90       	pop	r15
    3a3a:	ef 90       	pop	r14
    3a3c:	08 95       	ret

00003a3e <__mulsi3>:
    3a3e:	62 9f       	mul	r22, r18
    3a40:	d0 01       	movw	r26, r0
    3a42:	73 9f       	mul	r23, r19
    3a44:	f0 01       	movw	r30, r0
    3a46:	82 9f       	mul	r24, r18
    3a48:	e0 0d       	add	r30, r0
    3a4a:	f1 1d       	adc	r31, r1
    3a4c:	64 9f       	mul	r22, r20
    3a4e:	e0 0d       	add	r30, r0
    3a50:	f1 1d       	adc	r31, r1
    3a52:	92 9f       	mul	r25, r18
    3a54:	f0 0d       	add	r31, r0
    3a56:	83 9f       	mul	r24, r19
    3a58:	f0 0d       	add	r31, r0
    3a5a:	74 9f       	mul	r23, r20
    3a5c:	f0 0d       	add	r31, r0
    3a5e:	65 9f       	mul	r22, r21
    3a60:	f0 0d       	add	r31, r0
    3a62:	99 27       	eor	r25, r25
    3a64:	72 9f       	mul	r23, r18
    3a66:	b0 0d       	add	r27, r0
    3a68:	e1 1d       	adc	r30, r1
    3a6a:	f9 1f       	adc	r31, r25
    3a6c:	63 9f       	mul	r22, r19
    3a6e:	b0 0d       	add	r27, r0
    3a70:	e1 1d       	adc	r30, r1
    3a72:	f9 1f       	adc	r31, r25
    3a74:	bd 01       	movw	r22, r26
    3a76:	cf 01       	movw	r24, r30
    3a78:	11 24       	eor	r1, r1
    3a7a:	08 95       	ret

00003a7c <__divmodhi4>:
    3a7c:	97 fb       	bst	r25, 7
    3a7e:	09 2e       	mov	r0, r25
    3a80:	07 26       	eor	r0, r23
    3a82:	0a d0       	rcall	.+20     	; 0x3a98 <__divmodhi4_neg1>
    3a84:	77 fd       	sbrc	r23, 7
    3a86:	04 d0       	rcall	.+8      	; 0x3a90 <__divmodhi4_neg2>
    3a88:	49 d0       	rcall	.+146    	; 0x3b1c <__udivmodhi4>
    3a8a:	06 d0       	rcall	.+12     	; 0x3a98 <__divmodhi4_neg1>
    3a8c:	00 20       	and	r0, r0
    3a8e:	1a f4       	brpl	.+6      	; 0x3a96 <__divmodhi4_exit>

00003a90 <__divmodhi4_neg2>:
    3a90:	70 95       	com	r23
    3a92:	61 95       	neg	r22
    3a94:	7f 4f       	sbci	r23, 0xFF	; 255

00003a96 <__divmodhi4_exit>:
    3a96:	08 95       	ret

00003a98 <__divmodhi4_neg1>:
    3a98:	f6 f7       	brtc	.-4      	; 0x3a96 <__divmodhi4_exit>
    3a9a:	90 95       	com	r25
    3a9c:	81 95       	neg	r24
    3a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa0:	08 95       	ret

00003aa2 <__udivmodsi4>:
    3aa2:	a1 e2       	ldi	r26, 0x21	; 33
    3aa4:	1a 2e       	mov	r1, r26
    3aa6:	aa 1b       	sub	r26, r26
    3aa8:	bb 1b       	sub	r27, r27
    3aaa:	fd 01       	movw	r30, r26
    3aac:	0d c0       	rjmp	.+26     	; 0x3ac8 <__udivmodsi4_ep>

00003aae <__udivmodsi4_loop>:
    3aae:	aa 1f       	adc	r26, r26
    3ab0:	bb 1f       	adc	r27, r27
    3ab2:	ee 1f       	adc	r30, r30
    3ab4:	ff 1f       	adc	r31, r31
    3ab6:	a2 17       	cp	r26, r18
    3ab8:	b3 07       	cpc	r27, r19
    3aba:	e4 07       	cpc	r30, r20
    3abc:	f5 07       	cpc	r31, r21
    3abe:	20 f0       	brcs	.+8      	; 0x3ac8 <__udivmodsi4_ep>
    3ac0:	a2 1b       	sub	r26, r18
    3ac2:	b3 0b       	sbc	r27, r19
    3ac4:	e4 0b       	sbc	r30, r20
    3ac6:	f5 0b       	sbc	r31, r21

00003ac8 <__udivmodsi4_ep>:
    3ac8:	66 1f       	adc	r22, r22
    3aca:	77 1f       	adc	r23, r23
    3acc:	88 1f       	adc	r24, r24
    3ace:	99 1f       	adc	r25, r25
    3ad0:	1a 94       	dec	r1
    3ad2:	69 f7       	brne	.-38     	; 0x3aae <__udivmodsi4_loop>
    3ad4:	60 95       	com	r22
    3ad6:	70 95       	com	r23
    3ad8:	80 95       	com	r24
    3ada:	90 95       	com	r25
    3adc:	9b 01       	movw	r18, r22
    3ade:	ac 01       	movw	r20, r24
    3ae0:	bd 01       	movw	r22, r26
    3ae2:	cf 01       	movw	r24, r30
    3ae4:	08 95       	ret

00003ae6 <__divmodsi4>:
    3ae6:	97 fb       	bst	r25, 7
    3ae8:	09 2e       	mov	r0, r25
    3aea:	05 26       	eor	r0, r21
    3aec:	0e d0       	rcall	.+28     	; 0x3b0a <__divmodsi4_neg1>
    3aee:	57 fd       	sbrc	r21, 7
    3af0:	04 d0       	rcall	.+8      	; 0x3afa <__divmodsi4_neg2>
    3af2:	d7 df       	rcall	.-82     	; 0x3aa2 <__udivmodsi4>
    3af4:	0a d0       	rcall	.+20     	; 0x3b0a <__divmodsi4_neg1>
    3af6:	00 1c       	adc	r0, r0
    3af8:	38 f4       	brcc	.+14     	; 0x3b08 <__divmodsi4_exit>

00003afa <__divmodsi4_neg2>:
    3afa:	50 95       	com	r21
    3afc:	40 95       	com	r20
    3afe:	30 95       	com	r19
    3b00:	21 95       	neg	r18
    3b02:	3f 4f       	sbci	r19, 0xFF	; 255
    3b04:	4f 4f       	sbci	r20, 0xFF	; 255
    3b06:	5f 4f       	sbci	r21, 0xFF	; 255

00003b08 <__divmodsi4_exit>:
    3b08:	08 95       	ret

00003b0a <__divmodsi4_neg1>:
    3b0a:	f6 f7       	brtc	.-4      	; 0x3b08 <__divmodsi4_exit>
    3b0c:	90 95       	com	r25
    3b0e:	80 95       	com	r24
    3b10:	70 95       	com	r23
    3b12:	61 95       	neg	r22
    3b14:	7f 4f       	sbci	r23, 0xFF	; 255
    3b16:	8f 4f       	sbci	r24, 0xFF	; 255
    3b18:	9f 4f       	sbci	r25, 0xFF	; 255
    3b1a:	08 95       	ret

00003b1c <__udivmodhi4>:
    3b1c:	aa 1b       	sub	r26, r26
    3b1e:	bb 1b       	sub	r27, r27
    3b20:	51 e1       	ldi	r21, 0x11	; 17
    3b22:	07 c0       	rjmp	.+14     	; 0x3b32 <__udivmodhi4_ep>

00003b24 <__udivmodhi4_loop>:
    3b24:	aa 1f       	adc	r26, r26
    3b26:	bb 1f       	adc	r27, r27
    3b28:	a6 17       	cp	r26, r22
    3b2a:	b7 07       	cpc	r27, r23
    3b2c:	10 f0       	brcs	.+4      	; 0x3b32 <__udivmodhi4_ep>
    3b2e:	a6 1b       	sub	r26, r22
    3b30:	b7 0b       	sbc	r27, r23

00003b32 <__udivmodhi4_ep>:
    3b32:	88 1f       	adc	r24, r24
    3b34:	99 1f       	adc	r25, r25
    3b36:	5a 95       	dec	r21
    3b38:	a9 f7       	brne	.-22     	; 0x3b24 <__udivmodhi4_loop>
    3b3a:	80 95       	com	r24
    3b3c:	90 95       	com	r25
    3b3e:	bc 01       	movw	r22, r24
    3b40:	cd 01       	movw	r24, r26
    3b42:	08 95       	ret

00003b44 <__tablejump2__>:
    3b44:	ee 0f       	add	r30, r30
    3b46:	ff 1f       	adc	r31, r31

00003b48 <__tablejump__>:
    3b48:	05 90       	lpm	r0, Z+
    3b4a:	f4 91       	lpm	r31, Z
    3b4c:	e0 2d       	mov	r30, r0
    3b4e:	09 94       	ijmp

00003b50 <memcmp>:
    3b50:	fb 01       	movw	r30, r22
    3b52:	dc 01       	movw	r26, r24
    3b54:	04 c0       	rjmp	.+8      	; 0x3b5e <memcmp+0xe>
    3b56:	8d 91       	ld	r24, X+
    3b58:	01 90       	ld	r0, Z+
    3b5a:	80 19       	sub	r24, r0
    3b5c:	21 f4       	brne	.+8      	; 0x3b66 <memcmp+0x16>
    3b5e:	41 50       	subi	r20, 0x01	; 1
    3b60:	50 40       	sbci	r21, 0x00	; 0
    3b62:	c8 f7       	brcc	.-14     	; 0x3b56 <memcmp+0x6>
    3b64:	88 1b       	sub	r24, r24
    3b66:	99 0b       	sbc	r25, r25
    3b68:	08 95       	ret

00003b6a <strchr>:
    3b6a:	fc 01       	movw	r30, r24
    3b6c:	81 91       	ld	r24, Z+
    3b6e:	86 17       	cp	r24, r22
    3b70:	21 f0       	breq	.+8      	; 0x3b7a <strchr+0x10>
    3b72:	88 23       	and	r24, r24
    3b74:	d9 f7       	brne	.-10     	; 0x3b6c <strchr+0x2>
    3b76:	99 27       	eor	r25, r25
    3b78:	08 95       	ret
    3b7a:	31 97       	sbiw	r30, 0x01	; 1
    3b7c:	cf 01       	movw	r24, r30
    3b7e:	08 95       	ret

00003b80 <strncpy>:
    3b80:	fb 01       	movw	r30, r22
    3b82:	dc 01       	movw	r26, r24
    3b84:	41 50       	subi	r20, 0x01	; 1
    3b86:	50 40       	sbci	r21, 0x00	; 0
    3b88:	48 f0       	brcs	.+18     	; 0x3b9c <strncpy+0x1c>
    3b8a:	01 90       	ld	r0, Z+
    3b8c:	0d 92       	st	X+, r0
    3b8e:	00 20       	and	r0, r0
    3b90:	c9 f7       	brne	.-14     	; 0x3b84 <strncpy+0x4>
    3b92:	01 c0       	rjmp	.+2      	; 0x3b96 <strncpy+0x16>
    3b94:	1d 92       	st	X+, r1
    3b96:	41 50       	subi	r20, 0x01	; 1
    3b98:	50 40       	sbci	r21, 0x00	; 0
    3b9a:	e0 f7       	brcc	.-8      	; 0x3b94 <strncpy+0x14>
    3b9c:	08 95       	ret

00003b9e <__do_global_dtors>:
    3b9e:	10 e0       	ldi	r17, 0x00	; 0
    3ba0:	c8 ed       	ldi	r28, 0xD8	; 216
    3ba2:	d0 e0       	ldi	r29, 0x00	; 0
    3ba4:	04 c0       	rjmp	.+8      	; 0x3bae <__do_global_dtors+0x10>
    3ba6:	fe 01       	movw	r30, r28
    3ba8:	0e 94 a4 1d 	call	0x3b48	; 0x3b48 <__tablejump__>
    3bac:	22 96       	adiw	r28, 0x02	; 2
    3bae:	ca 3d       	cpi	r28, 0xDA	; 218
    3bb0:	d1 07       	cpc	r29, r17
    3bb2:	c9 f7       	brne	.-14     	; 0x3ba6 <__do_global_dtors+0x8>
    3bb4:	f8 94       	cli

00003bb6 <__stop_program>:
    3bb6:	ff cf       	rjmp	.-2      	; 0x3bb6 <__stop_program>
